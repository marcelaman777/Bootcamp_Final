{"cells":[{"cell_type":"markdown","metadata":{"id":"aaX4Qdo5mJuP"},"source":["##**PREDICCIÓN DE NATALIDAD SEGÚN FACTORES SOCIOECONÓMICOS**"]},{"cell_type":"markdown","metadata":{"id":"IpTovzMAmM0Y"},"source":["Eres parte de un equipo de investigación en demografía y te han solicitado desarrollar un modelo  basado en redes neuronales para predecir la tasa de natalidad en distintos países. Para ello, contarás  con un dataset que incluye información socioeconómica como el PIB per cápita, el acceso a servicios  de salud, la tasa de educación y otros factores relevantes.\n","\n","Tu objetivo es diseñar, entrenar y evaluar una red neuronal que permita predecir la tasa de natalidad  de manera precisa, analizando el impacto de diferentes variables en la predicción."]},{"cell_type":"markdown","metadata":{"id":"swyoUVX_md6Y"},"source":["OBJETIVOS DE LA EVALUACIÓN\n","1. Diseñar y entrenar una red neuronal para resolver un problema de regresión.\n","2. Aplicar conocimientos sobre funciones de activación, optimizadores, y estrategias para  \n","prevenir sobreajuste.\n","3. Evaluar y comparar los resultados obtenidos con diferentes configuraciones de la red.\n","4. Analizar la influencia de cada variable en la predicción y extraer conclusiones sobre patrones  \n","socioeconómicos globales."]},{"cell_type":"markdown","metadata":{"id":"UTksOUF4mkc1"},"source":["##**1. Carga y exploración de datos (1 punto)**\n","\n","- Carga el dataset proporcionado, que contiene información de distintos países sobre:  \n","    - PIB per cápita\n","    - Acceso a servicios de salud (% de la población)\n","    - Nivel educativo promedio\n","    - Tasa de empleo femenino\n","    - Edad promedio de maternidad\n","    - Índice de urbanización\n","    - Tasa de natalidad (variable objetivo)\n","- Analiza las correlaciones entre variables y visualiza su distribución."]},{"cell_type":"markdown","metadata":{"id":"l65l3r6laxTD"},"source":["###**Importación de librerías**"]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22417,"status":"ok","timestamp":1757543504284,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"Oe_Cqgve255p","outputId":"56449761-27f2-402a-8ea3-e699f28c3432"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","ruta_archivos = '/content/drive/MyDrive/bootcamp_ciencia_de_datos/evaluaciones/archivos/'"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10792,"status":"ok","timestamp":1757543515082,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"EwrAkfaBav3a","outputId":"7a0c30a6-5f74-4a37-b276-2f39e68528cd"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/400.9 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m \u001b[32m399.4/400.9 kB\u001b[0m \u001b[31m15.4 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m400.9/400.9 kB\u001b[0m \u001b[31m9.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h✅ Optuna instalado\n"]}],"source":["!pip install -q optuna # para optimización de hiperparámetros\n","print('✅ Optuna instalado')"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"xrfFzUMVodcF","executionInfo":{"status":"ok","timestamp":1757543546726,"user_tz":180,"elapsed":12979,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"outputs":[],"source":["# cargar librerías\n","\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.model_selection import train_test_split, StratifiedKFold\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.metrics import root_mean_squared_error, mean_squared_error, r2_score, mean_absolute_error\n","\n","from scipy.stats import shapiro\n","import statsmodels.api as sm\n","\n","from tensorflow.keras import layers, models, callbacks, regularizers, metrics, optimizers, activations # type: ignore\n","from tensorflow import random as tf_random # type: ignore\n","\n","import optuna\n","import shap\n","\n","import random\n","import os\n","random_seed = 42\n","os.environ['PYTHONHASHSEED'] = str(random_seed)"]},{"cell_type":"markdown","metadata":{"id":"jJehE4qtoqkk"},"source":["###**Carga del dataset**"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"executionInfo":{"elapsed":2729,"status":"ok","timestamp":1757543549481,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"W6x6VPf8nY_4","outputId":"4dda2fc5-280f-408f-d044-2c5f76ab3ada"},"outputs":[{"output_type":"stream","name":"stdout","text":["Dimension del dataset: (100, 7)\n","Atributos: ['PIB_per_capita', 'Acceso_Salud', 'Nivel_Educativo', 'Tasa_Empleo_Femenino', 'Edad_Maternidad', 'Urbanizacion']\n","Target: Tasa_Natalidad\n","\n","Vistazo al dataset:\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["        PIB_per_capita  Acceso_Salud  Nivel_Educativo  Tasa_Empleo_Femenino  \\\n","País                                                                          \n","País_1    25599.706537     51.571459        14.630475             32.584086   \n","País_2    57289.286853     81.820521         6.262099             56.567732   \n","País_3    45259.666800     65.717799         7.424431             57.031756   \n","País_4    37926.216631     75.428535        18.478313             61.871495   \n","País_5    13581.025224     95.378324        14.096436             66.304567   \n","\n","        Edad_Maternidad  Urbanizacion  Tasa_Natalidad  \n","País                                                   \n","País_1        21.546858     71.889703       38.613409  \n","País_2        33.538294     62.165782       19.211764  \n","País_3        27.578786     48.571657       26.556891  \n","País_4        32.396862     78.827701       29.177172  \n","País_5        24.800744     71.083870       40.000000  "],"text/html":["\n","  <div id=\"df-8131a3d7-6753-4ba4-a23e-5a241c8afbcb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PIB_per_capita</th>\n","      <th>Acceso_Salud</th>\n","      <th>Nivel_Educativo</th>\n","      <th>Tasa_Empleo_Femenino</th>\n","      <th>Edad_Maternidad</th>\n","      <th>Urbanizacion</th>\n","      <th>Tasa_Natalidad</th>\n","    </tr>\n","    <tr>\n","      <th>País</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>País_1</th>\n","      <td>25599.706537</td>\n","      <td>51.571459</td>\n","      <td>14.630475</td>\n","      <td>32.584086</td>\n","      <td>21.546858</td>\n","      <td>71.889703</td>\n","      <td>38.613409</td>\n","    </tr>\n","    <tr>\n","      <th>País_2</th>\n","      <td>57289.286853</td>\n","      <td>81.820521</td>\n","      <td>6.262099</td>\n","      <td>56.567732</td>\n","      <td>33.538294</td>\n","      <td>62.165782</td>\n","      <td>19.211764</td>\n","    </tr>\n","    <tr>\n","      <th>País_3</th>\n","      <td>45259.666800</td>\n","      <td>65.717799</td>\n","      <td>7.424431</td>\n","      <td>57.031756</td>\n","      <td>27.578786</td>\n","      <td>48.571657</td>\n","      <td>26.556891</td>\n","    </tr>\n","    <tr>\n","      <th>País_4</th>\n","      <td>37926.216631</td>\n","      <td>75.428535</td>\n","      <td>18.478313</td>\n","      <td>61.871495</td>\n","      <td>32.396862</td>\n","      <td>78.827701</td>\n","      <td>29.177172</td>\n","    </tr>\n","    <tr>\n","      <th>País_5</th>\n","      <td>13581.025224</td>\n","      <td>95.378324</td>\n","      <td>14.096436</td>\n","      <td>66.304567</td>\n","      <td>24.800744</td>\n","      <td>71.083870</td>\n","      <td>40.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8131a3d7-6753-4ba4-a23e-5a241c8afbcb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8131a3d7-6753-4ba4-a23e-5a241c8afbcb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8131a3d7-6753-4ba4-a23e-5a241c8afbcb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ebb04952-a075-43af-b32c-8fe751008e85\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ebb04952-a075-43af-b32c-8fe751008e85')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ebb04952-a075-43af-b32c-8fe751008e85 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"Pa\\u00eds\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"Pa\\u00eds_84\",\n          \"Pa\\u00eds_54\",\n          \"Pa\\u00eds_71\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PIB_per_capita\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16361.917605842558,\n        \"min\": 5303.716441798132,\n        \"max\": 59278.78151302845,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          8495.7092657313,\n          54215.50427352069,\n          47473.46231131616\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Acceso_Salud\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.65556262575421,\n        \"min\": 50.34760652655954,\n        \"max\": 99.28252270553004,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          93.86696766904905,\n          74.47263801387815,\n          83.87821809211411\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nivel_Educativo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.401393705913592,\n        \"min\": 5.07592375769328,\n        \"max\": 19.85080775156395,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          6.4097290976130346,\n          9.753830077344166,\n          17.140417332177705\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tasa_Empleo_Femenino\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.672610931835054,\n        \"min\": 30.719674431487796,\n        \"max\": 79.52525710003366,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          73.87360067635265,\n          38.14672135407149,\n          35.038900068871335\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Edad_Maternidad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.77901345867283,\n        \"min\": 20.16256477220448,\n        \"max\": 34.894471941789504,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          29.41337120126095,\n          33.59531577642104,\n          20.182317120347246\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Urbanizacion\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.827325193017145,\n        \"min\": 30.87267994007292,\n        \"max\": 89.98306039716783,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          49.72509661725049,\n          63.656278292123176,\n          60.83936934958865\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tasa_Natalidad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.379215044704344,\n        \"min\": 13.057745066179308,\n        \"max\": 40.0,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          40.0,\n          28.126850866015896,\n          24.59227702560733\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}],"source":["df = pd.read_csv(ruta_archivos+'dataset_natalidad.csv', index_col='País')\n","target = 'Tasa_Natalidad'\n","atributos = df.columns.drop(target).to_list()\n","print(f'Dimension del dataset: {df.shape}')\n","print(f'Atributos: {atributos}')\n","print(f'Target: {target}')\n","\n","print('\\nVistazo al dataset:\\n')\n","df.head()"]},{"cell_type":"markdown","metadata":{"id":"7eKCXNd5ox35"},"source":["###**EDA básico**"]},{"cell_type":"markdown","source":["Primero que todo, comentar que a primera vista se nota que el dataset es sintético. Por ejemplo, edad de maternidad en el País_1 tiene muchos decimales lo que es evidencia de generación con alguna función random. Lo mismo para el resto de las variables.\n","\n","Dicho esto, no veo razón para aplicar los resultados a datos estadísticos reales actuales y esperar que los resultados sean significativos."],"metadata":{"id":"WA1jZfigOOfF"}},{"cell_type":"code","source":["edad_marternidad_pais_1 = df.loc['País_1','Edad_Maternidad']\n","print(f'Edad de maternidad en País_1: {edad_marternidad_pais_1}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tgYwtyQ6OiAn","executionInfo":{"status":"ok","timestamp":1757543553561,"user_tz":180,"elapsed":46,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"10856f7e-45a2-47c6-a80f-056300bf5b30"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Edad de maternidad en País_1: 21.54685803253899\n"]}]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1757543554269,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"lt2r_Fm1o2wm","outputId":"8b401a82-f7f3-498c-95dd-094889d7074b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Cantidad de duplicados: 0\n","Cantidad de nulos: 0\n"]}],"source":["print(f'Cantidad de duplicados: {df.duplicated().sum()}')\n","print(f'Cantidad de nulos: {df.isna().sum().sum()}')"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":630},"executionInfo":{"elapsed":136,"status":"ok","timestamp":1757543555111,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"bkrHf52V4-Dz","outputId":"d0f511d4-45ef-4562-845b-3eb4fc509965"},"outputs":[{"output_type":"stream","name":"stdout","text":["Tipos de datos:\n","\n","<class 'pandas.core.frame.DataFrame'>\n","Index: 100 entries, País_1 to País_100\n","Data columns (total 7 columns):\n"," #   Column                Non-Null Count  Dtype  \n","---  ------                --------------  -----  \n"," 0   PIB_per_capita        100 non-null    float64\n"," 1   Acceso_Salud          100 non-null    float64\n"," 2   Nivel_Educativo       100 non-null    float64\n"," 3   Tasa_Empleo_Femenino  100 non-null    float64\n"," 4   Edad_Maternidad       100 non-null    float64\n"," 5   Urbanizacion          100 non-null    float64\n"," 6   Tasa_Natalidad        100 non-null    float64\n","dtypes: float64(7)\n","memory usage: 10.3+ KB\n","\n","Estadísticas básicas:\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["       PIB_per_capita  Acceso_Salud  Nivel_Educativo  Tasa_Empleo_Femenino  \\\n","count      100.000000    100.000000       100.000000            100.000000   \n","mean     30859.940886     74.891586        12.764020             54.557447   \n","std      16361.917606     14.655563         4.401394             14.672611   \n","min       5303.716442     50.347607         5.075924             30.719674   \n","25%      15626.041838     62.100226         9.153198             42.480746   \n","50%      30527.835008     75.281243        13.438324             55.485915   \n","75%      45161.171556     88.309180        16.285504             66.788876   \n","max      59278.781513     99.282523        19.850808             79.525257   \n","\n","       Edad_Maternidad  Urbanizacion  Tasa_Natalidad  \n","count       100.000000    100.000000      100.000000  \n","mean         27.740687     61.517985       32.547017  \n","std           4.779013     17.827325        7.379215  \n","min          20.162565     30.872680       13.057745  \n","25%          23.959023     45.331219       26.898090  \n","50%          27.880992     61.692122       34.584812  \n","75%          31.953263     78.668415       39.923995  \n","max          34.894472     89.983060       40.000000  "],"text/html":["\n","  <div id=\"df-687d410d-e136-45b9-a61e-57d6df262ebc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PIB_per_capita</th>\n","      <th>Acceso_Salud</th>\n","      <th>Nivel_Educativo</th>\n","      <th>Tasa_Empleo_Femenino</th>\n","      <th>Edad_Maternidad</th>\n","      <th>Urbanizacion</th>\n","      <th>Tasa_Natalidad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","      <td>100.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>30859.940886</td>\n","      <td>74.891586</td>\n","      <td>12.764020</td>\n","      <td>54.557447</td>\n","      <td>27.740687</td>\n","      <td>61.517985</td>\n","      <td>32.547017</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>16361.917606</td>\n","      <td>14.655563</td>\n","      <td>4.401394</td>\n","      <td>14.672611</td>\n","      <td>4.779013</td>\n","      <td>17.827325</td>\n","      <td>7.379215</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>5303.716442</td>\n","      <td>50.347607</td>\n","      <td>5.075924</td>\n","      <td>30.719674</td>\n","      <td>20.162565</td>\n","      <td>30.872680</td>\n","      <td>13.057745</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>15626.041838</td>\n","      <td>62.100226</td>\n","      <td>9.153198</td>\n","      <td>42.480746</td>\n","      <td>23.959023</td>\n","      <td>45.331219</td>\n","      <td>26.898090</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>30527.835008</td>\n","      <td>75.281243</td>\n","      <td>13.438324</td>\n","      <td>55.485915</td>\n","      <td>27.880992</td>\n","      <td>61.692122</td>\n","      <td>34.584812</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>45161.171556</td>\n","      <td>88.309180</td>\n","      <td>16.285504</td>\n","      <td>66.788876</td>\n","      <td>31.953263</td>\n","      <td>78.668415</td>\n","      <td>39.923995</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>59278.781513</td>\n","      <td>99.282523</td>\n","      <td>19.850808</td>\n","      <td>79.525257</td>\n","      <td>34.894472</td>\n","      <td>89.983060</td>\n","      <td>40.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-687d410d-e136-45b9-a61e-57d6df262ebc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-687d410d-e136-45b9-a61e-57d6df262ebc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-687d410d-e136-45b9-a61e-57d6df262ebc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7648370b-0950-48dd-9abe-65189fe723cc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7648370b-0950-48dd-9abe-65189fe723cc')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7648370b-0950-48dd-9abe-65189fe723cc button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"PIB_per_capita\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20055.455765473518,\n        \"min\": 100.0,\n        \"max\": 59278.78151302845,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          30859.940885801512,\n          30527.83500792209,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Acceso_Salud\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.418251173411875,\n        \"min\": 14.65556262575421,\n        \"max\": 100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          74.89158615775115,\n          75.28124285983911,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nivel_Educativo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31.708424193161967,\n        \"min\": 4.401393705913592,\n        \"max\": 100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12.764019961208668,\n          13.438323993453663,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tasa_Empleo_Femenino\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27.08775384758688,\n        \"min\": 14.672610931835054,\n        \"max\": 100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          54.557447040251716,\n          55.48591517203208,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Edad_Maternidad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.24313506729294,\n        \"min\": 4.77901345867283,\n        \"max\": 100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          27.740687346268377,\n          27.880992149423363,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Urbanizacion\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.511724278242013,\n        \"min\": 17.827325193017145,\n        \"max\": 100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          61.51798468003809,\n          61.69212201743741,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tasa_Natalidad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.19462800864042,\n        \"min\": 7.379215044704344,\n        \"max\": 100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          32.54701726894136,\n          34.58481190730362,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}],"source":["# tipos de dato\n","print(f'Tipos de datos:\\n')\n","df.info()\n","\n","print()\n","\n","# estadísticas básicas\n","print(f'Estadísticas básicas:\\n')\n","df.describe()"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":3755,"status":"ok","timestamp":1757543559162,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"oYksdSeb5sXx","outputId":"26cf0f20-fe3d-4645-953a-e997c05d798c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Test de normalidad de Shapiro-Wilk con un nivel de significancia del 5%\n","  - \"PIB_per_capita\": p_value = 0.00 --> no es normal\n","  - \"Acceso_Salud\": p_value = 0.00 --> no es normal\n","  - \"Nivel_Educativo\": p_value = 0.00 --> no es normal\n","  - \"Tasa_Empleo_Femenino\": p_value = 0.00 --> no es normal\n","  - \"Edad_Maternidad\": p_value = 0.00 --> no es normal\n","  - \"Urbanizacion\": p_value = 0.00 --> no es normal\n","  - \"Tasa_Natalidad\": p_value = 0.00 --> no es normal\n","\n","\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x900 with 21 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# vamos a revisar normalidad\n","# test de hipótesis con un nivel de significancia del 5%\n","\n","alpha = 0.05\n","pvalues = {}\n","print(f'Test de normalidad de Shapiro-Wilk con un nivel de significancia del {alpha:.0%}')\n","for col in atributos+[target]:\n","    _, pvalues[col] = shapiro(df[col])\n","    mensaje = 'no es normal' if pvalues[col] < alpha else 'no se descarta que sea normal'\n","    print(f'  - \"{col}\": p_value = {pvalues[col]:.2f} --> {mensaje}')\n","print('\\n\\n')\n","\n","fig, axs = plt.subplots(3, len(atributos+[target]), figsize=(15, 9))\n","axs = axs.ravel()\n","\n","for i, col in enumerate(atributos+[target]):\n","    sns.histplot(df[col], kde=True, ax=axs[i], bins='sturges')\n","    axs[i].set_title(col, weight='bold', fontsize=8)\n","    axs[i].set_xlabel('')\n","    axs[i].set_ylabel('')\n","\n","    j = i + len(atributos+[target])\n","    sm.qqplot(df[col], ax=axs[j], fit=True, line=\"45\")\n","    axs[j].set_title(f'{col}\\n(p-value: {pvalues[col]:.3f})', weight='bold', fontsize=8)\n","    axs[j].set_xlabel('')\n","    axs[j].set_ylabel('')\n","\n","    j = i + len(atributos+[target])*2\n","    sns.boxplot(data=df, x=col, ax=axs[j], width=0.3)\n","    axs[j].set_title(col, weight='bold', fontsize=8)\n","    axs[j].set_xlabel('')\n","    axs[j].set_yticks([])\n","\n","axs[0].set_ylabel('Count')\n","axs[len(atributos)+1].set_ylabel('Sample Quantiles')\n","\n","plt.suptitle('Distribución de las variables y el target', weight='bold', fontsize=12)\n","plt.subplots_adjust(hspace=0.5)\n","\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"3RtIY7bK6Oub"},"source":["Observando los boxplots, no se visualizan outliers."]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":11800,"status":"ok","timestamp":1757543570993,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"oIKCDSKwJRhS","outputId":"fefb5d39-b8f2-49a5-8113-9a6077c36db4"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2100x2100 with 56 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# veamos las relaciones entre las variables y el target\n","\n","sns.pairplot(df, kind='reg', diag_kind='hist', height=3, plot_kws={'scatter_kws': {'s': 5}})\n","plt.suptitle('Relación entre variables y el target', weight='bold', fontsize=20, y=1.02)\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","source":["Observando el gráfico, destaca la correlación negativa entre el PIB per cápita con la tasa de natalidad.\n","\n","También llama mucho la atención la cota superior que coloraron a la tasa de natalidad en el valor 40, nueva evidencia de un dataset sintético. Podría, por ejemplo, predecir los valores de la tasa de natalidad y luego, acotar superiormente los valores por 40."],"metadata":{"id":"KvVcZeXpw1Ad"}},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"executionInfo":{"elapsed":397,"status":"ok","timestamp":1757543594815,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"9BvP8V_rJSbu","outputId":"4ca63c2d-9ddb-4f66-ef34-484f23436ddf"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x300 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# revisar la correlación de Pearson\n","fig = plt.figure(figsize=(6, 3))\n","corr = df.corr(method='pearson')\n","sns.heatmap(corr, annot=True, cmap='coolwarm', vmax=1., vmin=-1., fmt='.2f')\n","plt.title('Correlación de Pearson', weight='bold')\n","plt.xticks(rotation=30, ha='right')\n","plt.show()"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":708},"executionInfo":{"elapsed":56,"status":"ok","timestamp":1757543595147,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"QGJ1DPaIJe7I","outputId":"875b972e-b1b4-4afb-ba74-6edab0ff9115"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Col1                  Col2  Correlación  \\\n","0         PIB_per_capita        Tasa_Natalidad    -0.866007   \n","1         Tasa_Natalidad       Edad_Maternidad    -0.300375   \n","2         Tasa_Natalidad  Tasa_Empleo_Femenino     0.242314   \n","3           Urbanizacion          Acceso_Salud    -0.228878   \n","4   Tasa_Empleo_Femenino          Urbanizacion    -0.218485   \n","5        Nivel_Educativo  Tasa_Empleo_Femenino    -0.214816   \n","6         PIB_per_capita  Tasa_Empleo_Femenino    -0.211882   \n","7         Tasa_Natalidad          Urbanizacion     0.204841   \n","8        Edad_Maternidad  Tasa_Empleo_Femenino     0.187530   \n","9           Acceso_Salud       Nivel_Educativo    -0.146354   \n","10          Urbanizacion       Edad_Maternidad    -0.133339   \n","11       Nivel_Educativo        Tasa_Natalidad    -0.124269   \n","12        PIB_per_capita       Edad_Maternidad     0.120075   \n","13       Edad_Maternidad          Acceso_Salud    -0.082393   \n","14        Tasa_Natalidad          Acceso_Salud     0.076261   \n","15          Urbanizacion        PIB_per_capita     0.069321   \n","16       Nivel_Educativo        PIB_per_capita    -0.037654   \n","17       Edad_Maternidad       Nivel_Educativo    -0.034695   \n","18        PIB_per_capita          Acceso_Salud    -0.034033   \n","19          Urbanizacion       Nivel_Educativo    -0.021957   \n","20          Acceso_Salud  Tasa_Empleo_Femenino    -0.011783   \n","\n","                              Interpretación  \n","0                Correlación negativa fuerte  \n","1                 Correlación negativa débil  \n","2                 Correlación positiva débil  \n","3                 Correlación negativa débil  \n","4                 Correlación negativa débil  \n","5                 Correlación negativa débil  \n","6                 Correlación negativa débil  \n","7                 Correlación positiva débil  \n","8   Correlación positiva débil o inexistente  \n","9   Correlación negativa débil o inexistente  \n","10  Correlación negativa débil o inexistente  \n","11  Correlación negativa débil o inexistente  \n","12  Correlación positiva débil o inexistente  \n","13  Correlación negativa débil o inexistente  \n","14  Correlación positiva débil o inexistente  \n","15  Correlación positiva débil o inexistente  \n","16  Correlación negativa débil o inexistente  \n","17  Correlación negativa débil o inexistente  \n","18  Correlación negativa débil o inexistente  \n","19  Correlación negativa débil o inexistente  \n","20  Correlación negativa débil o inexistente  "],"text/html":["\n","  <div id=\"df-2b773ee3-4aab-44db-b40b-84e5e28844e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Col1</th>\n","      <th>Col2</th>\n","      <th>Correlación</th>\n","      <th>Interpretación</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>PIB_per_capita</td>\n","      <td>Tasa_Natalidad</td>\n","      <td>-0.866007</td>\n","      <td>Correlación negativa fuerte</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Tasa_Natalidad</td>\n","      <td>Edad_Maternidad</td>\n","      <td>-0.300375</td>\n","      <td>Correlación negativa débil</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Tasa_Natalidad</td>\n","      <td>Tasa_Empleo_Femenino</td>\n","      <td>0.242314</td>\n","      <td>Correlación positiva débil</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Urbanizacion</td>\n","      <td>Acceso_Salud</td>\n","      <td>-0.228878</td>\n","      <td>Correlación negativa débil</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Tasa_Empleo_Femenino</td>\n","      <td>Urbanizacion</td>\n","      <td>-0.218485</td>\n","      <td>Correlación negativa débil</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Nivel_Educativo</td>\n","      <td>Tasa_Empleo_Femenino</td>\n","      <td>-0.214816</td>\n","      <td>Correlación negativa débil</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>PIB_per_capita</td>\n","      <td>Tasa_Empleo_Femenino</td>\n","      <td>-0.211882</td>\n","      <td>Correlación negativa débil</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Tasa_Natalidad</td>\n","      <td>Urbanizacion</td>\n","      <td>0.204841</td>\n","      <td>Correlación positiva débil</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Edad_Maternidad</td>\n","      <td>Tasa_Empleo_Femenino</td>\n","      <td>0.187530</td>\n","      <td>Correlación positiva débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Acceso_Salud</td>\n","      <td>Nivel_Educativo</td>\n","      <td>-0.146354</td>\n","      <td>Correlación negativa débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Urbanizacion</td>\n","      <td>Edad_Maternidad</td>\n","      <td>-0.133339</td>\n","      <td>Correlación negativa débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Nivel_Educativo</td>\n","      <td>Tasa_Natalidad</td>\n","      <td>-0.124269</td>\n","      <td>Correlación negativa débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>PIB_per_capita</td>\n","      <td>Edad_Maternidad</td>\n","      <td>0.120075</td>\n","      <td>Correlación positiva débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Edad_Maternidad</td>\n","      <td>Acceso_Salud</td>\n","      <td>-0.082393</td>\n","      <td>Correlación negativa débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Tasa_Natalidad</td>\n","      <td>Acceso_Salud</td>\n","      <td>0.076261</td>\n","      <td>Correlación positiva débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Urbanizacion</td>\n","      <td>PIB_per_capita</td>\n","      <td>0.069321</td>\n","      <td>Correlación positiva débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Nivel_Educativo</td>\n","      <td>PIB_per_capita</td>\n","      <td>-0.037654</td>\n","      <td>Correlación negativa débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Edad_Maternidad</td>\n","      <td>Nivel_Educativo</td>\n","      <td>-0.034695</td>\n","      <td>Correlación negativa débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>PIB_per_capita</td>\n","      <td>Acceso_Salud</td>\n","      <td>-0.034033</td>\n","      <td>Correlación negativa débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Urbanizacion</td>\n","      <td>Nivel_Educativo</td>\n","      <td>-0.021957</td>\n","      <td>Correlación negativa débil o inexistente</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Acceso_Salud</td>\n","      <td>Tasa_Empleo_Femenino</td>\n","      <td>-0.011783</td>\n","      <td>Correlación negativa débil o inexistente</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b773ee3-4aab-44db-b40b-84e5e28844e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2b773ee3-4aab-44db-b40b-84e5e28844e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2b773ee3-4aab-44db-b40b-84e5e28844e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-486f272d-4f53-49c5-8ab2-bdecbdbdce3c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-486f272d-4f53-49c5-8ab2-bdecbdbdce3c')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-486f272d-4f53-49c5-8ab2-bdecbdbdce3c button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_9e596ff3-0f9a-428b-a1c0-54060ff4580d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('correlaciones_sorted')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9e596ff3-0f9a-428b-a1c0-54060ff4580d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('correlaciones_sorted');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"correlaciones_sorted","summary":"{\n  \"name\": \"correlaciones_sorted\",\n  \"rows\": 21,\n  \"fields\": [\n    {\n      \"column\": \"Col1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"PIB_per_capita\",\n          \"Tasa_Natalidad\",\n          \"Edad_Maternidad\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Col2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Tasa_Natalidad\",\n          \"Edad_Maternidad\",\n          \"Nivel_Educativo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Correlaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.23552685232724763,\n        \"min\": -0.8660067573457187,\n        \"max\": 0.24231394482961047,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          -0.8660067573457187,\n          -0.03469450631485385,\n          0.06932148960599954\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interpretaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Correlaci\\u00f3n negativa d\\u00e9bil\",\n          \"Correlaci\\u00f3n negativa d\\u00e9bil o inexistente\",\n          \"Correlaci\\u00f3n positiva d\\u00e9bil\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}],"source":["def interpreta_correlacion(x):\n","    abs_x = abs(x)\n","    signo = 'negativa' if np.sign(x) == -1 else 'positiva'\n","    if 0.8 <= abs_x <= 1:\n","        return f'Correlación {signo} fuerte'\n","    if 0.5 <= abs_x < 0.8:\n","        return f'Correlación {signo} moderada'\n","    if 0.2 <= abs_x < 0.5:\n","        return f'Correlación {signo} débil'\n","    return f'Correlación {signo} débil o inexistente'\n","\n","\n","correlaciones_sorted = corr.unstack().reset_index().sort_values(0, ascending=False).reset_index(drop=True).loc[len(corr):,:].reset_index(drop=True)[::2]\n","correlaciones_sorted.columns = ['Col1', 'Col2', 'Correlación']\n","correlaciones_sorted = correlaciones_sorted.sort_values('Correlación', key=abs, ascending=False).reset_index(drop=True)\n","correlaciones_sorted['Interpretación'] = correlaciones_sorted['Correlación'].map(interpreta_correlacion)\n","correlaciones_sorted"]},{"cell_type":"markdown","metadata":{"id":"VhdwUcQ_xqDo"},"source":["###**Regresión lineal simple**"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":57,"status":"ok","timestamp":1757543596567,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"sPv_20-AxpLZ","outputId":"01303839-cb29-4bf6-b9ef-5579744ed293"},"outputs":[{"output_type":"stream","name":"stdout","text":["                            OLS Regression Results                            \n","==============================================================================\n","Dep. Variable:         Tasa_Natalidad   R-squared:                       0.892\n","Model:                            OLS   Adj. R-squared:                  0.885\n","Method:                 Least Squares   F-statistic:                     127.6\n","Date:                Wed, 10 Sep 2025   Prob (F-statistic):           1.19e-42\n","Time:                        22:33:17   Log-Likelihood:                -230.12\n","No. Observations:                 100   AIC:                             474.2\n","Df Residuals:                      93   BIC:                             492.5\n","Df Model:                           6                                         \n","Covariance Type:            nonrobust                                         \n","========================================================================================\n","                           coef    std err          t      P>|t|      [0.025      0.975]\n","----------------------------------------------------------------------------------------\n","Intercept               32.5470      0.251    129.896      0.000      32.049      33.045\n","PIB_per_capita          -6.1351      0.261    -23.476      0.000      -6.654      -5.616\n","Acceso_Salud             0.6072      0.264      2.302      0.024       0.084       1.131\n","Nivel_Educativo         -0.8371      0.262     -3.190      0.002      -1.358      -0.316\n","Tasa_Empleo_Femenino     1.0184      0.276      3.687      0.000       0.470       1.567\n","Edad_Maternidad         -1.3599      0.261     -5.201      0.000      -1.879      -0.841\n","Urbanizacion             2.0911      0.268      7.800      0.000       1.559       2.623\n","==============================================================================\n","Omnibus:                        5.461   Durbin-Watson:                   2.025\n","Prob(Omnibus):                  0.065   Jarque-Bera (JB):                3.167\n","Skew:                          -0.227   Prob(JB):                        0.205\n","Kurtosis:                       2.256   Cond. No.                         1.65\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"]}],"source":["# veamos qué resultados arroja la regresión lineal con stats models\n","\n","# normalizar los datos pues hay problemas numéricos si no se hace\n","df_norm = pd.DataFrame(StandardScaler().fit_transform(df[atributos]), columns=atributos)\n","df_norm[target] = df[target].values\n","\n","formula = 'Tasa_Natalidad ~ ' + ' + '.join(atributos)\n","linreg = sm.formula.ols(data=df_norm, formula=formula).fit()\n","print(linreg.summary())"]},{"cell_type":"markdown","metadata":{"id":"Uht-Cpzy3d-Q"},"source":["Al nivel de significancia del 0.05:\n","- el modelo es significativo (Prob (F-statistic) = 1.19e-42)\n","- los coeficientes del intercepto y las variables independientes también son significativos.\n","- $R^2 = 0.892$ es el valor base que buscaremos superar con la regresión con redes neuronales (usando validación cruzada), al capturar patrones no lineales no vistos por la regresión lineal normal."]},{"cell_type":"markdown","metadata":{"id":"fsiGzB8Gmquu"},"source":["##**2. Diseño y entrenamiento del modelo (5 puntos)**\n","\n","- Diseña una red neuronal con la siguiente estructura:  \n","    - Capa de entrada con tantas neuronas como variables predictoras.\n","    - Mínimo de 2 capas ocultas con activaciones adecuadas.\n","    - Capa de salida con una neurona para predecir la tasa de natalidad.\n","- Aplica diferentes funciones de activación y evalúa su impacto.\n","- Utiliza optimizadores adecuados y experimenta con diferentes valores de learning rate.\n","- Aplica regularización (dropout o L2) para evitar el sobreajuste.\n","- Entrena el modelo utilizando una función de pérdida adecuada para problemas de regresión."]},{"cell_type":"markdown","metadata":{"id":"xIDDtAeSqDMx"},"source":["###**Normalización de datos**"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"executionInfo":{"elapsed":232,"status":"ok","timestamp":1757543611727,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"lgDC_cvWC2IJ","outputId":"08aab0c2-7e50-4625-a5c3-3d88881015ad"},"outputs":[{"output_type":"stream","name":"stdout","text":["Tasa_Natalidad\n","5    44\n","4    19\n","3    14\n","1    10\n","2    10\n","0     3\n","Name: count, dtype: int64\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# dada la distribución de la variable dependiente, voy a crear bins para que haya una mejor\n","# representación de los distintos valores en los conjuntos de entrenamiento, validación y testeo\n","# bins = 6 asegura que hayan al menos tres registros por grupo, ideal para tener al menos un dato\n","# en cada uno de los conjuntos de entrenamiento, validación y testeo\n","\n","stratify = pd.cut(df[target], bins=6, labels=False)\n","print(stratify.value_counts()) # al menos hay tres registros por grupo\n","\n","plt.figure(figsize=(6, 3))\n","sns.histplot(df[target], kde=True, bins=6)\n","plt.title('Histograma para ' + target, weight='bold', fontsize=10)\n","plt.xlabel('')\n","plt.ylabel('Count')\n","plt.show()"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":46,"status":"ok","timestamp":1757543613924,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"aKLeklcwnn0e","outputId":"e489b117-a861-42c8-db2b-ab641878f5ba"},"outputs":[{"output_type":"stream","name":"stdout","text":["Training: 70 muestras (70.0%)\n","Validation: 15 muestras (15.0%)\n","Test: 15 muestras (15.0%)\n"]}],"source":["# crear train, val and test sets\n","# 70% train - 15% valid - 15% test\n","\n","X_train, X_val_test, y_train, y_val_test = train_test_split(df[atributos], df.Tasa_Natalidad, test_size=0.3, random_state=42, stratify=stratify)\n","X_val, X_test, y_val, y_test = train_test_split(X_val_test, y_val_test, test_size=0.5, random_state=42)\n","\n","print(f\"Training: {X_train.shape[0]} muestras ({X_train.shape[0]/len(df):.1%})\")\n","print(f\"Validation: {X_val.shape[0]} muestras ({X_val.shape[0]/len(df):.1%})\")\n","print(f\"Test: {X_test.shape[0]} muestras ({X_test.shape[0]/len(df):.1%})\")"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"fxQgcD5JpSRz","executionInfo":{"status":"ok","timestamp":1757543616681,"user_tz":180,"elapsed":49,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"outputs":[],"source":["# normalizar datos usando Normalizacion de TensorFlow\n","\n","normalizer = layers.Normalization(axis=-1)\n","normalizer.adapt(X_train.values)  # ajustar con el train set\n","\n","# normalizar los 3's datasets\n","X_train_norm = normalizer(X_train.values)\n","X_val_norm = normalizer(X_val.values)\n","X_test_norm = normalizer(X_test.values)"]},{"cell_type":"markdown","metadata":{"id":"yfE8U--DqOK8"},"source":["###**Diseño y Entrenamiento de NN base**"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"Y4xDPZlek5re","executionInfo":{"status":"ok","timestamp":1757543621320,"user_tz":180,"elapsed":8,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"outputs":[],"source":["# Diseñar red neuronal con configuración que servirá como línea base\n","\n","def disena_nn(act_fun: activations, drop_rate: float,\n","              optimizador: optimizers, learn_rate: float,\n","              verbose_summary:bool=False) -> models.Sequential:\n","    '''\n","    Diseña una red neuronal para regresión.\n","    Params:\n","    - input_dim: dimensión de los datos de entrada\n","    - act_fun: función de activación para capas ocultas (ej: 'relu', 'swish')\n","    - drop_rate: tasa de dropout para regularización (0-1)\n","    - optimizador: clase del optimizador (ej: optimizers.Adam)\n","    - learn_rate: tasa de aprendizaje\n","    - verbose_summary: si se debe imprimir el summary del modelo\n","\n","    Returns:\n","    - Modelo Secuencial compilado y listo para entrenar\n","    '''\n","\n","    #------------------------------------------------------------------\n","    # Crear modelo\n","    modelo = models.Sequential()\n","\n","    # Capa de entrada\n","    modelo.add(layers.Input(shape=(len(atributos),)))\n","\n","    # Primera capa oculta (64 neuronas)\n","    # activación es parámetro act_fun\n","    modelo.add(layers.Dense(64, use_bias=False))\n","    modelo.add(layers.BatchNormalization())\n","    modelo.add(layers.Activation(act_fun))\n","    modelo.add(layers.Dropout(drop_rate))\n","\n","    # Segunda capa oculta (64 neuronas)\n","    # activación es parámetro act_fun\n","    modelo.add(layers.Dense(64, use_bias=False))\n","    modelo.add(layers.BatchNormalization())\n","    modelo.add(layers.Activation(act_fun))\n","    modelo.add(layers.Dropout(drop_rate))\n","\n","    # Tercera capa oculta (64 neuronas)\n","    # activación es 'relu'\n","    modelo.add(layers.Dense(64, use_bias=False))\n","    modelo.add(layers.BatchNormalization())\n","    modelo.add(layers.Activation('relu'))\n","    modelo.add(layers.Dropout(drop_rate))\n","\n","    # Capa de salida (1 neurona, sin activación)\n","    modelo.add(layers.Dense(1))\n","\n","    #------------------------------------------------------------------\n","    # Compilar modelo\n","\n","    # Configurar optimizador\n","    mi_optimizador = optimizador(learning_rate=learn_rate)\n","\n","    modelo.compile(\n","        optimizer=mi_optimizador,\n","        loss='mse',\n","        metrics=['r2_score', 'mse', 'mae']\n","    )\n","\n","    #------------------------------------------------------------------\n","    # Configurar opción de visualización de resumen\n","    if verbose_summary:\n","        modelo.summary()\n","\n","    return modelo"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"fEROhK4ox64Z","executionInfo":{"status":"ok","timestamp":1757543625048,"user_tz":180,"elapsed":3,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"outputs":[],"source":["# define Callback para mostrar resultados en pantalla cada print_every epochs\n","\n","class PrintProgressCallback(callbacks.Callback):\n","    def __init__(self, print_every=100):\n","        super().__init__()\n","        self.print_every = print_every\n","\n","    def on_epoch_end(self, epoch, logs=None):\n","        if (epoch + 1) % self.print_every == 0:\n","            print(f\"Epoch {epoch + 1}\")\n","            if logs:\n","                print(f\"  Logs: {logs}\")"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"pX-DejR69J6l","executionInfo":{"status":"ok","timestamp":1757543627567,"user_tz":180,"elapsed":31,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"outputs":[],"source":["# definir función para entrenar el modelo base\n","\n","def entrena_nn(nombre_modelo: str,\n","               act_fun: activations, drop_rate: float,\n","               optimizador: optimizers, learn_rate: float,\n","               batch_size: int,\n","               verbose_summary: bool = False,\n","               patience: int = 100,\n","               verbose_entrenamiento: bool = 100,\n","               random_seed: int = 42,\n","               ) -> pd.DataFrame:\n","    '''\n","    Entrena una red neuronal con la configuración especificada.\n","    Params:\n","    - nombre_modelo: nombre del modelo para guardar\n","    - act_fun: función de activación para capas ocultas (ej: 'relu', 'swish')\n","    - drop_rate: tasa de dropout para regularización (ej: 0-0.5)\n","    - optimizador: clase del optimizador (ej: optimizers.Adam)\n","    - learn_rate: tasa de aprendizaje\n","    - batch_size: tamaño del batch\n","    - verbose_summary: si muestra el summary del modelo\n","    - patience: número máximo de epochs sin mejora en el conjunto de validación\n","    - verbose_entrenamiento: cada cuantas epochs se imprimen los resultados del entrenamiento\n","    - random_seed: semilla para reproducibilidad\n","\n","    Returns:\n","    - DataFrame con métricas del entrenamiento para train, val y test sets: Loss, R2, RMSE, MAE\n","    '''\n","\n","    # setear semillas para reproducibilidad\n","    random.seed(random_seed)\n","    np.random.seed(random_seed)\n","    tf_random.set_seed(random_seed)\n","\n","    # crear modelo\n","    modelo = disena_nn(\n","        act_fun=act_fun,\n","        drop_rate=drop_rate,\n","        optimizador=optimizador,\n","        learn_rate=learn_rate,\n","        verbose_summary=verbose_summary\n","    )\n","\n","    # Callback para early stopping\n","    # se monitoreará R2 del conjunto de validación\n","    early_stopping = callbacks.EarlyStopping(\n","        monitor='val_r2_score',\n","        patience=patience,\n","        restore_best_weights=True,\n","        verbose=1\n","    )\n","\n","    # entrenar con validation_data y early stopping\n","    history = modelo.fit(\n","        X_train_norm, y_train.values,\n","        epochs=15000,\n","        batch_size=batch_size,\n","        validation_data=(X_val_norm, y_val.values),  # Validation explícito\n","        callbacks=[early_stopping, PrintProgressCallback(print_every=verbose_entrenamiento)],\n","        verbose=0 # para evitar el comportamiento por defecto\n","    )\n","\n","    history = pd.DataFrame(history.history)\n","    best_iter = np.argmax(history['val_r2_score'])\n","    #print(f'Mejor iteración: {best_iter+1}')\n","\n","    train_loss, train_mae, train_mse, train_r2, val_loss, val_mae, val_mse, val_r2 = history.iloc[best_iter]\n","\n","    test_loss, test_r2, test_mse, test_mae = modelo.evaluate(\n","        X_test_norm, y_test.values, verbose=0\n","    )\n","\n","    #y_test_pred = modelo.predict(X_test_norm, verbose=0)\n","    #print(f'R2 test_pred = {r2_score(y_test, y_test_pred)}')\n","    #print(f'MSE test_pred = {mean_squared_error(y_test, y_test_pred)}')\n","    #print(f'RMSE test_pred = {root_mean_squared_error(y_test, y_test_pred)}')\n","    #print(f'MAE test_pred = {mean_absolute_error(y_test, y_test_pred)}')\n","\n","    resumen = pd.DataFrame(columns=['Modelo', 'Dataset', 'Loss', 'R2', 'RMSE', 'MAE'])\n","    resumen.loc[len(resumen)] = [nombre_modelo, 'Train', train_loss, train_r2, train_mse**.5, train_mae]\n","    resumen.loc[len(resumen)] = [nombre_modelo, 'Validation', val_loss, val_r2, val_mse**.5, val_mae]\n","    resumen.loc[len(resumen)] = [nombre_modelo, 'Test', test_loss, test_r2, test_mse**.5, test_mae]\n","\n","    print(f'\\nMétricas obtenidas para {nombre_modelo}:\\n')\n","    display(resumen)\n","\n","    return resumen"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":62926,"status":"ok","timestamp":1757543693856,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"YL33erWuDwbg","outputId":"0efde31d-73c0-4e40-9b78-885a08204a59"},"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │           \u001b[38;5;34m384\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │           \u001b[38;5;34m256\u001b[0m │\n","│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation (\u001b[38;5;33mActivation\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout (\u001b[38;5;33mDropout\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │         \u001b[38;5;34m4,096\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization_1           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │           \u001b[38;5;34m256\u001b[0m │\n","│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation_1 (\u001b[38;5;33mActivation\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_1 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │         \u001b[38;5;34m4,096\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization_2           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │           \u001b[38;5;34m256\u001b[0m │\n","│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation_2 (\u001b[38;5;33mActivation\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_2 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m65\u001b[0m │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │         <span style=\"color: #00af00; text-decoration-color: #00af00\">4,096</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization_1           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │         <span style=\"color: #00af00; text-decoration-color: #00af00\">4,096</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization_2           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">65</span> │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m9,409\u001b[0m (36.75 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">9,409</span> (36.75 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m9,025\u001b[0m (35.25 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">9,025</span> (35.25 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m384\u001b[0m (1.50 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">384</span> (1.50 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Epoch 100\n","  Logs: {'loss': 17.498497009277344, 'mae': 3.362994909286499, 'mse': 17.498497009277344, 'r2_score': 0.662211537361145, 'val_loss': 43.07960891723633, 'val_mae': 5.469663143157959, 'val_mse': 43.07960891723633, 'val_r2_score': 0.3701493740081787}\n","Epoch 200\n","  Logs: {'loss': 16.4547119140625, 'mae': 3.3314011096954346, 'mse': 16.4547119140625, 'r2_score': 0.6823606491088867, 'val_loss': 12.216827392578125, 'val_mae': 2.865164041519165, 'val_mse': 12.216827392578125, 'val_r2_score': 0.8213824033737183}\n","Epoch 300\n","  Logs: {'loss': 11.687826156616211, 'mae': 2.7139787673950195, 'mse': 11.687826156616211, 'r2_score': 0.7743799090385437, 'val_loss': 4.022984981536865, 'val_mae': 1.5978838205337524, 'val_mse': 4.022984981536865, 'val_r2_score': 0.941181480884552}\n","Epoch 400\n","  Logs: {'loss': 12.118264198303223, 'mae': 2.7916293144226074, 'mse': 12.118264198303223, 'r2_score': 0.7660707831382751, 'val_loss': 4.554678440093994, 'val_mae': 1.765503168106079, 'val_mse': 4.554678440093994, 'val_r2_score': 0.9334077835083008}\n","Epoch 415: early stopping\n","Restoring model weights from the end of the best epoch: 315.\n","\n","Métricas obtenidas para modelo_base:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["        Modelo     Dataset       Loss        R2      RMSE       MAE\n","0  modelo_base       Train  11.092396  0.785874  3.330525  2.728610\n","1  modelo_base  Validation   3.651535  0.946612  1.910899  1.578696\n","2  modelo_base        Test  10.370813  0.710575  3.220375  2.404110"],"text/html":["\n","  <div id=\"df-ea1a0973-183b-43a9-993f-a1291fc0b662\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>modelo_base</td>\n","      <td>Train</td>\n","      <td>11.092396</td>\n","      <td>0.785874</td>\n","      <td>3.330525</td>\n","      <td>2.728610</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>modelo_base</td>\n","      <td>Validation</td>\n","      <td>3.651535</td>\n","      <td>0.946612</td>\n","      <td>1.910899</td>\n","      <td>1.578696</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>modelo_base</td>\n","      <td>Test</td>\n","      <td>10.370813</td>\n","      <td>0.710575</td>\n","      <td>3.220375</td>\n","      <td>2.404110</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea1a0973-183b-43a9-993f-a1291fc0b662')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ea1a0973-183b-43a9-993f-a1291fc0b662 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ea1a0973-183b-43a9-993f-a1291fc0b662');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-aaca4d74-83da-41e1-87cc-c46bcc1f7533\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aaca4d74-83da-41e1-87cc-c46bcc1f7533')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-aaca4d74-83da-41e1-87cc-c46bcc1f7533 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"modelo_base\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.103571710693897,\n        \"min\": 3.6515345573425293,\n        \"max\": 11.092395782470703,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          11.092395782470703\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1205684985285994,\n        \"min\": 0.7105746269226074,\n        \"max\": 0.9466122984886169,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7858740091323853\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.789746572917878,\n        \"min\": 1.9108988872628843,\n        \"max\": 3.3305248509012366,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.3305248509012366\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5928615453032031,\n        \"min\": 1.5786961317062378,\n        \"max\": 2.728609561920166,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.728609561920166\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 51.2 s, sys: 1.66 s, total: 52.9 s\n","Wall time: 1min 2s\n"]}],"source":["%%time\n","\n","# ahora entrenamos el modelo base\n","\n","act_fun_base = 'relu'\n","drop_rate_base = 0.2\n","optimizador_base = optimizers.Adam\n","learn_rate_base = 0.003\n","batch_size_base = 32\n","patience = 100\n","\n","# modelo base\n","modelo_base = entrena_nn('modelo_base', act_fun=act_fun_base, drop_rate=drop_rate_base,\n","                         optimizador=optimizador_base, learn_rate=learn_rate_base,\n","                         batch_size=batch_size_base, patience=patience, verbose_summary=True)\n","\n","# almacenar las métricas para los diferentes modelos\n","resumen_modelos = modelo_base.copy()"]},{"cell_type":"markdown","source":["Analizando los resultados, el modelo está subajustado (por el uso de early stopping), por lo que  los valores de $R^2$ no son buenos ni para el conjunto de prueba ni el de testeo; de hecho el peor valor se obtiene para el conjunto de testeo."],"metadata":{"id":"sM8fUvUX1wTc"}},{"cell_type":"markdown","metadata":{"id":"1_L-SwbErSw2"},"source":["###**Impacto de diferentes funciones de activación**"]},{"cell_type":"markdown","metadata":{"id":"8Ev7XKzQsTzK"},"source":["Solo se modificará la función de activación dejando fijos el resto de los parámetros base de la red neuronal."]},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":933},"executionInfo":{"elapsed":148752,"status":"ok","timestamp":1757545648410,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"paOvPKDarg0m","outputId":"8de66512-720b-40f0-9610-7526b697d8ea"},"outputs":[{"output_type":"stream","name":"stdout","text":["----------------------------------------------------------------------------------------------------\n","Impacto de la función de activación leaky_relu ...\n","Epoch 100\n","  Logs: {'loss': 19.946338653564453, 'mae': 3.5777831077575684, 'mse': 19.946338653564453, 'r2_score': 0.6149587631225586, 'val_loss': 41.59298324584961, 'val_mae': 5.10863733291626, 'val_mse': 41.59298324584961, 'val_r2_score': 0.3918847441673279}\n","Epoch 200\n","  Logs: {'loss': 16.908538818359375, 'mae': 3.3901214599609375, 'mse': 16.908538818359375, 'r2_score': 0.6736000180244446, 'val_loss': 16.704097747802734, 'val_mae': 3.7143375873565674, 'val_mse': 16.704097747802734, 'val_r2_score': 0.7557756900787354}\n","Epoch 300\n","  Logs: {'loss': 16.376144409179688, 'mae': 3.100391387939453, 'mse': 16.376144409179688, 'r2_score': 0.6838772892951965, 'val_loss': 15.89028549194336, 'val_mae': 3.329861879348755, 'val_mse': 15.89028549194336, 'val_r2_score': 0.7676741480827332}\n","Epoch 400\n","  Logs: {'loss': 9.779451370239258, 'mae': 2.5448660850524902, 'mse': 9.779451370239258, 'r2_score': 0.8112188577651978, 'val_loss': 10.358373641967773, 'val_mae': 2.7611048221588135, 'val_mse': 10.358373641967773, 'val_r2_score': 0.8485541343688965}\n","Epoch 500\n","  Logs: {'loss': 13.426044464111328, 'mae': 2.896512508392334, 'mse': 13.426044464111328, 'r2_score': 0.7408255934715271, 'val_loss': 7.487403392791748, 'val_mae': 2.4376418590545654, 'val_mse': 7.487403392791748, 'val_r2_score': 0.8905295133590698}\n","Epoch 575: early stopping\n","Restoring model weights from the end of the best epoch: 475.\n","\n","Métricas obtenidas para act_leaky_relu_dr_0.2_opt_Adam_lr_0.003:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                                    Modelo     Dataset       Loss        R2  \\\n","0  act_leaky_relu_dr_0.2_opt_Adam_lr_0.003       Train  12.902896  0.750924   \n","1  act_leaky_relu_dr_0.2_opt_Adam_lr_0.003  Validation   6.784922  0.900800   \n","2  act_leaky_relu_dr_0.2_opt_Adam_lr_0.003        Test  10.361261  0.710841   \n","\n","       RMSE       MAE  \n","0  3.592060  2.862663  \n","1  2.604788  2.361428  \n","2  3.218891  2.436130  "],"text/html":["\n","  <div id=\"df-7b5e38ba-31e3-4784-9222-608771679b85\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_leaky_relu_dr_0.2_opt_Adam_lr_0.003</td>\n","      <td>Train</td>\n","      <td>12.902896</td>\n","      <td>0.750924</td>\n","      <td>3.592060</td>\n","      <td>2.862663</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_leaky_relu_dr_0.2_opt_Adam_lr_0.003</td>\n","      <td>Validation</td>\n","      <td>6.784922</td>\n","      <td>0.900800</td>\n","      <td>2.604788</td>\n","      <td>2.361428</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_leaky_relu_dr_0.2_opt_Adam_lr_0.003</td>\n","      <td>Test</td>\n","      <td>10.361261</td>\n","      <td>0.710841</td>\n","      <td>3.218891</td>\n","      <td>2.436130</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b5e38ba-31e3-4784-9222-608771679b85')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7b5e38ba-31e3-4784-9222-608771679b85 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7b5e38ba-31e3-4784-9222-608771679b85');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-97c7af12-cd02-47ac-a984-a628750de763\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-97c7af12-cd02-47ac-a984-a628750de763')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-97c7af12-cd02-47ac-a984-a628750de763 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_leaky_relu_dr_0.2_opt_Adam_lr_0.003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.0735352094166153,\n        \"min\": 6.784922122955322,\n        \"max\": 12.9028959274292,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          12.9028959274292\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10012815129197067,\n        \"min\": 0.710841178894043,\n        \"max\": 0.9008002281188965,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7509243488311768\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4985116361887112,\n        \"min\": 2.604788306744969,\n        \"max\": 3.5920601230253926,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.5920601230253926\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.27041541396648494,\n        \"min\": 2.3614277839660645,\n        \"max\": 2.8626627922058105,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.8626627922058105\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto de la función de activación elu ...\n","Epoch 100\n","  Logs: {'loss': 22.9991455078125, 'mae': 3.9393200874328613, 'mse': 22.9991455078125, 'r2_score': 0.5560278296470642, 'val_loss': 19.018083572387695, 'val_mae': 3.6398396492004395, 'val_mse': 19.018083572387695, 'val_r2_score': 0.7219438552856445}\n","Epoch 200\n","  Logs: {'loss': 11.812097549438477, 'mae': 2.7571916580200195, 'mse': 11.812097549438477, 'r2_score': 0.7719810009002686, 'val_loss': 17.929988861083984, 'val_mae': 3.3995773792266846, 'val_mse': 17.929988861083984, 'val_r2_score': 0.7378524541854858}\n","Epoch 300\n","  Logs: {'loss': 16.03076171875, 'mae': 3.0598859786987305, 'mse': 16.03076171875, 'r2_score': 0.6905444860458374, 'val_loss': 16.604970932006836, 'val_mae': 3.1818532943725586, 'val_mse': 16.604970932006836, 'val_r2_score': 0.7572250366210938}\n","Epoch 400\n","  Logs: {'loss': 10.693347930908203, 'mae': 2.5844483375549316, 'mse': 10.693347930908203, 'r2_score': 0.7935771942138672, 'val_loss': 13.567537307739258, 'val_mae': 3.0333619117736816, 'val_mse': 13.567537307739258, 'val_r2_score': 0.8016341924667358}\n","Epoch 416: early stopping\n","Restoring model weights from the end of the best epoch: 316.\n","\n","Métricas obtenidas para act_elu_dr_0.2_opt_Adam_lr_0.003:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                             Modelo     Dataset       Loss        R2  \\\n","0  act_elu_dr_0.2_opt_Adam_lr_0.003       Train  16.441210  0.682621   \n","1  act_elu_dr_0.2_opt_Adam_lr_0.003  Validation   8.679516  0.873100   \n","2  act_elu_dr_0.2_opt_Adam_lr_0.003        Test   7.534482  0.789730   \n","\n","       RMSE       MAE  \n","0  4.054776  3.283738  \n","1  2.946102  2.444889  \n","2  2.744901  1.940390  "],"text/html":["\n","  <div id=\"df-cc9a5cdf-9e2a-4435-abc9-5eb97c84ccec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_elu_dr_0.2_opt_Adam_lr_0.003</td>\n","      <td>Train</td>\n","      <td>16.441210</td>\n","      <td>0.682621</td>\n","      <td>4.054776</td>\n","      <td>3.283738</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_elu_dr_0.2_opt_Adam_lr_0.003</td>\n","      <td>Validation</td>\n","      <td>8.679516</td>\n","      <td>0.873100</td>\n","      <td>2.946102</td>\n","      <td>2.444889</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_elu_dr_0.2_opt_Adam_lr_0.003</td>\n","      <td>Test</td>\n","      <td>7.534482</td>\n","      <td>0.789730</td>\n","      <td>2.744901</td>\n","      <td>1.940390</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc9a5cdf-9e2a-4435-abc9-5eb97c84ccec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cc9a5cdf-9e2a-4435-abc9-5eb97c84ccec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cc9a5cdf-9e2a-4435-abc9-5eb97c84ccec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-87094aa7-1c96-4f66-a1bc-a5bf219fc141\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-87094aa7-1c96-4f66-a1bc-a5bf219fc141')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-87094aa7-1c96-4f66-a1bc-a5bf219fc141 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_elu_dr_0.2_opt_Adam_lr_0.003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.8456988811921935,\n        \"min\": 7.534482479095459,\n        \"max\": 16.44120979309082,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          16.44120979309082\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09548562017761666,\n        \"min\": 0.6826213002204895,\n        \"max\": 0.8731001019477844,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.6826213002204895\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7053855964498342,\n        \"min\": 2.744901178384289,\n        \"max\": 4.054776170529123,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4.054776170529123\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6785733808238439,\n        \"min\": 1.9403895139694214,\n        \"max\": 3.2837376594543457,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.2837376594543457\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","CPU times: user 2min 3s, sys: 3.47 s, total: 2min 6s\n","Wall time: 2min 28s\n"]}],"source":["%%time\n","\n","print(\"-\"*100)\n","act_funs = ['relu', 'leaky_relu', 'elu']\n","act_funs.remove(act_fun_base)\n","for act_fun in act_funs:\n","    print(f'Impacto de la función de activación {act_fun} ...')\n","    nombre_modelo = f'modelo_{act_fun}'\n","    nombre_modelo = f'act_{act_fun}_dr_{drop_rate_base}_opt_{optimizador_base.__name__}_lr_{learn_rate_base}'\n","    modelo_nn = entrena_nn(nombre_modelo, act_fun=act_fun, drop_rate=drop_rate_base,\n","                            optimizador=optimizador_base, learn_rate=learn_rate_base,\n","                            batch_size=batch_size_base, patience=100)\n","    resumen_modelos = pd.concat([resumen_modelos, modelo_nn])\n","    print(f'\\n{\"-\"*100}')"]},{"cell_type":"code","source":["resumen_promedio = resumen_modelos.pivot_table(index='Modelo', columns='Dataset', values='R2')[['Train', 'Validation', 'Test']]\n","\n","def obtener_params_modelo(nombre_modelo):\n","    if nombre_modelo == 'modelo_base':\n","        return act_fun_base, drop_rate_base, optimizador_base.__name__, learn_rate_base\n","\n","    params = nombre_modelo.split('_')\n","    if len(params) == 8:\n","        return params[1], float(params[3]), params[5], float(params[7])\n","\n","    return 'leaky_'+params[2], float(params[4]), params[6], float(params[8])\n","\n","nuevas_cols = ['act_fun', 'drop_rate', 'optimizador', 'learn_rate']\n","resumen_promedio.loc[:,nuevas_cols] = list(resumen_promedio.index.map(lambda x: obtener_params_modelo(x)))\n","\n","resumen_promedio.sort_values('Test', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"QCwCpL29Mcdf","executionInfo":{"status":"ok","timestamp":1757545725876,"user_tz":180,"elapsed":96,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"68e296e1-d01c-4c2a-9151-ae22d5b0e328"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Dataset                                     Train  Validation      Test  \\\n","Modelo                                                                    \n","act_elu_dr_0.2_opt_Adam_lr_0.003         0.682621    0.873100  0.789730   \n","act_leaky_relu_dr_0.2_opt_Adam_lr_0.003  0.750924    0.900800  0.710841   \n","modelo_base                              0.785874    0.946612  0.710575   \n","\n","Dataset                                     act_fun  drop_rate optimizador  \\\n","Modelo                                                                       \n","act_elu_dr_0.2_opt_Adam_lr_0.003                elu        0.2        Adam   \n","act_leaky_relu_dr_0.2_opt_Adam_lr_0.003  leaky_relu        0.2        Adam   \n","modelo_base                                    relu        0.2        Adam   \n","\n","Dataset                                  learn_rate  \n","Modelo                                               \n","act_elu_dr_0.2_opt_Adam_lr_0.003              0.003  \n","act_leaky_relu_dr_0.2_opt_Adam_lr_0.003       0.003  \n","modelo_base                                   0.003  "],"text/html":["\n","  <div id=\"df-6cd93cbe-72c4-4e75-8e35-bf2e2bc4bcf5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Dataset</th>\n","      <th>Train</th>\n","      <th>Validation</th>\n","      <th>Test</th>\n","      <th>act_fun</th>\n","      <th>drop_rate</th>\n","      <th>optimizador</th>\n","      <th>learn_rate</th>\n","    </tr>\n","    <tr>\n","      <th>Modelo</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>act_elu_dr_0.2_opt_Adam_lr_0.003</th>\n","      <td>0.682621</td>\n","      <td>0.873100</td>\n","      <td>0.789730</td>\n","      <td>elu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.003</td>\n","    </tr>\n","    <tr>\n","      <th>act_leaky_relu_dr_0.2_opt_Adam_lr_0.003</th>\n","      <td>0.750924</td>\n","      <td>0.900800</td>\n","      <td>0.710841</td>\n","      <td>leaky_relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.003</td>\n","    </tr>\n","    <tr>\n","      <th>modelo_base</th>\n","      <td>0.785874</td>\n","      <td>0.946612</td>\n","      <td>0.710575</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.003</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6cd93cbe-72c4-4e75-8e35-bf2e2bc4bcf5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6cd93cbe-72c4-4e75-8e35-bf2e2bc4bcf5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6cd93cbe-72c4-4e75-8e35-bf2e2bc4bcf5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c4fe6e28-0301-4ff8-aa6a-8d9aafc35120\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c4fe6e28-0301-4ff8-aa6a-8d9aafc35120')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c4fe6e28-0301-4ff8-aa6a-8d9aafc35120 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"resumen_promedio\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"act_elu_dr_0.2_opt_Adam_lr_0.003\",\n          \"act_leaky_relu_dr_0.2_opt_Adam_lr_0.003\",\n          \"modelo_base\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Train\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.052516516611964485,\n        \"min\": 0.6826213002204895,\n        \"max\": 0.7858740091323853,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.6826213002204895,\n          0.7509243488311768,\n          0.7858740091323853\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Validation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03712610452164743,\n        \"min\": 0.8731001019477844,\n        \"max\": 0.9466122984886169,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.8731001019477844,\n          0.9008002281188965,\n          0.9466122984886169\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Test\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04562363086033651,\n        \"min\": 0.7105746269226074,\n        \"max\": 0.7897300124168396,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7897300124168396,\n          0.710841178894043,\n          0.7105746269226074\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"act_fun\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"elu\",\n          \"leaky_relu\",\n          \"relu\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"drop_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.3993498887762956e-17,\n        \"min\": 0.2,\n        \"max\": 0.2,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"optimizador\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Adam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"learn_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.311484201212962e-19,\n        \"min\": 0.003,\n        \"max\": 0.003,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.003\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["fig, axs = plt.subplots(1, 3, figsize=(8,3), sharey=True)\n","axs = axs.ravel()\n","\n","for i, acti_fun in enumerate(act_funs+['relu']):\n","    criterio = (resumen_promedio.act_fun==acti_fun) & (resumen_promedio.learn_rate==learn_rate_base) & \\\n","               (resumen_promedio.optimizador==optimizador_base.__name__)\n","    df_aux = resumen_promedio.loc[criterio, ['Train', 'Validation', 'Test', 'act_fun']]\n","\n","    df_melted = df_aux.melt(id_vars='act_fun', var_name='Dataset', value_name='R2 Score')\n","\n","    sns.barplot(x='Dataset', y='R2 Score', hue='Dataset', data=df_melted, ax=axs[i])\n","\n","    axs[i].set_title(f'{acti_fun}', weight='bold')\n","    axs[i].set_xlabel('')\n","    axs[i].set_ylabel('R2 Score')\n","    axs[i].set_ylim(0.6, 1.0)\n","    axs[i].grid(True)\n","\n","plt.suptitle('Impacto de las Funciones de Activación en el Rendimiento del Modelo', weight='bold', fontsize=14)\n","plt.tight_layout(rect=[0, 0.03, 1, 0.95])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":307},"id":"9Ax8XfT0NdLg","executionInfo":{"status":"ok","timestamp":1757545907676,"user_tz":180,"elapsed":863,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"a9e090a4-57ec-46df-bd4f-47bb648c30f7"},"execution_count":33,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x300 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Análisis:\n","- Hay subajuste para las tres funciones de activación por uso del early stopping.\n","- \"relu\" obtiene el mejor valor para r2 en el train set.\n","\n","Seguiremos optimizando parámetros considerando como función de activación a \"relu\"."],"metadata":{"id":"I9YhNmAFToha"}},{"cell_type":"code","execution_count":34,"metadata":{"id":"a1twRMi6QeFe","executionInfo":{"status":"ok","timestamp":1757546204194,"user_tz":180,"elapsed":4,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"outputs":[],"source":["mejor_act_fun = 'relu'"]},{"cell_type":"markdown","metadata":{"id":"kpTIAscbrmn7"},"source":["###**Impacto de diferentes optimizadores y su learning rate**"]},{"cell_type":"markdown","metadata":{"id":"jBD8Rpf2sl21"},"source":["Se modificarán los optimizadores junto a la learning rate dejando fijos el resto de los parámetros de la red neuronal."]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":844392,"status":"ok","timestamp":1757547230415,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"AW4-3VW2rwkQ","outputId":"fc0eccf5-3ab4-406d-97bf-16beb1f59899"},"outputs":[{"output_type":"stream","name":"stdout","text":["----------------------------------------------------------------------------------------------------\n","Impacto del optimizador Adam con learning rate = 0.001 ...\n","\n","Epoch 100\n","  Logs: {'loss': 358.9978332519531, 'mae': 18.643062591552734, 'mse': 358.9978332519531, 'r2_score': -5.930041790008545, 'val_loss': 462.0135803222656, 'val_mae': 21.21232032775879, 'val_mse': 462.0135803222656, 'val_r2_score': -5.75492525100708}\n","Epoch 200\n","  Logs: {'loss': 27.453662872314453, 'mae': 4.162106037139893, 'mse': 27.453662872314453, 'r2_score': 0.4700384736061096, 'val_loss': 48.752845764160156, 'val_mae': 6.309905529022217, 'val_mse': 48.752845764160156, 'val_r2_score': 0.2872031331062317}\n","Epoch 300\n","  Logs: {'loss': 18.353008270263672, 'mae': 3.3973937034606934, 'mse': 18.353008270263672, 'r2_score': 0.6457161903381348, 'val_loss': 12.150347709655762, 'val_mae': 2.666914939880371, 'val_mse': 12.150347709655762, 'val_r2_score': 0.8223543763160706}\n","Epoch 400\n","  Logs: {'loss': 11.425344467163086, 'mae': 2.795454740524292, 'mse': 11.425344467163086, 'r2_score': 0.7794468402862549, 'val_loss': 10.712259292602539, 'val_mae': 2.524535655975342, 'val_mse': 10.712259292602539, 'val_r2_score': 0.8433800935745239}\n","Epoch 500\n","  Logs: {'loss': 15.055005073547363, 'mae': 2.9921159744262695, 'mse': 15.055005073547363, 'r2_score': 0.7093803882598877, 'val_loss': 8.884279251098633, 'val_mae': 2.2900731563568115, 'val_mse': 8.884279251098633, 'val_r2_score': 0.8701063394546509}\n","Epoch 600\n","  Logs: {'loss': 11.045496940612793, 'mae': 2.6433143615722656, 'mse': 11.045496940612793, 'r2_score': 0.7867793440818787, 'val_loss': 8.693435668945312, 'val_mae': 2.412489414215088, 'val_mse': 8.693435668945312, 'val_r2_score': 0.8728965520858765}\n","Epoch 634: early stopping\n","Restoring model weights from the end of the best epoch: 534.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_Adam_lr_0.001:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                              Modelo     Dataset       Loss        R2  \\\n","0  act_relu_dr_0.2_opt_Adam_lr_0.001       Train  10.888951  0.789801   \n","1  act_relu_dr_0.2_opt_Adam_lr_0.001  Validation   6.346523  0.907210   \n","2  act_relu_dr_0.2_opt_Adam_lr_0.001        Test   7.932625  0.778619   \n","\n","       RMSE       MAE  \n","0  3.299841  2.586612  \n","1  2.519231  2.197953  \n","2  2.816492  2.341985  "],"text/html":["\n","  <div id=\"df-9a98f50f-f86e-4195-af54-16a671b7f38c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.001</td>\n","      <td>Train</td>\n","      <td>10.888951</td>\n","      <td>0.789801</td>\n","      <td>3.299841</td>\n","      <td>2.586612</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.001</td>\n","      <td>Validation</td>\n","      <td>6.346523</td>\n","      <td>0.907210</td>\n","      <td>2.519231</td>\n","      <td>2.197953</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.001</td>\n","      <td>Test</td>\n","      <td>7.932625</td>\n","      <td>0.778619</td>\n","      <td>2.816492</td>\n","      <td>2.341985</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a98f50f-f86e-4195-af54-16a671b7f38c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9a98f50f-f86e-4195-af54-16a671b7f38c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9a98f50f-f86e-4195-af54-16a671b7f38c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-dbe1ada9-5cb8-4ac3-9d54-a473cb5fc154\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dbe1ada9-5cb8-4ac3-9d54-a473cb5fc154')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-dbe1ada9-5cb8-4ac3-9d54-a473cb5fc154 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_Adam_lr_0.001\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3054009477100355,\n        \"min\": 6.346522808074951,\n        \"max\": 10.888951301574707,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          10.888951301574707\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07123376390009506,\n        \"min\": 0.7786188125610352,\n        \"max\": 0.9072098731994629,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7898012399673462\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.39398468239534834,\n        \"min\": 2.5192305984317813,\n        \"max\": 3.299841102473679,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.299841102473679\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.19648672420813726,\n        \"min\": 2.197953462600708,\n        \"max\": 2.58661150932312,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.58661150932312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador Adam con learning rate = 0.005 ...\n","\n","Epoch 100\n","  Logs: {'loss': 17.168424606323242, 'mae': 3.508126974105835, 'mse': 17.168424606323242, 'r2_score': 0.6685832738876343, 'val_loss': 29.218454360961914, 'val_mae': 4.592259883880615, 'val_mse': 29.218454360961914, 'val_r2_score': 0.572808027267456}\n","Epoch 200\n","  Logs: {'loss': 14.19960880279541, 'mae': 3.1749839782714844, 'mse': 14.19960880279541, 'r2_score': 0.7258927822113037, 'val_loss': 9.648590087890625, 'val_mae': 2.2664785385131836, 'val_mse': 9.648590087890625, 'val_r2_score': 0.8589316606521606}\n","Epoch 281: early stopping\n","Restoring model weights from the end of the best epoch: 181.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_Adam_lr_0.005:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                              Modelo     Dataset       Loss        R2  \\\n","0  act_relu_dr_0.2_opt_Adam_lr_0.005       Train  11.066276  0.786378   \n","1  act_relu_dr_0.2_opt_Adam_lr_0.005  Validation   6.720194  0.901747   \n","2  act_relu_dr_0.2_opt_Adam_lr_0.005        Test   8.332816  0.767450   \n","\n","       RMSE       MAE  \n","0  3.326601  2.633405  \n","1  2.592334  2.101620  \n","2  2.886662  2.634964  "],"text/html":["\n","  <div id=\"df-7b24bd15-a33c-4d20-927b-120677a6c377\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.005</td>\n","      <td>Train</td>\n","      <td>11.066276</td>\n","      <td>0.786378</td>\n","      <td>3.326601</td>\n","      <td>2.633405</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.005</td>\n","      <td>Validation</td>\n","      <td>6.720194</td>\n","      <td>0.901747</td>\n","      <td>2.592334</td>\n","      <td>2.101620</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.005</td>\n","      <td>Test</td>\n","      <td>8.332816</td>\n","      <td>0.767450</td>\n","      <td>2.886662</td>\n","      <td>2.634964</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b24bd15-a33c-4d20-927b-120677a6c377')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7b24bd15-a33c-4d20-927b-120677a6c377 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7b24bd15-a33c-4d20-927b-120677a6c377');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-bbb03a02-0d7d-4efe-b955-43d7c9070ab0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bbb03a02-0d7d-4efe-b955-43d7c9070ab0')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-bbb03a02-0d7d-4efe-b955-43d7c9070ab0 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_Adam_lr_0.005\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.1969968896522283,\n        \"min\": 6.720194339752197,\n        \"max\": 11.066275596618652,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          11.066275596618652\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07269065238299746,\n        \"min\": 0.7674503922462463,\n        \"max\": 0.9017465710639954,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7863782048225403\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.36953221952494575,\n        \"min\": 2.592333763185635,\n        \"max\": 3.326601207932603,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.326601207932603\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3074771193097753,\n        \"min\": 2.1016199588775635,\n        \"max\": 2.6349635124206543,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.6334049701690674\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador Adam con learning rate = 0.01 ...\n","\n","Epoch 100\n","  Logs: {'loss': 13.396719932556152, 'mae': 2.826756477355957, 'mse': 13.396719932556152, 'r2_score': 0.741391658782959, 'val_loss': 25.550317764282227, 'val_mae': 3.940293312072754, 'val_mse': 25.550317764282227, 'val_r2_score': 0.6264384984970093}\n","Epoch 200\n","  Logs: {'loss': 14.087031364440918, 'mae': 2.8850302696228027, 'mse': 14.087031364440918, 'r2_score': 0.7280659675598145, 'val_loss': 10.303095817565918, 'val_mae': 2.659426689147949, 'val_mse': 10.303095817565918, 'val_r2_score': 0.8493623733520508}\n","Epoch 300\n","  Logs: {'loss': 7.751029968261719, 'mae': 2.3037092685699463, 'mse': 7.751029968261719, 'r2_score': 0.850375235080719, 'val_loss': 5.426022529602051, 'val_mae': 1.8222860097885132, 'val_mse': 5.426022529602051, 'val_r2_score': 0.9206681847572327}\n","Epoch 400\n","  Logs: {'loss': 12.280473709106445, 'mae': 2.8993546962738037, 'mse': 12.280473709106445, 'r2_score': 0.7629395127296448, 'val_loss': 4.775534629821777, 'val_mae': 1.8410223722457886, 'val_mse': 4.775534629821777, 'val_r2_score': 0.930178701877594}\n","Epoch 500\n","  Logs: {'loss': 12.254223823547363, 'mae': 2.6842432022094727, 'mse': 12.254223823547363, 'r2_score': 0.7634462118148804, 'val_loss': 5.589209079742432, 'val_mae': 1.8429591655731201, 'val_mse': 5.589209079742432, 'val_r2_score': 0.9182822704315186}\n","Epoch 584: early stopping\n","Restoring model weights from the end of the best epoch: 484.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_Adam_lr_0.01:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                             Modelo     Dataset       Loss        R2  \\\n","0  act_relu_dr_0.2_opt_Adam_lr_0.01       Train  11.365645  0.780599   \n","1  act_relu_dr_0.2_opt_Adam_lr_0.01  Validation   2.623962  0.961636   \n","2  act_relu_dr_0.2_opt_Adam_lr_0.01        Test   3.451125  0.903687   \n","\n","       RMSE       MAE  \n","0  3.371297  2.777831  \n","1  1.619865  1.231820  \n","2  1.857720  1.600003  "],"text/html":["\n","  <div id=\"df-3a77f1f2-66a4-4cec-b0f7-87a4a5d58bb9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.01</td>\n","      <td>Train</td>\n","      <td>11.365645</td>\n","      <td>0.780599</td>\n","      <td>3.371297</td>\n","      <td>2.777831</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.01</td>\n","      <td>Validation</td>\n","      <td>2.623962</td>\n","      <td>0.961636</td>\n","      <td>1.619865</td>\n","      <td>1.231820</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.01</td>\n","      <td>Test</td>\n","      <td>3.451125</td>\n","      <td>0.903687</td>\n","      <td>1.857720</td>\n","      <td>1.600003</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a77f1f2-66a4-4cec-b0f7-87a4a5d58bb9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3a77f1f2-66a4-4cec-b0f7-87a4a5d58bb9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3a77f1f2-66a4-4cec-b0f7-87a4a5d58bb9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-33a2e5cc-8138-4f1a-8014-fd971c14c95f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33a2e5cc-8138-4f1a-8014-fd971c14c95f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-33a2e5cc-8138-4f1a-8014-fd971c14c95f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_Adam_lr_0.01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.825986099393625,\n        \"min\": 2.62396240234375,\n        \"max\": 11.365645408630371,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          11.365645408630371\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09245091799246458,\n        \"min\": 0.7805992364883423,\n        \"max\": 0.9616360664367676,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7805992364883423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9500004802372263,\n        \"min\": 1.6198649333644302,\n        \"max\": 3.3712972886754398,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.3712972886754398\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8075670137355773,\n        \"min\": 1.2318202257156372,\n        \"max\": 2.7778310775756836,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.7778310775756836\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador Adam con learning rate = 0.05 ...\n","\n","Epoch 100\n","  Logs: {'loss': 13.049195289611816, 'mae': 2.9602608680725098, 'mse': 13.049195289611816, 'r2_score': 0.748100221157074, 'val_loss': 12.845023155212402, 'val_mae': 3.3055949211120605, 'val_mse': 12.845023155212402, 'val_r2_score': 0.8121978044509888}\n","Epoch 200\n","  Logs: {'loss': 9.475015640258789, 'mae': 2.432609796524048, 'mse': 9.475015640258789, 'r2_score': 0.8170956373214722, 'val_loss': 7.710484027862549, 'val_mae': 2.1432292461395264, 'val_mse': 7.710484027862549, 'val_r2_score': 0.8872679471969604}\n","Epoch 300\n","  Logs: {'loss': 9.098301887512207, 'mae': 2.4371700286865234, 'mse': 9.098301887512207, 'r2_score': 0.8243677020072937, 'val_loss': 3.955627918243408, 'val_mae': 1.54179847240448, 'val_mse': 3.955627918243408, 'val_r2_score': 0.942166268825531}\n","Epoch 400\n","  Logs: {'loss': 5.543553352355957, 'mae': 1.888662338256836, 'mse': 5.543553352355957, 'r2_score': 0.8929880261421204, 'val_loss': 8.793953895568848, 'val_mae': 2.6671040058135986, 'val_mse': 8.793953895568848, 'val_r2_score': 0.8714269399642944}\n","Epoch 412: early stopping\n","Restoring model weights from the end of the best epoch: 312.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_Adam_lr_0.05:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                             Modelo     Dataset      Loss        R2      RMSE  \\\n","0  act_relu_dr_0.2_opt_Adam_lr_0.05       Train  9.018769  0.825903  3.003127   \n","1  act_relu_dr_0.2_opt_Adam_lr_0.05  Validation  2.489859  0.963597  1.577929   \n","2  act_relu_dr_0.2_opt_Adam_lr_0.05        Test  3.313730  0.907521  1.820365   \n","\n","        MAE  \n","0  2.438426  \n","1  1.263737  \n","2  1.393381  "],"text/html":["\n","  <div id=\"df-96aae51d-1df4-4c12-bba8-996b2e693983\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.05</td>\n","      <td>Train</td>\n","      <td>9.018769</td>\n","      <td>0.825903</td>\n","      <td>3.003127</td>\n","      <td>2.438426</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.05</td>\n","      <td>Validation</td>\n","      <td>2.489859</td>\n","      <td>0.963597</td>\n","      <td>1.577929</td>\n","      <td>1.263737</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.05</td>\n","      <td>Test</td>\n","      <td>3.313730</td>\n","      <td>0.907521</td>\n","      <td>1.820365</td>\n","      <td>1.393381</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96aae51d-1df4-4c12-bba8-996b2e693983')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-96aae51d-1df4-4c12-bba8-996b2e693983 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-96aae51d-1df4-4c12-bba8-996b2e693983');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9f64cbd2-d189-4329-a4de-fd536e0f9bb8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f64cbd2-d189-4329-a4de-fd536e0f9bb8')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9f64cbd2-d189-4329-a4de-fd536e0f9bb8 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_Adam_lr_0.05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.55558019046146,\n        \"min\": 2.4898593425750732,\n        \"max\": 9.018769264221191,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          9.018769264221191\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06924059891155188,\n        \"min\": 0.8259029984474182,\n        \"max\": 0.9635967016220093,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.8259029984474182\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7625492778263252,\n        \"min\": 1.5779288141659222,\n        \"max\": 3.003126581451603,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.003126581451603\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6440519829001639,\n        \"min\": 1.2637370824813843,\n        \"max\": 2.4384255409240723,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.4384255409240723\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador Adam con learning rate = 0.1 ...\n","\n","Epoch 100\n","  Logs: {'loss': 8.357304573059082, 'mae': 2.3878023624420166, 'mse': 8.357304573059082, 'r2_score': 0.8386718034744263, 'val_loss': 8.07165813446045, 'val_mae': 2.323730945587158, 'val_mse': 8.07165813446045, 'val_r2_score': 0.8819873332977295}\n","Epoch 200\n","  Logs: {'loss': 8.35034465789795, 'mae': 2.3919906616210938, 'mse': 8.35034465789795, 'r2_score': 0.83880615234375, 'val_loss': 4.1770920753479, 'val_mae': 1.432803750038147, 'val_mse': 4.1770920753479, 'val_r2_score': 0.9389283061027527}\n","Epoch 222: early stopping\n","Restoring model weights from the end of the best epoch: 122.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_Adam_lr_0.1:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                            Modelo     Dataset      Loss        R2      RMSE  \\\n","0  act_relu_dr_0.2_opt_Adam_lr_0.1       Train  5.373137  0.896278  2.318003   \n","1  act_relu_dr_0.2_opt_Adam_lr_0.1  Validation  2.292976  0.966475  1.514258   \n","2  act_relu_dr_0.2_opt_Adam_lr_0.1        Test  3.956951  0.889571  1.989209   \n","\n","        MAE  \n","0  1.929923  \n","1  1.288128  \n","2  1.621322  "],"text/html":["\n","  <div id=\"df-fd6df98c-5ec9-444c-a6e0-9569dfde760d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.1</td>\n","      <td>Train</td>\n","      <td>5.373137</td>\n","      <td>0.896278</td>\n","      <td>2.318003</td>\n","      <td>1.929923</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.1</td>\n","      <td>Validation</td>\n","      <td>2.292976</td>\n","      <td>0.966475</td>\n","      <td>1.514258</td>\n","      <td>1.288128</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_Adam_lr_0.1</td>\n","      <td>Test</td>\n","      <td>3.956951</td>\n","      <td>0.889571</td>\n","      <td>1.989209</td>\n","      <td>1.621322</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd6df98c-5ec9-444c-a6e0-9569dfde760d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fd6df98c-5ec9-444c-a6e0-9569dfde760d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fd6df98c-5ec9-444c-a6e0-9569dfde760d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-8a0641c2-7313-4e22-9216-e3c97c57d214\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a0641c2-7313-4e22-9216-e3c97c57d214')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-8a0641c2-7313-4e22-9216-e3c97c57d214 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_Adam_lr_0.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.541740809538807,\n        \"min\": 2.292975902557373,\n        \"max\": 5.3731369972229,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          5.3731369972229\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04259693596093358,\n        \"min\": 0.8895706534385681,\n        \"max\": 0.966475248336792,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.8962777256965637\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.40408138683445616,\n        \"min\": 1.5142575416874677,\n        \"max\": 2.3180028035407765,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.3180028035407765\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3209759240715511,\n        \"min\": 1.28812837600708,\n        \"max\": 1.929923176765442,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.929923176765442\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador SGD con learning rate = 0.001 ...\n","\n","Epoch 100\n","  Logs: {'loss': 17.85408592224121, 'mae': 3.330982208251953, 'mse': 17.85408592224121, 'r2_score': 0.6553473472595215, 'val_loss': 33.50165939331055, 'val_mae': 5.0853657722473145, 'val_mse': 33.50165939331055, 'val_r2_score': 0.5101849436759949}\n","Epoch 200\n","  Logs: {'loss': 14.651409149169922, 'mae': 3.172283411026001, 'mse': 14.651409149169922, 'r2_score': 0.717171311378479, 'val_loss': 11.782711029052734, 'val_mae': 2.62951397895813, 'val_mse': 11.782711029052734, 'val_r2_score': 0.8277294635772705}\n","Epoch 281: early stopping\n","Restoring model weights from the end of the best epoch: 181.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_SGD_lr_0.001:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                             Modelo     Dataset       Loss        R2  \\\n","0  act_relu_dr_0.2_opt_SGD_lr_0.001       Train  15.321213  0.704242   \n","1  act_relu_dr_0.2_opt_SGD_lr_0.001  Validation  11.267774  0.835258   \n","2  act_relu_dr_0.2_opt_SGD_lr_0.001        Test  10.408401  0.709526   \n","\n","       RMSE       MAE  \n","0  3.914232  2.877923  \n","1  3.356750  2.749055  \n","2  3.226205  2.595038  "],"text/html":["\n","  <div id=\"df-8cd1a810-bbb2-4f53-bd3e-f26a98ec5bfb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.001</td>\n","      <td>Train</td>\n","      <td>15.321213</td>\n","      <td>0.704242</td>\n","      <td>3.914232</td>\n","      <td>2.877923</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.001</td>\n","      <td>Validation</td>\n","      <td>11.267774</td>\n","      <td>0.835258</td>\n","      <td>3.356750</td>\n","      <td>2.749055</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.001</td>\n","      <td>Test</td>\n","      <td>10.408401</td>\n","      <td>0.709526</td>\n","      <td>3.226205</td>\n","      <td>2.595038</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8cd1a810-bbb2-4f53-bd3e-f26a98ec5bfb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8cd1a810-bbb2-4f53-bd3e-f26a98ec5bfb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8cd1a810-bbb2-4f53-bd3e-f26a98ec5bfb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-dce4b300-e2e0-41fd-a180-62b3f6d9f518\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dce4b300-e2e0-41fd-a180-62b3f6d9f518')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-dce4b300-e2e0-41fd-a180-62b3f6d9f518 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_SGD_lr_0.001\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.6237573253218773,\n        \"min\": 10.408400535583496,\n        \"max\": 15.321212768554688,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          15.321212768554688\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07416417141196362,\n        \"min\": 0.7042415142059326,\n        \"max\": 0.8352581262588501,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7042415142059326\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3654241079014744,\n        \"min\": 3.2262052841664457,\n        \"max\": 3.9142320790360254,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.9142320790360254\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1416285921233697,\n        \"min\": 2.595038414001465,\n        \"max\": 2.8779232501983643,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.8779232501983643\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador SGD con learning rate = 0.005 ...\n","\n","Epoch 100\n","  Logs: {'loss': 13.395368576049805, 'mae': 2.993898391723633, 'mse': 13.395368576049805, 'r2_score': 0.7414177656173706, 'val_loss': 12.838191986083984, 'val_mae': 3.001788854598999, 'val_mse': 12.838191986083984, 'val_r2_score': 0.8122977018356323}\n","Epoch 200\n","  Logs: {'loss': 9.484461784362793, 'mae': 2.428997039794922, 'mse': 9.484461784362793, 'r2_score': 0.816913366317749, 'val_loss': 7.011165142059326, 'val_mae': 2.309861421585083, 'val_mse': 7.011165142059326, 'val_r2_score': 0.8974924087524414}\n","Epoch 300\n","  Logs: {'loss': 7.451591968536377, 'mae': 2.11566424369812, 'mse': 7.451591968536377, 'r2_score': 0.856155514717102, 'val_loss': 8.0867919921875, 'val_mae': 2.3679773807525635, 'val_mse': 8.0867919921875, 'val_r2_score': 0.8817660808563232}\n","Epoch 333: early stopping\n","Restoring model weights from the end of the best epoch: 233.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_SGD_lr_0.005:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                             Modelo     Dataset       Loss        R2  \\\n","0  act_relu_dr_0.2_opt_SGD_lr_0.005       Train  10.887449  0.789830   \n","1  act_relu_dr_0.2_opt_SGD_lr_0.005  Validation   3.681180  0.946179   \n","2  act_relu_dr_0.2_opt_SGD_lr_0.005        Test   2.991326  0.916519   \n","\n","       RMSE       MAE  \n","0  3.299614  2.669388  \n","1  1.918640  1.547677  \n","2  1.729545  1.392265  "],"text/html":["\n","  <div id=\"df-fae2607b-d58c-4689-8b1d-799047827cf4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.005</td>\n","      <td>Train</td>\n","      <td>10.887449</td>\n","      <td>0.789830</td>\n","      <td>3.299614</td>\n","      <td>2.669388</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.005</td>\n","      <td>Validation</td>\n","      <td>3.681180</td>\n","      <td>0.946179</td>\n","      <td>1.918640</td>\n","      <td>1.547677</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.005</td>\n","      <td>Test</td>\n","      <td>2.991326</td>\n","      <td>0.916519</td>\n","      <td>1.729545</td>\n","      <td>1.392265</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fae2607b-d58c-4689-8b1d-799047827cf4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fae2607b-d58c-4689-8b1d-799047827cf4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fae2607b-d58c-4689-8b1d-799047827cf4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-40a6749f-4d56-4ca7-9693-e4ba09bef3dd\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-40a6749f-4d56-4ca7-9693-e4ba09bef3dd')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-40a6749f-4d56-4ca7-9693-e4ba09bef3dd button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_SGD_lr_0.005\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.373308607314151,\n        \"min\": 2.991326332092285,\n        \"max\": 10.887449264526367,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          10.887449264526367\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08304077268382766,\n        \"min\": 0.7898302674293518,\n        \"max\": 0.9461788535118103,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7898302674293518\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8571229892694994,\n        \"min\": 1.7295451228841314,\n        \"max\": 3.299613502294832,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.299613502294832\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6968298319645617,\n        \"min\": 1.3922650814056396,\n        \"max\": 2.6693878173828125,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.6693878173828125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador SGD con learning rate = 0.01 ...\n","\n","Epoch 100\n","  Logs: {'loss': 13.9580078125, 'mae': 3.0232439041137695, 'mse': 13.9580078125, 'r2_score': 0.7305566072463989, 'val_loss': 15.850553512573242, 'val_mae': 3.454221487045288, 'val_mse': 15.850553512573242, 'val_r2_score': 0.7682550549507141}\n","Epoch 200\n","  Logs: {'loss': 8.037025451660156, 'mae': 2.387434720993042, 'mse': 8.037025451660156, 'r2_score': 0.8448544144630432, 'val_loss': 8.615313529968262, 'val_mae': 2.3604347705841064, 'val_mse': 8.615313529968262, 'val_r2_score': 0.8740387558937073}\n","Epoch 300\n","  Logs: {'loss': 6.80140495300293, 'mae': 2.1461551189422607, 'mse': 6.80140495300293, 'r2_score': 0.8687066435813904, 'val_loss': 11.98505687713623, 'val_mae': 2.9289488792419434, 'val_mse': 11.98505687713623, 'val_r2_score': 0.8247710466384888}\n","Epoch 400\n","  Logs: {'loss': 5.791851997375488, 'mae': 1.9056936502456665, 'mse': 5.791851997375488, 'r2_score': 0.8881949186325073, 'val_loss': 6.584962368011475, 'val_mae': 1.9758931398391724, 'val_mse': 6.584962368011475, 'val_r2_score': 0.9037237763404846}\n","Epoch 500\n","  Logs: {'loss': 4.720728397369385, 'mae': 1.6988762617111206, 'mse': 4.720728397369385, 'r2_score': 0.9088717699050903, 'val_loss': 5.986546516418457, 'val_mae': 1.9113943576812744, 'val_mse': 5.986546516418457, 'val_r2_score': 0.9124729633331299}\n","Epoch 600\n","  Logs: {'loss': 3.6447253227233887, 'mae': 1.4719165563583374, 'mse': 3.6447253227233887, 'r2_score': 0.9296427369117737, 'val_loss': 5.761911869049072, 'val_mae': 2.0108389854431152, 'val_mse': 5.761911869049072, 'val_r2_score': 0.9157572984695435}\n","Epoch 654: early stopping\n","Restoring model weights from the end of the best epoch: 554.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_SGD_lr_0.01:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                            Modelo     Dataset      Loss        R2      RMSE  \\\n","0  act_relu_dr_0.2_opt_SGD_lr_0.01       Train  4.824554  0.906868  2.196487   \n","1  act_relu_dr_0.2_opt_SGD_lr_0.01  Validation  4.589851  0.932894  2.142394   \n","2  act_relu_dr_0.2_opt_SGD_lr_0.01        Test  2.846894  0.920550  1.687274   \n","\n","        MAE  \n","0  1.754694  \n","1  1.677894  \n","2  1.255509  "],"text/html":["\n","  <div id=\"df-a0de5b4a-76d4-42f3-be62-7ce2534610b7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.01</td>\n","      <td>Train</td>\n","      <td>4.824554</td>\n","      <td>0.906868</td>\n","      <td>2.196487</td>\n","      <td>1.754694</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.01</td>\n","      <td>Validation</td>\n","      <td>4.589851</td>\n","      <td>0.932894</td>\n","      <td>2.142394</td>\n","      <td>1.677894</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.01</td>\n","      <td>Test</td>\n","      <td>2.846894</td>\n","      <td>0.920550</td>\n","      <td>1.687274</td>\n","      <td>1.255509</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0de5b4a-76d4-42f3-be62-7ce2534610b7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a0de5b4a-76d4-42f3-be62-7ce2534610b7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a0de5b4a-76d4-42f3-be62-7ce2534610b7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-860c7181-8dad-456f-b6b3-eb074b0ef77e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-860c7181-8dad-456f-b6b3-eb074b0ef77e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-860c7181-8dad-456f-b6b3-eb074b0ef77e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_SGD_lr_0.01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0804413657899279,\n        \"min\": 2.8468942642211914,\n        \"max\": 4.824553966522217,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4.824553966522217\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.01301874034971943,\n        \"min\": 0.906867504119873,\n        \"max\": 0.9328935146331787,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.906867504119873\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2796894773876108,\n        \"min\": 1.6872742113305683,\n        \"max\": 2.1964867326078292,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.1964867326078292\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.26879124130939713,\n        \"min\": 1.2555094957351685,\n        \"max\": 1.7546943426132202,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.7546943426132202\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador SGD con learning rate = 0.05 ...\n","\n","Epoch 100\n","  Logs: {'loss': 10.585139274597168, 'mae': 2.58461332321167, 'mse': 10.585139274597168, 'r2_score': 0.7956660389900208, 'val_loss': 6.248799800872803, 'val_mae': 2.07075572013855, 'val_mse': 6.248799800872803, 'val_r2_score': 0.9086386561393738}\n","Epoch 200\n","  Logs: {'loss': 6.329928398132324, 'mae': 1.929202675819397, 'mse': 6.329928398132324, 'r2_score': 0.8778079748153687, 'val_loss': 4.80531120300293, 'val_mae': 1.8995870351791382, 'val_mse': 4.80531120300293, 'val_r2_score': 0.9297433495521545}\n","Epoch 265: early stopping\n","Restoring model weights from the end of the best epoch: 165.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_SGD_lr_0.05:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                            Modelo     Dataset      Loss        R2      RMSE  \\\n","0  act_relu_dr_0.2_opt_SGD_lr_0.05       Train  7.134755  0.862272  2.671096   \n","1  act_relu_dr_0.2_opt_SGD_lr_0.05  Validation  2.128790  0.968876  1.459037   \n","2  act_relu_dr_0.2_opt_SGD_lr_0.05        Test  2.381349  0.933542  1.543162   \n","\n","        MAE  \n","0  2.005165  \n","1  1.179798  \n","2  1.296706  "],"text/html":["\n","  <div id=\"df-5e9ad324-7635-4067-9a24-7cee2f8eeec6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.05</td>\n","      <td>Train</td>\n","      <td>7.134755</td>\n","      <td>0.862272</td>\n","      <td>2.671096</td>\n","      <td>2.005165</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.05</td>\n","      <td>Validation</td>\n","      <td>2.128790</td>\n","      <td>0.968876</td>\n","      <td>1.459037</td>\n","      <td>1.179798</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_SGD_lr_0.05</td>\n","      <td>Test</td>\n","      <td>2.381349</td>\n","      <td>0.933542</td>\n","      <td>1.543162</td>\n","      <td>1.296706</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e9ad324-7635-4067-9a24-7cee2f8eeec6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5e9ad324-7635-4067-9a24-7cee2f8eeec6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5e9ad324-7635-4067-9a24-7cee2f8eeec6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-60d6c1a2-1d62-4c76-be52-8983af9e1c2e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-60d6c1a2-1d62-4c76-be52-8983af9e1c2e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-60d6c1a2-1d62-4c76-be52-8983af9e1c2e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_SGD_lr_0.05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.820116456334353,\n        \"min\": 2.1287899017333984,\n        \"max\": 7.1347551345825195,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7.1347551345825195\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.05430216257686925,\n        \"min\": 0.8622717261314392,\n        \"max\": 0.9688757658004761,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.8622717261314392\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6768061266262866,\n        \"min\": 1.4590373201989724,\n        \"max\": 2.6710962421040767,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.6710962421040767\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.44661902814812343,\n        \"min\": 1.1797980070114136,\n        \"max\": 2.005164623260498,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.005164623260498\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador RMSprop con learning rate = 0.001 ...\n","\n","Epoch 100\n","  Logs: {'loss': 364.4663391113281, 'mae': 18.78512954711914, 'mse': 364.4663391113281, 'r2_score': -6.035605430603027, 'val_loss': 459.6083679199219, 'val_mae': 21.056547164916992, 'val_mse': 459.6083679199219, 'val_r2_score': -5.719759464263916}\n","Epoch 200\n","  Logs: {'loss': 15.676871299743652, 'mae': 3.1834869384765625, 'mse': 15.676871299743652, 'r2_score': 0.6973759531974792, 'val_loss': 25.789106369018555, 'val_mae': 4.192038536071777, 'val_mse': 25.789106369018555, 'val_r2_score': 0.6229472160339355}\n","Epoch 300\n","  Logs: {'loss': 13.507269859313965, 'mae': 2.967881441116333, 'mse': 13.507269859313965, 'r2_score': 0.7392576336860657, 'val_loss': 10.087952613830566, 'val_mae': 2.5018858909606934, 'val_mse': 10.087952613830566, 'val_r2_score': 0.8525078892707825}\n","Epoch 400\n","  Logs: {'loss': 9.698948860168457, 'mae': 2.497314214706421, 'mse': 9.698948860168457, 'r2_score': 0.8127729296684265, 'val_loss': 7.3891801834106445, 'val_mae': 2.2778825759887695, 'val_mse': 7.3891801834106445, 'val_r2_score': 0.8919656276702881}\n","Epoch 415: early stopping\n","Restoring model weights from the end of the best epoch: 315.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_RMSprop_lr_0.001:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                                 Modelo     Dataset       Loss        R2  \\\n","0  act_relu_dr_0.2_opt_RMSprop_lr_0.001       Train  14.881327  0.712733   \n","1  act_relu_dr_0.2_opt_RMSprop_lr_0.001  Validation   6.866269  0.899611   \n","2  act_relu_dr_0.2_opt_RMSprop_lr_0.001        Test  11.037598  0.691966   \n","\n","       RMSE       MAE  \n","0  3.857632  3.078615  \n","1  2.620357  2.195877  \n","2  3.322288  2.468138  "],"text/html":["\n","  <div id=\"df-e39321f8-45fc-482b-85b1-0f7f21efc623\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.001</td>\n","      <td>Train</td>\n","      <td>14.881327</td>\n","      <td>0.712733</td>\n","      <td>3.857632</td>\n","      <td>3.078615</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.001</td>\n","      <td>Validation</td>\n","      <td>6.866269</td>\n","      <td>0.899611</td>\n","      <td>2.620357</td>\n","      <td>2.195877</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.001</td>\n","      <td>Test</td>\n","      <td>11.037598</td>\n","      <td>0.691966</td>\n","      <td>3.322288</td>\n","      <td>2.468138</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e39321f8-45fc-482b-85b1-0f7f21efc623')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e39321f8-45fc-482b-85b1-0f7f21efc623 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e39321f8-45fc-482b-85b1-0f7f21efc623');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4a7c4688-f394-4fac-846d-fd2ff07f3a36\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a7c4688-f394-4fac-846d-fd2ff07f3a36')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4a7c4688-f394-4fac-846d-fd2ff07f3a36 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_RMSprop_lr_0.001\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.008644458139608,\n        \"min\": 6.866269111633301,\n        \"max\": 14.881326675415039,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          14.881326675415039\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11436120677185567,\n        \"min\": 0.69196617603302,\n        \"max\": 0.8996108770370483,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7127330303192139\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6205040887159219,\n        \"min\": 2.6203566764151214,\n        \"max\": 3.8576322628543847,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.8576322628543847\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4520387805260538,\n        \"min\": 2.1958765983581543,\n        \"max\": 3.0786147117614746,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.0786147117614746\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador RMSprop con learning rate = 0.005 ...\n","\n","Epoch 100\n","  Logs: {'loss': 15.700582504272461, 'mae': 3.279773235321045, 'mse': 15.700582504272461, 'r2_score': 0.696918249130249, 'val_loss': 15.360675811767578, 'val_mae': 3.248223304748535, 'val_mse': 15.360675811767578, 'val_r2_score': 0.7754173874855042}\n","Epoch 200\n","  Logs: {'loss': 11.8062744140625, 'mae': 2.73915696144104, 'mse': 11.8062744140625, 'r2_score': 0.7720934152603149, 'val_loss': 9.012003898620605, 'val_mae': 2.1648545265197754, 'val_mse': 9.012003898620605, 'val_r2_score': 0.8682389259338379}\n","Epoch 235: early stopping\n","Restoring model weights from the end of the best epoch: 135.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_RMSprop_lr_0.005:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                                 Modelo     Dataset       Loss        R2  \\\n","0  act_relu_dr_0.2_opt_RMSprop_lr_0.005       Train  14.338005  0.723221   \n","1  act_relu_dr_0.2_opt_RMSprop_lr_0.005  Validation   6.968740  0.898113   \n","2  act_relu_dr_0.2_opt_RMSprop_lr_0.005        Test  11.791838  0.670917   \n","\n","       RMSE       MAE  \n","0  3.786556  3.032020  \n","1  2.639837  2.181237  \n","2  3.433925  2.881082  "],"text/html":["\n","  <div id=\"df-fb49352f-e452-4873-acc0-f62a89315f65\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.005</td>\n","      <td>Train</td>\n","      <td>14.338005</td>\n","      <td>0.723221</td>\n","      <td>3.786556</td>\n","      <td>3.032020</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.005</td>\n","      <td>Validation</td>\n","      <td>6.968740</td>\n","      <td>0.898113</td>\n","      <td>2.639837</td>\n","      <td>2.181237</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.005</td>\n","      <td>Test</td>\n","      <td>11.791838</td>\n","      <td>0.670917</td>\n","      <td>3.433925</td>\n","      <td>2.881082</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb49352f-e452-4873-acc0-f62a89315f65')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fb49352f-e452-4873-acc0-f62a89315f65 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fb49352f-e452-4873-acc0-f62a89315f65');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-268c734e-99b5-4cc6-98ee-88ebdbcbbeb3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-268c734e-99b5-4cc6-98ee-88ebdbcbbeb3')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-268c734e-99b5-4cc6-98ee-88ebdbcbbeb3 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_RMSprop_lr_0.005\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.7427999231119036,\n        \"min\": 6.968739986419678,\n        \"max\": 14.338005065917969,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          14.338005065917969\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11898221217892943,\n        \"min\": 0.6709170937538147,\n        \"max\": 0.8981127142906189,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7232212424278259\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5873510420822209,\n        \"min\": 2.6398371136150955,\n        \"max\": 3.7865558316124126,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.7865558316124126\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4539453482128022,\n        \"min\": 2.181236743927002,\n        \"max\": 3.032020330429077,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.032020330429077\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador RMSprop con learning rate = 0.01 ...\n","\n","Epoch 100\n","  Logs: {'loss': 14.999053001403809, 'mae': 3.1295535564422607, 'mse': 14.999053001403809, 'r2_score': 0.7104604244232178, 'val_loss': 26.787019729614258, 'val_mae': 4.3533101081848145, 'val_mse': 26.787019729614258, 'val_r2_score': 0.6083571314811707}\n","Epoch 200\n","  Logs: {'loss': 12.355278968811035, 'mae': 2.8143138885498047, 'mse': 12.355278015136719, 'r2_score': 0.7614955306053162, 'val_loss': 15.822633743286133, 'val_mae': 2.9912426471710205, 'val_mse': 15.822633743286133, 'val_r2_score': 0.7686632871627808}\n","Epoch 300\n","  Logs: {'loss': 9.349848747253418, 'mae': 2.3666133880615234, 'mse': 9.349848747253418, 'r2_score': 0.819511890411377, 'val_loss': 14.182100296020508, 'val_mae': 3.1231510639190674, 'val_mse': 14.182100296020508, 'val_r2_score': 0.7926489114761353}\n","Epoch 312: early stopping\n","Restoring model weights from the end of the best epoch: 212.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_RMSprop_lr_0.01:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                                Modelo     Dataset       Loss        R2  \\\n","0  act_relu_dr_0.2_opt_RMSprop_lr_0.01       Train   9.105602  0.824227   \n","1  act_relu_dr_0.2_opt_RMSprop_lr_0.01  Validation   8.834555  0.870833   \n","2  act_relu_dr_0.2_opt_RMSprop_lr_0.01        Test  10.051233  0.719493   \n","\n","       RMSE       MAE  \n","0  3.017549  2.350596  \n","1  2.972298  2.459720  \n","2  3.170368  2.501739  "],"text/html":["\n","  <div id=\"df-eba7bbd7-ae65-4b62-98fd-b5bcf0ae69ce\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.01</td>\n","      <td>Train</td>\n","      <td>9.105602</td>\n","      <td>0.824227</td>\n","      <td>3.017549</td>\n","      <td>2.350596</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.01</td>\n","      <td>Validation</td>\n","      <td>8.834555</td>\n","      <td>0.870833</td>\n","      <td>2.972298</td>\n","      <td>2.459720</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.01</td>\n","      <td>Test</td>\n","      <td>10.051233</td>\n","      <td>0.719493</td>\n","      <td>3.170368</td>\n","      <td>2.501739</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eba7bbd7-ae65-4b62-98fd-b5bcf0ae69ce')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eba7bbd7-ae65-4b62-98fd-b5bcf0ae69ce button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eba7bbd7-ae65-4b62-98fd-b5bcf0ae69ce');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-10462df4-3ab8-4b2b-a3c6-7f7012b1b2c6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-10462df4-3ab8-4b2b-a3c6-7f7012b1b2c6')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-10462df4-3ab8-4b2b-a3c6-7f7012b1b2c6 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_RMSprop_lr_0.01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6387476940245075,\n        \"min\": 8.834554672241211,\n        \"max\": 10.051233291625977,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          9.105602264404297\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07750813583189936,\n        \"min\": 0.7194933295249939,\n        \"max\": 0.8708333373069763,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.8242267966270447\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10378911128153238,\n        \"min\": 2.9722978774411577,\n        \"max\": 3.1703680057094283,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.0175490492126715\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07801491689088716,\n        \"min\": 2.350595712661743,\n        \"max\": 2.501739025115967,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.350595712661743\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador RMSprop con learning rate = 0.05 ...\n","\n","Epoch 100\n","  Logs: {'loss': 8.314373016357422, 'mae': 2.335629940032959, 'mse': 8.314373016357422, 'r2_score': 0.8395005464553833, 'val_loss': 54.70554733276367, 'val_mae': 6.050754070281982, 'val_mse': 54.70554733276367, 'val_r2_score': 0.20017099380493164}\n","Epoch 200\n","  Logs: {'loss': 6.9293694496154785, 'mae': 2.0531232357025146, 'mse': 6.9293694496154785, 'r2_score': 0.8662364482879639, 'val_loss': 10.820819854736328, 'val_mae': 2.7422292232513428, 'val_mse': 10.820819854736328, 'val_r2_score': 0.8417928814888}\n","Epoch 300\n","  Logs: {'loss': 6.605411052703857, 'mae': 2.1627674102783203, 'mse': 6.605411052703857, 'r2_score': 0.8724901080131531, 'val_loss': 28.902528762817383, 'val_mae': 4.775585651397705, 'val_mse': 28.902528762817383, 'val_r2_score': 0.577427089214325}\n","Epoch 350: early stopping\n","Restoring model weights from the end of the best epoch: 250.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_RMSprop_lr_0.05:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                                Modelo     Dataset       Loss        R2  \\\n","0  act_relu_dr_0.2_opt_RMSprop_lr_0.05       Train  11.417613  0.779596   \n","1  act_relu_dr_0.2_opt_RMSprop_lr_0.05  Validation   5.354020  0.921721   \n","2  act_relu_dr_0.2_opt_RMSprop_lr_0.05        Test   6.735611  0.812025   \n","\n","       RMSE       MAE  \n","0  3.378996  2.641883  \n","1  2.313875  1.773428  \n","2  2.595306  2.300273  "],"text/html":["\n","  <div id=\"df-a4cfbf12-6478-4c63-9f77-67831ce0cafa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.05</td>\n","      <td>Train</td>\n","      <td>11.417613</td>\n","      <td>0.779596</td>\n","      <td>3.378996</td>\n","      <td>2.641883</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.05</td>\n","      <td>Validation</td>\n","      <td>5.354020</td>\n","      <td>0.921721</td>\n","      <td>2.313875</td>\n","      <td>1.773428</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.05</td>\n","      <td>Test</td>\n","      <td>6.735611</td>\n","      <td>0.812025</td>\n","      <td>2.595306</td>\n","      <td>2.300273</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4cfbf12-6478-4c63-9f77-67831ce0cafa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a4cfbf12-6478-4c63-9f77-67831ce0cafa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a4cfbf12-6478-4c63-9f77-67831ce0cafa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-f98012df-4086-4c46-920b-afba055fcc19\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f98012df-4086-4c46-920b-afba055fcc19')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-f98012df-4086-4c46-920b-afba055fcc19 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_RMSprop_lr_0.05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.177973744030607,\n        \"min\": 5.354019641876221,\n        \"max\": 11.41761302947998,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          11.41761302947998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0744808047791415,\n        \"min\": 0.7795960903167725,\n        \"max\": 0.9217209219932556,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7795960903167725\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5519442691156129,\n        \"min\": 2.3138754594567574,\n        \"max\": 3.378995861122055,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.378995861122055\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.43750778311634503,\n        \"min\": 1.7734278440475464,\n        \"max\": 2.641883373260498,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2.641883373260498\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto del optimizador RMSprop con learning rate = 0.1 ...\n","\n","Epoch 100\n","  Logs: {'loss': 10.782804489135742, 'mae': 2.666563034057617, 'mse': 10.782804489135742, 'r2_score': 0.7918503284454346, 'val_loss': 56.511192321777344, 'val_mae': 6.149519920349121, 'val_mse': 56.511192321777344, 'val_r2_score': 0.17377126216888428}\n","Epoch 200\n","  Logs: {'loss': 30.94780921936035, 'mae': 4.739230155944824, 'mse': 30.94780921936035, 'r2_score': 0.4025879502296448, 'val_loss': 17.034055709838867, 'val_mae': 3.259256601333618, 'val_mse': 17.034055709838867, 'val_r2_score': 0.7509515285491943}\n","Epoch 300\n","  Logs: {'loss': 17.44815444946289, 'mae': 3.365307569503784, 'mse': 17.44815444946289, 'r2_score': 0.663183331489563, 'val_loss': 58.405006408691406, 'val_mae': 7.0362138748168945, 'val_mse': 58.405006408691406, 'val_r2_score': 0.1460825800895691}\n","Epoch 350: early stopping\n","Restoring model weights from the end of the best epoch: 250.\n","\n","Métricas obtenidas para act_relu_dr_0.2_opt_RMSprop_lr_0.1:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                               Modelo     Dataset       Loss        R2  \\\n","0  act_relu_dr_0.2_opt_RMSprop_lr_0.1       Train  18.916739  0.634834   \n","1  act_relu_dr_0.2_opt_RMSprop_lr_0.1  Validation   3.700774  0.945892   \n","2  act_relu_dr_0.2_opt_RMSprop_lr_0.1        Test   2.737385  0.923606   \n","\n","       RMSE       MAE  \n","0  4.349338  3.510418  \n","1  1.923740  1.529754  \n","2  1.654505  1.385761  "],"text/html":["\n","  <div id=\"df-c6701961-d64b-41f5-88c0-c20745c3dd69\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.1</td>\n","      <td>Train</td>\n","      <td>18.916739</td>\n","      <td>0.634834</td>\n","      <td>4.349338</td>\n","      <td>3.510418</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.1</td>\n","      <td>Validation</td>\n","      <td>3.700774</td>\n","      <td>0.945892</td>\n","      <td>1.923740</td>\n","      <td>1.529754</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.2_opt_RMSprop_lr_0.1</td>\n","      <td>Test</td>\n","      <td>2.737385</td>\n","      <td>0.923606</td>\n","      <td>1.654505</td>\n","      <td>1.385761</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c6701961-d64b-41f5-88c0-c20745c3dd69')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c6701961-d64b-41f5-88c0-c20745c3dd69 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c6701961-d64b-41f5-88c0-c20745c3dd69');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7f2571a4-e5d5-4b65-b071-14a0a60ccad9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7f2571a4-e5d5-4b65-b071-14a0a60ccad9')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7f2571a4-e5d5-4b65-b071-14a0a60ccad9 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_RMSprop_lr_0.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.075839350434808,\n        \"min\": 2.7373852729797363,\n        \"max\": 18.916738510131836,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          18.916738510131836\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.17351425060196543,\n        \"min\": 0.6348340511322021,\n        \"max\": 0.9458923935890198,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.6348340511322021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4842584767381128,\n        \"min\": 1.654504540029956,\n        \"max\": 4.349337709368156,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4.349337709368156\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1872891457607615,\n        \"min\": 1.3857614994049072,\n        \"max\": 3.51041841506958,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.51041841506958\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","CPU times: user 11min 19s, sys: 18.8 s, total: 11min 38s\n","Wall time: 14min 4s\n"]}],"source":["%%time\n","\n","print(\"-\"*100)\n","for optimizador in [optimizers.Adam, optimizers.SGD, optimizers.RMSprop]:\n","    for learn_rate in [0.001, 0.005, 0.01, 0.05, 0.1]:\n","        if optimizador == optimizers.SGD and learn_rate == 0.1:\n","            continue\n","\n","        print(f'Impacto del optimizador {optimizador.__name__} con learning rate = {learn_rate} ...\\n')\n","        nombre_modelo = f'act_{mejor_act_fun}_dr_{drop_rate_base}_opt_{optimizador.__name__}_lr_{learn_rate}'\n","        modelo_nn = entrena_nn(nombre_modelo, act_fun=mejor_act_fun, drop_rate=drop_rate_base,\n","                               optimizador=optimizador, learn_rate=learn_rate,\n","                               batch_size=batch_size_base, patience=patience)\n","        resumen_modelos = pd.concat([resumen_modelos, modelo_nn])\n","        print(f'\\n{\"-\"*100}')"]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":614},"executionInfo":{"elapsed":74,"status":"ok","timestamp":1757547230731,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"A_jhnvkR1EOY","outputId":"03cfa8e9-6717-4d51-e880-01a8bf184a5d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Dataset                                     Train  Validation      Test  \\\n","Modelo                                                                    \n","act_relu_dr_0.2_opt_SGD_lr_0.05          0.862272    0.968876  0.933542   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.1       0.634834    0.945892  0.923606   \n","act_relu_dr_0.2_opt_SGD_lr_0.01          0.906868    0.932894  0.920550   \n","act_relu_dr_0.2_opt_SGD_lr_0.005         0.789830    0.946179  0.916519   \n","act_relu_dr_0.2_opt_Adam_lr_0.05         0.825903    0.963597  0.907521   \n","act_relu_dr_0.2_opt_Adam_lr_0.01         0.780599    0.961636  0.903687   \n","act_relu_dr_0.2_opt_Adam_lr_0.1          0.896278    0.966475  0.889571   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.05      0.779596    0.921721  0.812025   \n","act_elu_dr_0.2_opt_Adam_lr_0.003         0.682621    0.873100  0.789730   \n","act_relu_dr_0.2_opt_Adam_lr_0.001        0.789801    0.907210  0.778619   \n","act_relu_dr_0.2_opt_Adam_lr_0.005        0.786378    0.901747  0.767450   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.01      0.824227    0.870833  0.719493   \n","act_leaky_relu_dr_0.2_opt_Adam_lr_0.003  0.750924    0.900800  0.710841   \n","modelo_base                              0.785874    0.946612  0.710575   \n","act_relu_dr_0.2_opt_SGD_lr_0.001         0.704242    0.835258  0.709526   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.001     0.712733    0.899611  0.691966   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.005     0.723221    0.898113  0.670917   \n","\n","Dataset                                     act_fun  drop_rate optimizador  \\\n","Modelo                                                                       \n","act_relu_dr_0.2_opt_SGD_lr_0.05                relu        0.2         SGD   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.1             relu        0.2     RMSprop   \n","act_relu_dr_0.2_opt_SGD_lr_0.01                relu        0.2         SGD   \n","act_relu_dr_0.2_opt_SGD_lr_0.005               relu        0.2         SGD   \n","act_relu_dr_0.2_opt_Adam_lr_0.05               relu        0.2        Adam   \n","act_relu_dr_0.2_opt_Adam_lr_0.01               relu        0.2        Adam   \n","act_relu_dr_0.2_opt_Adam_lr_0.1                relu        0.2        Adam   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.05            relu        0.2     RMSprop   \n","act_elu_dr_0.2_opt_Adam_lr_0.003                elu        0.2        Adam   \n","act_relu_dr_0.2_opt_Adam_lr_0.001              relu        0.2        Adam   \n","act_relu_dr_0.2_opt_Adam_lr_0.005              relu        0.2        Adam   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.01            relu        0.2     RMSprop   \n","act_leaky_relu_dr_0.2_opt_Adam_lr_0.003  leaky_relu        0.2        Adam   \n","modelo_base                                    relu        0.2        Adam   \n","act_relu_dr_0.2_opt_SGD_lr_0.001               relu        0.2         SGD   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.001           relu        0.2     RMSprop   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.005           relu        0.2     RMSprop   \n","\n","Dataset                                  learn_rate  \n","Modelo                                               \n","act_relu_dr_0.2_opt_SGD_lr_0.05               0.050  \n","act_relu_dr_0.2_opt_RMSprop_lr_0.1            0.100  \n","act_relu_dr_0.2_opt_SGD_lr_0.01               0.010  \n","act_relu_dr_0.2_opt_SGD_lr_0.005              0.005  \n","act_relu_dr_0.2_opt_Adam_lr_0.05              0.050  \n","act_relu_dr_0.2_opt_Adam_lr_0.01              0.010  \n","act_relu_dr_0.2_opt_Adam_lr_0.1               0.100  \n","act_relu_dr_0.2_opt_RMSprop_lr_0.05           0.050  \n","act_elu_dr_0.2_opt_Adam_lr_0.003              0.003  \n","act_relu_dr_0.2_opt_Adam_lr_0.001             0.001  \n","act_relu_dr_0.2_opt_Adam_lr_0.005             0.005  \n","act_relu_dr_0.2_opt_RMSprop_lr_0.01           0.010  \n","act_leaky_relu_dr_0.2_opt_Adam_lr_0.003       0.003  \n","modelo_base                                   0.003  \n","act_relu_dr_0.2_opt_SGD_lr_0.001              0.001  \n","act_relu_dr_0.2_opt_RMSprop_lr_0.001          0.001  \n","act_relu_dr_0.2_opt_RMSprop_lr_0.005          0.005  "],"text/html":["\n","  <div id=\"df-d8ddefbe-8f4b-4946-852a-655745b83e98\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Dataset</th>\n","      <th>Train</th>\n","      <th>Validation</th>\n","      <th>Test</th>\n","      <th>act_fun</th>\n","      <th>drop_rate</th>\n","      <th>optimizador</th>\n","      <th>learn_rate</th>\n","    </tr>\n","    <tr>\n","      <th>Modelo</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_SGD_lr_0.05</th>\n","      <td>0.862272</td>\n","      <td>0.968876</td>\n","      <td>0.933542</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>SGD</td>\n","      <td>0.050</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_RMSprop_lr_0.1</th>\n","      <td>0.634834</td>\n","      <td>0.945892</td>\n","      <td>0.923606</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>RMSprop</td>\n","      <td>0.100</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_SGD_lr_0.01</th>\n","      <td>0.906868</td>\n","      <td>0.932894</td>\n","      <td>0.920550</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>SGD</td>\n","      <td>0.010</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_SGD_lr_0.005</th>\n","      <td>0.789830</td>\n","      <td>0.946179</td>\n","      <td>0.916519</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>SGD</td>\n","      <td>0.005</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_Adam_lr_0.05</th>\n","      <td>0.825903</td>\n","      <td>0.963597</td>\n","      <td>0.907521</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.050</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_Adam_lr_0.01</th>\n","      <td>0.780599</td>\n","      <td>0.961636</td>\n","      <td>0.903687</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.010</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_Adam_lr_0.1</th>\n","      <td>0.896278</td>\n","      <td>0.966475</td>\n","      <td>0.889571</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.100</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_RMSprop_lr_0.05</th>\n","      <td>0.779596</td>\n","      <td>0.921721</td>\n","      <td>0.812025</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>RMSprop</td>\n","      <td>0.050</td>\n","    </tr>\n","    <tr>\n","      <th>act_elu_dr_0.2_opt_Adam_lr_0.003</th>\n","      <td>0.682621</td>\n","      <td>0.873100</td>\n","      <td>0.789730</td>\n","      <td>elu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.003</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_Adam_lr_0.001</th>\n","      <td>0.789801</td>\n","      <td>0.907210</td>\n","      <td>0.778619</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.001</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_Adam_lr_0.005</th>\n","      <td>0.786378</td>\n","      <td>0.901747</td>\n","      <td>0.767450</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.005</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_RMSprop_lr_0.01</th>\n","      <td>0.824227</td>\n","      <td>0.870833</td>\n","      <td>0.719493</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>RMSprop</td>\n","      <td>0.010</td>\n","    </tr>\n","    <tr>\n","      <th>act_leaky_relu_dr_0.2_opt_Adam_lr_0.003</th>\n","      <td>0.750924</td>\n","      <td>0.900800</td>\n","      <td>0.710841</td>\n","      <td>leaky_relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.003</td>\n","    </tr>\n","    <tr>\n","      <th>modelo_base</th>\n","      <td>0.785874</td>\n","      <td>0.946612</td>\n","      <td>0.710575</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.003</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_SGD_lr_0.001</th>\n","      <td>0.704242</td>\n","      <td>0.835258</td>\n","      <td>0.709526</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>SGD</td>\n","      <td>0.001</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_RMSprop_lr_0.001</th>\n","      <td>0.712733</td>\n","      <td>0.899611</td>\n","      <td>0.691966</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>RMSprop</td>\n","      <td>0.001</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_RMSprop_lr_0.005</th>\n","      <td>0.723221</td>\n","      <td>0.898113</td>\n","      <td>0.670917</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>RMSprop</td>\n","      <td>0.005</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d8ddefbe-8f4b-4946-852a-655745b83e98')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d8ddefbe-8f4b-4946-852a-655745b83e98 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d8ddefbe-8f4b-4946-852a-655745b83e98');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e803aaac-12b7-4e6b-867a-67d4e149b6fe\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e803aaac-12b7-4e6b-867a-67d4e149b6fe')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e803aaac-12b7-4e6b-867a-67d4e149b6fe button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"resumen_promedio\",\n  \"rows\": 17,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 17,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_SGD_lr_0.05\",\n          \"act_relu_dr_0.2_opt_RMSprop_lr_0.1\",\n          \"act_relu_dr_0.2_opt_Adam_lr_0.01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Train\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07313167604441674,\n        \"min\": 0.6348340511322021,\n        \"max\": 0.906867504119873,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          0.8622717261314392,\n          0.6348340511322021,\n          0.7805992364883423\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Validation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.038709248660077265,\n        \"min\": 0.8352581262588501,\n        \"max\": 0.9688757658004761,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          0.9688757658004761,\n          0.9458923935890198,\n          0.9616360664367676\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Test\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09709372620398916,\n        \"min\": 0.6709170937538147,\n        \"max\": 0.933542013168335,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          0.933542013168335,\n          0.9236059188842773,\n          0.903687059879303\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"act_fun\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"relu\",\n          \"elu\",\n          \"leaky_relu\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"drop_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8609792490763984e-17,\n        \"min\": 0.2,\n        \"max\": 0.2,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"optimizador\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"SGD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"learn_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03369063406244252,\n        \"min\": 0.001,\n        \"max\": 0.1,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":37}],"source":["resumen_promedio = resumen_modelos.pivot_table(index='Modelo', columns='Dataset', values='R2')[['Train', 'Validation', 'Test']]\n","\n","nuevas_cols = ['act_fun', 'drop_rate', 'optimizador', 'learn_rate']\n","resumen_promedio.loc[:,nuevas_cols] = list(resumen_promedio.index.map(lambda x: obtener_params_modelo(x)))\n","\n","resumen_promedio.sort_values('Test', ascending=False)"]},{"cell_type":"code","source":["fig, axs = plt.subplots(1, 3, figsize=(15, 4), sharey=True)\n","axs = axs.ravel()\n","\n","for i, opt in enumerate(['Adam', 'SGD', 'RMSprop']):\n","    df_aux = resumen_promedio.loc[resumen_promedio.optimizador==opt, ['Train', 'Validation', 'Test', 'learn_rate']]\n","\n","    df_melted = pd.melt(df_aux, id_vars='learn_rate', var_name='Dataset', value_name='R2 Score')\n","\n","    sns.lineplot(x='learn_rate', y='R2 Score', hue='Dataset', data=df_melted, ax=axs[i])\n","    axs[i].set_title(f'Optimizador {opt}', weight='bold')\n","    axs[i].set_xlabel('Learning Rate')\n","    axs[i].set_ylabel('R2 Score')\n","    axs[i].grid(True)\n","\n","titulo = f'Impacto de Optimizadores y Learning Rate en el Rendimiento del Modelo\\n(con función de activación = {mejor_act_fun})'\n","plt.suptitle(titulo, weight='bold', fontsize=14)\n","plt.tight_layout(rect=[0, 0.03, 1, 0.95])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":401},"id":"MvFc9Kep9DPv","executionInfo":{"status":"ok","timestamp":1757547474713,"user_tz":180,"elapsed":1713,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"012c25ce-67c0-4def-96ac-bcfd9de5d37a"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x400 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Análisis:\n","- Adam: con una tasa de aprendizaje cercanas a 0.1 se observan los mejores $R^2$ para los tres sets, sin tanta diferencia entre sus $R^2$. Así que hay una opción de optimización de la tasa de aprendizaje dentro de ese rango.\n","- SGD: para la tasa de aprendizaje de 0.01 se tienen los mejores valores de $R^2$ en promedio para los tres sets.\n","- RMSprop: Hay demasiada variación entre los $R^2$ de los tres sets, por lo que se descarta este optimizador como opción.\n","\n","Dicho esto, la opción lógica sería explorar el ajuste de parámetros usando a SGD; sin embargo, la interacción entre la tasa de aprendizaje y la de dropout es compleja, dificultando la convegencia del modelo (arroja muchos NaN en las métricas). Por ello, se escoge a Adam, que se adapta mejor a combinaciones de tasas de aprendizaje y de dropout más altas."],"metadata":{"id":"3AzhiTOJFDT3"}},{"cell_type":"code","execution_count":41,"metadata":{"id":"Xj_jfBS9Lb62","executionInfo":{"status":"ok","timestamp":1757547599816,"user_tz":180,"elapsed":38,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"outputs":[],"source":["mejor_optimizador = optimizers.Adam\n","mejor_learn_rate = 0.1"]},{"cell_type":"markdown","metadata":{"id":"677pLIR-rxKY"},"source":["###**Impacto de la regularización vía Dropout**"]},{"cell_type":"markdown","metadata":{"id":"T10wZYKos2ZD"},"source":["Se escogió modificar la tasa de dropout dejando fijos el resto de los parámetros de la red neuronal."]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":194255,"status":"ok","timestamp":1757547915047,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"_i1N9r5Jr9G1","outputId":"06c53352-f1b8-4e05-8dbb-9e4957cae826"},"outputs":[{"output_type":"stream","name":"stdout","text":["----------------------------------------------------------------------------------------------------\n","Impacto de la regularización Dropout = 0.1 ...\n","Epoch 100\n","  Logs: {'loss': 5.800608158111572, 'mae': 1.9089200496673584, 'mse': 5.800608158111572, 'r2_score': 0.8880258798599243, 'val_loss': 4.515340328216553, 'val_mae': 1.6255511045455933, 'val_mse': 4.515340328216553, 'val_r2_score': 0.9339829087257385}\n","Epoch 200\n","  Logs: {'loss': 5.318429470062256, 'mae': 1.7305737733840942, 'mse': 5.318429470062256, 'r2_score': 0.8973338007926941, 'val_loss': 4.274007797241211, 'val_mae': 1.6181254386901855, 'val_mse': 4.274007797241211, 'val_r2_score': 0.9375113248825073}\n","Epoch 300\n","  Logs: {'loss': 4.618475437164307, 'mae': 1.7794479131698608, 'mse': 4.618475437164307, 'r2_score': 0.9108456373214722, 'val_loss': 3.48197603225708, 'val_mae': 1.5432448387145996, 'val_mse': 3.48197603225708, 'val_r2_score': 0.949091374874115}\n","Epoch 400\n","  Logs: {'loss': 3.6798226833343506, 'mae': 1.4511363506317139, 'mse': 3.6798226833343506, 'r2_score': 0.9289652109146118, 'val_loss': 4.64015007019043, 'val_mae': 1.5926289558410645, 'val_mse': 4.64015007019043, 'val_r2_score': 0.9321581125259399}\n","Epoch 406: early stopping\n","Restoring model weights from the end of the best epoch: 306.\n","\n","Métricas obtenidas para act_relu_dr_0.1_opt_Adam_lr_0.1:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                            Modelo     Dataset     Loss        R2      RMSE  \\\n","0  act_relu_dr_0.1_opt_Adam_lr_0.1       Train  3.79635  0.926716  1.948423   \n","1  act_relu_dr_0.1_opt_Adam_lr_0.1  Validation  1.53495  0.977558  1.238931   \n","2  act_relu_dr_0.1_opt_Adam_lr_0.1        Test  3.98852  0.888690  1.997128   \n","\n","        MAE  \n","0  1.496121  \n","1  0.973739  \n","2  1.519681  "],"text/html":["\n","  <div id=\"df-8416ad18-2a15-44af-b875-f02bfb5e62cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.1_opt_Adam_lr_0.1</td>\n","      <td>Train</td>\n","      <td>3.79635</td>\n","      <td>0.926716</td>\n","      <td>1.948423</td>\n","      <td>1.496121</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.1_opt_Adam_lr_0.1</td>\n","      <td>Validation</td>\n","      <td>1.53495</td>\n","      <td>0.977558</td>\n","      <td>1.238931</td>\n","      <td>0.973739</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.1_opt_Adam_lr_0.1</td>\n","      <td>Test</td>\n","      <td>3.98852</td>\n","      <td>0.888690</td>\n","      <td>1.997128</td>\n","      <td>1.519681</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8416ad18-2a15-44af-b875-f02bfb5e62cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8416ad18-2a15-44af-b875-f02bfb5e62cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8416ad18-2a15-44af-b875-f02bfb5e62cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1c9b6abd-8535-41c2-ae82-edb335107d2f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1c9b6abd-8535-41c2-ae82-edb335107d2f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1c9b6abd-8535-41c2-ae82-edb335107d2f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.1_opt_Adam_lr_0.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3644819215987325,\n        \"min\": 1.5349503755569458,\n        \"max\": 3.988520383834839,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.7963504791259766\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04458797639963845,\n        \"min\": 0.8886896371841431,\n        \"max\": 0.9775580763816833,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.9267157912254333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.42438442154586503,\n        \"min\": 1.2389311423791662,\n        \"max\": 1.9971280339114061,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.9484225617473168\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3086234600944343,\n        \"min\": 0.9737390279769897,\n        \"max\": 1.5196808576583862,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.4961211681365967\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto de la regularización Dropout = 0.3 ...\n","Epoch 100\n","  Logs: {'loss': 11.065753936767578, 'mae': 2.628218650817871, 'mse': 11.065753936767578, 'r2_score': 0.7863882780075073, 'val_loss': 14.163025856018066, 'val_mae': 3.0867223739624023, 'val_mse': 14.163025856018066, 'val_r2_score': 0.7929277420043945}\n","Epoch 177: early stopping\n","Restoring model weights from the end of the best epoch: 77.\n","\n","Métricas obtenidas para act_relu_dr_0.3_opt_Adam_lr_0.1:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                            Modelo     Dataset       Loss        R2      RMSE  \\\n","0  act_relu_dr_0.3_opt_Adam_lr_0.1       Train  18.437256  0.644090  4.293863   \n","1  act_relu_dr_0.3_opt_Adam_lr_0.1  Validation   5.688635  0.916829  2.385086   \n","2  act_relu_dr_0.3_opt_Adam_lr_0.1        Test   3.705015  0.896602  1.924842   \n","\n","        MAE  \n","0  3.257110  \n","1  1.592907  \n","2  1.491822  "],"text/html":["\n","  <div id=\"df-1c8d4131-724a-4d64-b520-bca9c9e4718d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.3_opt_Adam_lr_0.1</td>\n","      <td>Train</td>\n","      <td>18.437256</td>\n","      <td>0.644090</td>\n","      <td>4.293863</td>\n","      <td>3.257110</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.3_opt_Adam_lr_0.1</td>\n","      <td>Validation</td>\n","      <td>5.688635</td>\n","      <td>0.916829</td>\n","      <td>2.385086</td>\n","      <td>1.592907</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.3_opt_Adam_lr_0.1</td>\n","      <td>Test</td>\n","      <td>3.705015</td>\n","      <td>0.896602</td>\n","      <td>1.924842</td>\n","      <td>1.491822</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c8d4131-724a-4d64-b520-bca9c9e4718d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1c8d4131-724a-4d64-b520-bca9c9e4718d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1c8d4131-724a-4d64-b520-bca9c9e4718d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e0205519-e8c1-4e75-9f7c-cd3ddbef8919\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e0205519-e8c1-4e75-9f7c-cd3ddbef8919')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e0205519-e8c1-4e75-9f7c-cd3ddbef8919 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.3_opt_Adam_lr_0.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.994800471506352,\n        \"min\": 3.705014944076538,\n        \"max\": 18.437255859375,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          18.437255859375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15196366845436438,\n        \"min\": 0.6440898776054382,\n        \"max\": 0.9168286323547363,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.6440898776054382\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2561524533963608,\n        \"min\": 1.9248415373938028,\n        \"max\": 4.2938625804018224,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4.2938625804018224\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9912979664437129,\n        \"min\": 1.4918220043182373,\n        \"max\": 3.2571096420288086,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.2571096420288086\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto de la regularización Dropout = 0.4 ...\n","Epoch 100\n","  Logs: {'loss': 23.235960006713867, 'mae': 3.942017078399658, 'mse': 23.235960006713867, 'r2_score': 0.5514563918113708, 'val_loss': 11.701315879821777, 'val_mae': 3.092195987701416, 'val_mse': 11.701315879821777, 'val_r2_score': 0.828919529914856}\n","Epoch 200\n","  Logs: {'loss': 13.381114959716797, 'mae': 2.9599223136901855, 'mse': 13.381114959716797, 'r2_score': 0.7416929006576538, 'val_loss': 8.1527681350708, 'val_mae': 2.1224520206451416, 'val_mse': 8.1527681350708, 'val_r2_score': 0.8808014988899231}\n","Epoch 286: early stopping\n","Restoring model weights from the end of the best epoch: 186.\n","\n","Métricas obtenidas para act_relu_dr_0.4_opt_Adam_lr_0.1:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                            Modelo     Dataset       Loss        R2      RMSE  \\\n","0  act_relu_dr_0.4_opt_Adam_lr_0.1       Train  23.421038  0.547884  4.839529   \n","1  act_relu_dr_0.4_opt_Adam_lr_0.1  Validation   4.743393  0.930649  2.177933   \n","2  act_relu_dr_0.4_opt_Adam_lr_0.1        Test   2.571055  0.928248  1.603451   \n","\n","        MAE  \n","0  4.034544  \n","1  1.637807  \n","2  1.430806  "],"text/html":["\n","  <div id=\"df-911f89af-8148-4a0a-9899-7ef35e1737eb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.4_opt_Adam_lr_0.1</td>\n","      <td>Train</td>\n","      <td>23.421038</td>\n","      <td>0.547884</td>\n","      <td>4.839529</td>\n","      <td>4.034544</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.4_opt_Adam_lr_0.1</td>\n","      <td>Validation</td>\n","      <td>4.743393</td>\n","      <td>0.930649</td>\n","      <td>2.177933</td>\n","      <td>1.637807</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.4_opt_Adam_lr_0.1</td>\n","      <td>Test</td>\n","      <td>2.571055</td>\n","      <td>0.928248</td>\n","      <td>1.603451</td>\n","      <td>1.430806</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-911f89af-8148-4a0a-9899-7ef35e1737eb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-911f89af-8148-4a0a-9899-7ef35e1737eb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-911f89af-8148-4a0a-9899-7ef35e1737eb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-cdb5285e-a9bd-496f-b182-55c661bb7c77\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdb5285e-a9bd-496f-b182-55c661bb7c77')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-cdb5285e-a9bd-496f-b182-55c661bb7c77 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.4_opt_Adam_lr_0.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.462222301276343,\n        \"min\": 2.571054697036743,\n        \"max\": 23.421037673950195,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          23.421037673950195\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.22029965333105103,\n        \"min\": 0.5478836894035339,\n        \"max\": 0.9306486248970032,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.5478836894035339\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7265726859597808,\n        \"min\": 1.6034508714135096,\n        \"max\": 4.839528662375107,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4.839528662375107\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4472185914636368,\n        \"min\": 1.430806040763855,\n        \"max\": 4.034543991088867,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4.034543991088867\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","Impacto de la regularización Dropout = 0.5 ...\n","Epoch 100\n","  Logs: {'loss': 36.793540954589844, 'mae': 5.096936225891113, 'mse': 36.793540954589844, 'r2_score': 0.2897428274154663, 'val_loss': 16.17730712890625, 'val_mae': 3.4938910007476807, 'val_mse': 16.17730712890625, 'val_r2_score': 0.7634777426719666}\n","Epoch 200\n","  Logs: {'loss': 17.41721534729004, 'mae': 3.4305596351623535, 'mse': 17.41721534729004, 'r2_score': 0.6637805700302124, 'val_loss': 6.457460403442383, 'val_mae': 1.8778842687606812, 'val_mse': 6.457460403442383, 'val_r2_score': 0.905587911605835}\n","Epoch 300\n","  Logs: {'loss': 14.562870979309082, 'mae': 3.0939557552337646, 'mse': 14.562870979309082, 'r2_score': 0.7188804149627686, 'val_loss': 6.823153972625732, 'val_mae': 2.1331276893615723, 'val_mse': 6.823153972625732, 'val_r2_score': 0.9002412557601929}\n","Epoch 364: early stopping\n","Restoring model weights from the end of the best epoch: 264.\n","\n","Métricas obtenidas para act_relu_dr_0.5_opt_Adam_lr_0.1:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["                            Modelo     Dataset       Loss        R2      RMSE  \\\n","0  act_relu_dr_0.5_opt_Adam_lr_0.1       Train  19.559092  0.622434  4.422566   \n","1  act_relu_dr_0.5_opt_Adam_lr_0.1  Validation   3.185012  0.953433  1.784660   \n","2  act_relu_dr_0.5_opt_Adam_lr_0.1        Test   2.537553  0.929183  1.592970   \n","\n","        MAE  \n","0  3.597721  \n","1  1.331858  \n","2  1.304887  "],"text/html":["\n","  <div id=\"df-d82b1abe-1c2f-4208-befb-ab142cd1fed5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Modelo</th>\n","      <th>Dataset</th>\n","      <th>Loss</th>\n","      <th>R2</th>\n","      <th>RMSE</th>\n","      <th>MAE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>act_relu_dr_0.5_opt_Adam_lr_0.1</td>\n","      <td>Train</td>\n","      <td>19.559092</td>\n","      <td>0.622434</td>\n","      <td>4.422566</td>\n","      <td>3.597721</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>act_relu_dr_0.5_opt_Adam_lr_0.1</td>\n","      <td>Validation</td>\n","      <td>3.185012</td>\n","      <td>0.953433</td>\n","      <td>1.784660</td>\n","      <td>1.331858</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>act_relu_dr_0.5_opt_Adam_lr_0.1</td>\n","      <td>Test</td>\n","      <td>2.537553</td>\n","      <td>0.929183</td>\n","      <td>1.592970</td>\n","      <td>1.304887</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d82b1abe-1c2f-4208-befb-ab142cd1fed5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d82b1abe-1c2f-4208-befb-ab142cd1fed5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d82b1abe-1c2f-4208-befb-ab142cd1fed5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ee1f4f10-43b8-4c85-bf31-c538fc7fc445\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ee1f4f10-43b8-4c85-bf31-c538fc7fc445')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ee1f4f10-43b8-4c85-bf31-c538fc7fc445 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"act_relu_dr_0.5_opt_Adam_lr_0.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dataset\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Train\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.645918633848336,\n        \"min\": 2.537552833557129,\n        \"max\": 19.559091567993164,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          19.559091567993164\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.18450074596979765,\n        \"min\": 0.622434139251709,\n        \"max\": 0.9534331560134888,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.622434139251709\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RMSE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5812394527710218,\n        \"min\": 1.5929698156453338,\n        \"max\": 4.42256617451827,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4.42256617451827\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MAE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3160511815440556,\n        \"min\": 1.304887294769287,\n        \"max\": 3.5977206230163574,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3.5977206230163574\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","----------------------------------------------------------------------------------------------------\n","CPU times: user 2min 38s, sys: 4.81 s, total: 2min 43s\n","Wall time: 3min 14s\n"]}],"source":["%%time\n","\n","print(\"-\"*100)\n","drop_rates = [0.1, 0.2, 0.3, 0.4, 0.5]\n","drop_rates.remove(drop_rate_base)\n","for drop_rate in drop_rates:\n","    print(f'Impacto de la regularización Dropout = {drop_rate} ...')\n","    nombre_modelo = f'act_{mejor_act_fun}_dr_{drop_rate}_opt_{mejor_optimizador.__name__}_lr_{mejor_learn_rate}'\n","    modelo_nn = entrena_nn(nombre_modelo, act_fun=mejor_act_fun, drop_rate=drop_rate,\n","                        optimizador=mejor_optimizador, learn_rate=mejor_learn_rate,\n","                        batch_size=batch_size_base, patience=100)\n","    resumen_modelos = pd.concat([resumen_modelos, modelo_nn])\n","    print(f'\\n{\"-\"*100}')"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":739},"executionInfo":{"elapsed":87,"status":"ok","timestamp":1757547934248,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"v5YsWIsqBj1P","outputId":"7a517f9d-210f-4fd7-9934-8c79b788a1f6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Dataset                                     Train  Validation      Test  \\\n","Modelo                                                                    \n","act_relu_dr_0.2_opt_SGD_lr_0.05          0.862272    0.968876  0.933542   \n","act_relu_dr_0.5_opt_Adam_lr_0.1          0.622434    0.953433  0.929183   \n","act_relu_dr_0.4_opt_Adam_lr_0.1          0.547884    0.930649  0.928248   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.1       0.634834    0.945892  0.923606   \n","act_relu_dr_0.2_opt_SGD_lr_0.01          0.906868    0.932894  0.920550   \n","act_relu_dr_0.2_opt_SGD_lr_0.005         0.789830    0.946179  0.916519   \n","act_relu_dr_0.2_opt_Adam_lr_0.05         0.825903    0.963597  0.907521   \n","act_relu_dr_0.2_opt_Adam_lr_0.01         0.780599    0.961636  0.903687   \n","act_relu_dr_0.3_opt_Adam_lr_0.1          0.644090    0.916829  0.896602   \n","act_relu_dr_0.2_opt_Adam_lr_0.1          0.896278    0.966475  0.889571   \n","act_relu_dr_0.1_opt_Adam_lr_0.1          0.926716    0.977558  0.888690   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.05      0.779596    0.921721  0.812025   \n","act_elu_dr_0.2_opt_Adam_lr_0.003         0.682621    0.873100  0.789730   \n","act_relu_dr_0.2_opt_Adam_lr_0.001        0.789801    0.907210  0.778619   \n","act_relu_dr_0.2_opt_Adam_lr_0.005        0.786378    0.901747  0.767450   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.01      0.824227    0.870833  0.719493   \n","act_leaky_relu_dr_0.2_opt_Adam_lr_0.003  0.750924    0.900800  0.710841   \n","modelo_base                              0.785874    0.946612  0.710575   \n","act_relu_dr_0.2_opt_SGD_lr_0.001         0.704242    0.835258  0.709526   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.001     0.712733    0.899611  0.691966   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.005     0.723221    0.898113  0.670917   \n","\n","Dataset                                     act_fun  drop_rate optimizador  \\\n","Modelo                                                                       \n","act_relu_dr_0.2_opt_SGD_lr_0.05                relu        0.2         SGD   \n","act_relu_dr_0.5_opt_Adam_lr_0.1                relu        0.5        Adam   \n","act_relu_dr_0.4_opt_Adam_lr_0.1                relu        0.4        Adam   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.1             relu        0.2     RMSprop   \n","act_relu_dr_0.2_opt_SGD_lr_0.01                relu        0.2         SGD   \n","act_relu_dr_0.2_opt_SGD_lr_0.005               relu        0.2         SGD   \n","act_relu_dr_0.2_opt_Adam_lr_0.05               relu        0.2        Adam   \n","act_relu_dr_0.2_opt_Adam_lr_0.01               relu        0.2        Adam   \n","act_relu_dr_0.3_opt_Adam_lr_0.1                relu        0.3        Adam   \n","act_relu_dr_0.2_opt_Adam_lr_0.1                relu        0.2        Adam   \n","act_relu_dr_0.1_opt_Adam_lr_0.1                relu        0.1        Adam   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.05            relu        0.2     RMSprop   \n","act_elu_dr_0.2_opt_Adam_lr_0.003                elu        0.2        Adam   \n","act_relu_dr_0.2_opt_Adam_lr_0.001              relu        0.2        Adam   \n","act_relu_dr_0.2_opt_Adam_lr_0.005              relu        0.2        Adam   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.01            relu        0.2     RMSprop   \n","act_leaky_relu_dr_0.2_opt_Adam_lr_0.003  leaky_relu        0.2        Adam   \n","modelo_base                                    relu        0.2        Adam   \n","act_relu_dr_0.2_opt_SGD_lr_0.001               relu        0.2         SGD   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.001           relu        0.2     RMSprop   \n","act_relu_dr_0.2_opt_RMSprop_lr_0.005           relu        0.2     RMSprop   \n","\n","Dataset                                  learn_rate  \n","Modelo                                               \n","act_relu_dr_0.2_opt_SGD_lr_0.05               0.050  \n","act_relu_dr_0.5_opt_Adam_lr_0.1               0.100  \n","act_relu_dr_0.4_opt_Adam_lr_0.1               0.100  \n","act_relu_dr_0.2_opt_RMSprop_lr_0.1            0.100  \n","act_relu_dr_0.2_opt_SGD_lr_0.01               0.010  \n","act_relu_dr_0.2_opt_SGD_lr_0.005              0.005  \n","act_relu_dr_0.2_opt_Adam_lr_0.05              0.050  \n","act_relu_dr_0.2_opt_Adam_lr_0.01              0.010  \n","act_relu_dr_0.3_opt_Adam_lr_0.1               0.100  \n","act_relu_dr_0.2_opt_Adam_lr_0.1               0.100  \n","act_relu_dr_0.1_opt_Adam_lr_0.1               0.100  \n","act_relu_dr_0.2_opt_RMSprop_lr_0.05           0.050  \n","act_elu_dr_0.2_opt_Adam_lr_0.003              0.003  \n","act_relu_dr_0.2_opt_Adam_lr_0.001             0.001  \n","act_relu_dr_0.2_opt_Adam_lr_0.005             0.005  \n","act_relu_dr_0.2_opt_RMSprop_lr_0.01           0.010  \n","act_leaky_relu_dr_0.2_opt_Adam_lr_0.003       0.003  \n","modelo_base                                   0.003  \n","act_relu_dr_0.2_opt_SGD_lr_0.001              0.001  \n","act_relu_dr_0.2_opt_RMSprop_lr_0.001          0.001  \n","act_relu_dr_0.2_opt_RMSprop_lr_0.005          0.005  "],"text/html":["\n","  <div id=\"df-f6e9204c-4d17-42ad-92a5-b1b1df6cdb41\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Dataset</th>\n","      <th>Train</th>\n","      <th>Validation</th>\n","      <th>Test</th>\n","      <th>act_fun</th>\n","      <th>drop_rate</th>\n","      <th>optimizador</th>\n","      <th>learn_rate</th>\n","    </tr>\n","    <tr>\n","      <th>Modelo</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_SGD_lr_0.05</th>\n","      <td>0.862272</td>\n","      <td>0.968876</td>\n","      <td>0.933542</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>SGD</td>\n","      <td>0.050</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.5_opt_Adam_lr_0.1</th>\n","      <td>0.622434</td>\n","      <td>0.953433</td>\n","      <td>0.929183</td>\n","      <td>relu</td>\n","      <td>0.5</td>\n","      <td>Adam</td>\n","      <td>0.100</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.4_opt_Adam_lr_0.1</th>\n","      <td>0.547884</td>\n","      <td>0.930649</td>\n","      <td>0.928248</td>\n","      <td>relu</td>\n","      <td>0.4</td>\n","      <td>Adam</td>\n","      <td>0.100</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_RMSprop_lr_0.1</th>\n","      <td>0.634834</td>\n","      <td>0.945892</td>\n","      <td>0.923606</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>RMSprop</td>\n","      <td>0.100</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_SGD_lr_0.01</th>\n","      <td>0.906868</td>\n","      <td>0.932894</td>\n","      <td>0.920550</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>SGD</td>\n","      <td>0.010</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_SGD_lr_0.005</th>\n","      <td>0.789830</td>\n","      <td>0.946179</td>\n","      <td>0.916519</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>SGD</td>\n","      <td>0.005</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_Adam_lr_0.05</th>\n","      <td>0.825903</td>\n","      <td>0.963597</td>\n","      <td>0.907521</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.050</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_Adam_lr_0.01</th>\n","      <td>0.780599</td>\n","      <td>0.961636</td>\n","      <td>0.903687</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.010</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.3_opt_Adam_lr_0.1</th>\n","      <td>0.644090</td>\n","      <td>0.916829</td>\n","      <td>0.896602</td>\n","      <td>relu</td>\n","      <td>0.3</td>\n","      <td>Adam</td>\n","      <td>0.100</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_Adam_lr_0.1</th>\n","      <td>0.896278</td>\n","      <td>0.966475</td>\n","      <td>0.889571</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.100</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.1_opt_Adam_lr_0.1</th>\n","      <td>0.926716</td>\n","      <td>0.977558</td>\n","      <td>0.888690</td>\n","      <td>relu</td>\n","      <td>0.1</td>\n","      <td>Adam</td>\n","      <td>0.100</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_RMSprop_lr_0.05</th>\n","      <td>0.779596</td>\n","      <td>0.921721</td>\n","      <td>0.812025</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>RMSprop</td>\n","      <td>0.050</td>\n","    </tr>\n","    <tr>\n","      <th>act_elu_dr_0.2_opt_Adam_lr_0.003</th>\n","      <td>0.682621</td>\n","      <td>0.873100</td>\n","      <td>0.789730</td>\n","      <td>elu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.003</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_Adam_lr_0.001</th>\n","      <td>0.789801</td>\n","      <td>0.907210</td>\n","      <td>0.778619</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.001</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_Adam_lr_0.005</th>\n","      <td>0.786378</td>\n","      <td>0.901747</td>\n","      <td>0.767450</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.005</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_RMSprop_lr_0.01</th>\n","      <td>0.824227</td>\n","      <td>0.870833</td>\n","      <td>0.719493</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>RMSprop</td>\n","      <td>0.010</td>\n","    </tr>\n","    <tr>\n","      <th>act_leaky_relu_dr_0.2_opt_Adam_lr_0.003</th>\n","      <td>0.750924</td>\n","      <td>0.900800</td>\n","      <td>0.710841</td>\n","      <td>leaky_relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.003</td>\n","    </tr>\n","    <tr>\n","      <th>modelo_base</th>\n","      <td>0.785874</td>\n","      <td>0.946612</td>\n","      <td>0.710575</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>Adam</td>\n","      <td>0.003</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_SGD_lr_0.001</th>\n","      <td>0.704242</td>\n","      <td>0.835258</td>\n","      <td>0.709526</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>SGD</td>\n","      <td>0.001</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_RMSprop_lr_0.001</th>\n","      <td>0.712733</td>\n","      <td>0.899611</td>\n","      <td>0.691966</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>RMSprop</td>\n","      <td>0.001</td>\n","    </tr>\n","    <tr>\n","      <th>act_relu_dr_0.2_opt_RMSprop_lr_0.005</th>\n","      <td>0.723221</td>\n","      <td>0.898113</td>\n","      <td>0.670917</td>\n","      <td>relu</td>\n","      <td>0.2</td>\n","      <td>RMSprop</td>\n","      <td>0.005</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f6e9204c-4d17-42ad-92a5-b1b1df6cdb41')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f6e9204c-4d17-42ad-92a5-b1b1df6cdb41 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f6e9204c-4d17-42ad-92a5-b1b1df6cdb41');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4077a3cd-39d6-46f2-8d12-f99aea1365e0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4077a3cd-39d6-46f2-8d12-f99aea1365e0')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4077a3cd-39d6-46f2-8d12-f99aea1365e0 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"resumen_promedio\",\n  \"rows\": 21,\n  \"fields\": [\n    {\n      \"column\": \"Modelo\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"act_relu_dr_0.2_opt_SGD_lr_0.05\",\n          \"modelo_base\",\n          \"act_relu_dr_0.2_opt_RMSprop_lr_0.01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Train\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09914281479808343,\n        \"min\": 0.5478836894035339,\n        \"max\": 0.9267157912254333,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          0.8622717261314392,\n          0.7858740091323853,\n          0.8242267966270447\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Validation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03745780911680991,\n        \"min\": 0.8352581262588501,\n        \"max\": 0.9775580763816833,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          0.9688757658004761,\n          0.9466122984886169,\n          0.8708333373069763\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Test\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09631323478225762,\n        \"min\": 0.6709170937538147,\n        \"max\": 0.933542013168335,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          0.933542013168335,\n          0.7105746269226074,\n          0.7194933295249939\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"act_fun\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"relu\",\n          \"elu\",\n          \"leaky_relu\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"drop_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08309489698388169,\n        \"min\": 0.1,\n        \"max\": 0.5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.5,\n          0.1,\n          0.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"optimizador\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"SGD\",\n          \"Adam\",\n          \"RMSprop\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"learn_rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04294947197413657,\n        \"min\": 0.001,\n        \"max\": 0.1,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.05,\n          0.1,\n          0.001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}],"source":["resumen_promedio = resumen_modelos.pivot_table(index='Modelo', columns='Dataset', values='R2')[['Train', 'Validation', 'Test']].sort_values('Test', ascending=False)\n","\n","nuevas_cols = ['act_fun', 'drop_rate', 'optimizador', 'learn_rate']\n","resumen_promedio.loc[:,nuevas_cols] = list(resumen_promedio.index.map(lambda x: obtener_params_modelo(x)))\n","\n","resumen_promedio.sort_values('Test', ascending=False)"]},{"cell_type":"code","source":["criterio = (resumen_promedio.drop_rate.isin(sorted(drop_rates+[drop_rate_base]))) & (resumen_promedio.learn_rate==mejor_learn_rate) & \\\n","            (resumen_promedio.optimizador==mejor_optimizador.__name__) & (resumen_promedio.index!='modelo_base') & \\\n","            (resumen_promedio.act_fun==mejor_act_fun)\n","\n","df_aux = resumen_promedio.loc[criterio, ['Train', 'Validation', 'Test', 'drop_rate']]\n","df_melted = df_aux.melt(id_vars='drop_rate', var_name='Dataset', value_name='R2 Score')\n","\n","plt.figure(figsize=(6, 3))\n","sns.lineplot(x='drop_rate', y='R2 Score', hue='Dataset', data=df_melted)\n","plt.title(f'Impacto de la Regularización Dropout en el Rendimiento del Modelo', weight='bold', fontsize=14)\n","plt.xlabel('Tasa de Dropout')\n","plt.ylabel('R2 Score')\n","plt.tight_layout()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":307},"id":"kMDrCU8yX9zg","executionInfo":{"status":"ok","timestamp":1757547975482,"user_tz":180,"elapsed":247,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"3c738195-e200-4c11-81d4-f846690a3869"},"execution_count":45,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Análisis:\n","- Con tasas inferiores a 0.2 para el drop rate, se observa un rendimiento más parejo para $R^2$ en los tres sets.\n","- Con tasas superiores a 0.2 para el drop rate, se observa un castigo severo al $R^2$ del conjunto de entrenamiento y un subajuste severo."],"metadata":{"id":"YVDkxyxVf6Mg"}},{"cell_type":"markdown","source":["###**Resumen**"],"metadata":{"id":"CDu76xPan4uq"}},{"cell_type":"code","execution_count":46,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":33,"status":"ok","timestamp":1757548109710,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"Mj65c6y84w4N","outputId":"00442f08-e187-4ab6-c5a5-de334aedbacd"},"outputs":[{"output_type":"stream","name":"stdout","text":["--------------------------------------------------\n","Resultados optimizados\n","-------------------------------------------------- \n","\n","Mejor optimizador: Adam\n","Mejor learning rate: 0.1\n","Mejor función de activación: relu\n","Mejor tasa de dropout: 0.2\n","R2 train set: 89.63%\n","R2 Validation set: 96.65%\n","R2 Test set: 88.96%\n"]}],"source":["mejor_drop_rate = 0.2\n","\n","print('-'*50)\n","print('Resultados optimizados')\n","print('-'*50, '\\n')\n","\n","print(f'Mejor optimizador: {mejor_optimizador.__name__}')\n","print(f'Mejor learning rate: {mejor_learn_rate}')\n","print(f'Mejor función de activación: {mejor_act_fun}')\n","print(f'Mejor tasa de dropout: {mejor_drop_rate}')\n","\n","criterio = (resumen_promedio.drop_rate==mejor_drop_rate) & (resumen_promedio.learn_rate==mejor_learn_rate) & \\\n","           (resumen_promedio.optimizador==mejor_optimizador.__name__) & (resumen_promedio.act_fun==mejor_act_fun)\n","\n","print(f'R2 train set: {resumen_promedio.loc[criterio, \"Train\"].iloc[0]:.2%}')\n","print(f'R2 Validation set: {resumen_promedio.loc[criterio, \"Validation\"].iloc[0]:.2%}')\n","print(f'R2 Test set: {resumen_promedio.loc[criterio, \"Test\"].iloc[0]:.2%}')"]},{"cell_type":"markdown","metadata":{"id":"9TK03KEpms3h"},"source":["##**3. Evaluación y optimización del modelo (3 puntos)**\n","\n","- Evalúa el modelo con datos de prueba.\n","- Ajusta hiperparámetros para mejorar el rendimiento.\n","- Analiza el impacto de cada variable en la predicción.\n","- Realiza predicciones con el modelo y compáralas con datos reales."]},{"cell_type":"markdown","metadata":{"id":"bDPGSpr97VZJ"},"source":["###**Evaluar modelo con datos de prueba**"]},{"cell_type":"markdown","metadata":{"id":"c6my_L1A7Zbt"},"source":["Esto fue hecho en el punto anterior para muchos modelos. En particular, para los mejores parámetros observados:\n","- R2 train set: 89.63%\n","- R2 Validation set: 96.65%\n","- R2 Test set: 88.96%"]},{"cell_type":"markdown","metadata":{"id":"l5V4Zd_d7euQ"},"source":["###**Ajustar hiperparámetros**"]},{"cell_type":"markdown","source":["####**Preparar los datos**"],"metadata":{"id":"eL0OU1kjnGl5"}},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":44,"status":"ok","timestamp":1757548211286,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"bFq5ao4iBspk","outputId":"30b69abb-6800-45e4-de7d-ace99189913a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Dimensión de X_train: (85, 6)\n"]}],"source":["# consolidar de nuevo el conjunto de entrenamiento, dejando aparte el mismo test set usado en el punto anterior.\n","train = df.loc[~df.index.isin(X_test.index)]\n","\n","X_train = train[atributos]\n","y_train = train.Tasa_Natalidad\n","\n","print(f'Dimensión de X_train: {X_train.shape}')"]},{"cell_type":"code","execution_count":48,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":415},"executionInfo":{"elapsed":198,"status":"ok","timestamp":1757548213566,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"tnyfqTRln1Ju","outputId":"3d619624-cae2-4eed-af98-38b2c1578f1b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Tasa_Natalidad\n","3    46\n","2    17\n","1    16\n","0     6\n","Name: count, dtype: int64\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Preparar una variable para aplicar estratificación al momento de emplear validación cruzada\n","# de modo que se mantenga la propoción de rangos de natalidad en cada uno de los 5 folds.\n","\n","stratify = pd.cut(y_train, bins=4, labels=False)\n","print(stratify.value_counts()) # al menos hay cinco registros por grupo\n","\n","plt.figure(figsize=(6, 3))\n","sns.histplot(y_train, kde=True, bins=4)\n","plt.title(f'Histograma para {target} (X_train)', weight='bold', fontsize=10)\n","plt.xlabel('')\n","plt.ylabel('Count')\n","plt.show()"]},{"cell_type":"markdown","source":["####**OPTUNA**"],"metadata":{"id":"TRu7NH0qomiQ"}},{"cell_type":"markdown","metadata":{"id":"ACbaB73rWAhK"},"source":["Ahora uso Optuna para optimización de los hiperparámetros con validación cruzada, buscando  maximizar el $R^2$ promedio del conjunto oof. La manera de efectuarla y predecir es la misma que la hecha por SKLearn:\n","- maximizar el $R^2$ promedio del conjunto oof,\n","- re-entrenar la red con  los mejores parámetros,\n","- predecir para un nuevo conjunto.\n","\n","Dentro de los hiperparámetros a considerar, se va a incorporar el número de epochs para no usar early stopping, dado que en la parte anterior se observó que el modelo estaba subajustado."]},{"cell_type":"code","execution_count":50,"metadata":{"id":"5xnKP96CByrm","executionInfo":{"status":"ok","timestamp":1757548728123,"user_tz":180,"elapsed":9,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"outputs":[],"source":["def fun_objetivo(trial):\n","    '''\n","    Define función objetivo para validación cruzada.\n","    Se maximixará R2 del conjunto de validación.\n","    Params:\n","    - trial: objeto optuna para optimizar hiperparámetros\n","\n","    Returns:\n","    - R2 del conjunto de validación, promediado entre folds\n","    '''\n","\n","    # definir espacio de búsqueda de hiperparámetros\n","\n","    hyperparams = {\n","        'epochs': trial.suggest_int('epochs', 150, 300),\n","        'learning_rate': trial.suggest_float('learning_rate', 0.04, 0.1), # contiene a la mejor tasa encontrada\n","        'drop_rate_capas_internas': trial.suggest_float('drop_rate_capas_internas', 0.2, 0.4), # contiene a la mejor tasa encontrada\n","        'drop_rate_ultima_capa': trial.suggest_float('drop_rate_ultima_capa', 0.05, 0.2), # contiene a la mejor tasa encontrada\n","        'usar_dropout_ultima': trial.suggest_categorical('usar_dropout_ultima', [True, False]), # posibilidad de usar o no drop rate en la última capa\n","        'batch_size': trial.suggest_categorical('batch_size', [8, 16, 32]), # no optimizado anteriormente\n","        'n_layers': trial.suggest_categorical('n_layers', [2, 3]),  # Número de capas ocultas entre 2 y 3\n","    }\n","\n","    # Configurar K-Fold Cross Validation\n","    skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\n","    oof_r2_scores = []\n","    oof_rmse = []\n","    oof_mae = []\n","    oof_loss = []\n","\n","    for fold, (train_idx, val_idx) in enumerate(skf.split(X_train, stratify)):\n","        # setear semillas para reproducibilidad\n","        random.seed(random_seed*2**(fold+1))\n","        np.random.seed(random_seed*2**(fold+1))\n","        tf_random.set_seed(random_seed*2**(fold+1))\n","\n","        print(f\"  Fold {fold + 1}/5\", end=\"\\r\")\n","\n","        # train y val sets para el fold\n","        X_train_fold = X_train.iloc[train_idx]\n","        X_val_fold = X_train.iloc[val_idx]\n","        y_train_fold = y_train.iloc[train_idx]\n","        y_val_fold = y_train.iloc[val_idx]\n","\n","        # Normalizar\n","        normalizer = layers.Normalization(axis=-1)\n","        normalizer.adapt(X_train_fold.values)\n","\n","        X_train_norm = normalizer(X_train_fold.values)\n","        X_val_norm = normalizer(X_val_fold.values)\n","\n","        # Crear modelo con arquitectura dinámica\n","        modelo = models.Sequential()\n","        modelo.add(layers.Input(shape=(len(atributos),)))\n","\n","        # Capas ocultas según n_layers (2 o 3)\n","        for i in range(hyperparams['n_layers']):\n","            modelo.add(layers.Dense(64, use_bias=False))\n","            modelo.add(layers.BatchNormalization())\n","            if i < hyperparams['n_layers'] - 1:\n","                modelo.add(layers.Activation(mejor_act_fun)) # activación capas ocultas, menos la última\n","                modelo.add(layers.Dropout(hyperparams['drop_rate_capas_internas'])) # Dropout capas ocultas, menos la última\n","        modelo.add(layers.Activation('relu')) # activación última capa interna\n","        if hyperparams['usar_dropout_ultima']: # dropout última capa interna\n","            modelo.add(layers.Dropout(hyperparams['drop_rate_ultima_capa']))\n","\n","        # Capa de salida\n","        modelo.add(layers.Dense(1))\n","\n","        #if fold==0: modelo.summary()\n","\n","        optimizador = mejor_optimizador(learning_rate=hyperparams['learning_rate'])\n","        modelo.compile(\n","            optimizer=optimizador,\n","            loss='mse',\n","            metrics=['r2_score', 'mse', 'mae']\n","        )\n","\n","        history = modelo.fit(\n","            X_train_norm, y_train_fold,\n","            validation_data=(X_val_norm, y_val_fold),\n","            epochs=hyperparams['epochs'],\n","            batch_size=hyperparams['batch_size'],\n","            verbose=0\n","        )\n","\n","        # Guardar mejor val_r2_score de este fold\n","        history = pd.DataFrame(history.history)\n","        best_iter = np.argmax(history['val_r2_score'])\n","        _, _, _, _, best_val_loss, best_val_mae, best_val_mse, best_val_r2_score = history.iloc[best_iter]\n","\n","        oof_r2_scores.append(best_val_r2_score)\n","        oof_rmse.append(best_val_mse**.5)\n","        oof_mae.append(best_val_mae)\n","        oof_loss.append(best_val_loss)\n","\n","    print(f'                            OOF --> R2 = {np.mean(oof_r2_scores)}, RMSE = {np.mean(oof_rmse)}, MAE = {np.mean(oof_mae)}, loss = {np.mean(oof_loss)}')\n","\n","    # promedio de r2_score entre folds\n","    return np.mean(oof_r2_scores)\n","\n","\n","def optimizar_hiperparametros_cv(n_trials=50):\n","    '''\n","    Efectuar optimización de hiperparámetros con Optuna.\n","    Params:\n","    - n_trials: número de intentos de optimización\n","\n","    Returns:\n","    - Mejores parámetros encontrados.\n","    '''\n","\n","    study = optuna.create_study(\n","        direction='maximize',\n","        study_name='mejores_parametros_para_regresion',\n","        sampler=optuna.samplers.TPESampler(seed=42)\n","    )\n","\n","    print('Iniciando optimización de hiperparámetros ...')\n","    print(f'Número de trials: {n_trials}')\n","    print('-'*50)\n","\n","    study.optimize(fun_objetivo, n_trials=n_trials, show_progress_bar=True)\n","\n","    # imprimir mejores parámetros\n","    print('\\n' + '='*50)\n","    print('RESULTADOS')\n","    print('='*50)\n","    print(f'Mejor trial: {study.best_trial.number}')\n","    print(f'Mejor R2: {study.best_value:.2f}')\n","    print(f'Mejores hiperparámetros:')\n","    for k, v in study.best_params.items():\n","        print(f\"  {k}: {v}\")\n","\n","    return study"]},{"cell_type":"code","source":["%%time\n","\n","# Ejecutar el estudio\n","opt_study_cv = optimizar_hiperparametros_cv(n_trials=50)\n","mejores_parametros = opt_study_cv.best_params"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["d86a5f67dda54beba7929bf6f4f1ca9d","4d22e6fabdb142f89843714f87efccee","edc61275137141d48bf092e4d0ca8cbe","1c70f73e85dc4f4d8224ab24e2a984c3","0abc560a37534c3facc4a8c4c07ee9f1","c02ac83d9d40463a8f71728e6dcc067e","2fbc43d3ec484cac8b87bec225b1c9c0","a0914598b2de4b84ab9d2347200d9f83","3344602c9ebd4045b2c09e18233d6e46","ae9f7df28f99422893bf3fd93628fa66","d96889c532a642afb90b1b64a24ec567"]},"id":"hFBAuzTYETeV","executionInfo":{"status":"ok","timestamp":1757558718466,"user_tz":180,"elapsed":9989618,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"ec4a620f-b683-46d7-f7d1-e017b56726b3"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stderr","text":["[I 2025-09-10 23:58:49,504] A new study created in memory with name: mejores_parametros_para_regresion\n"]},{"output_type":"stream","name":"stdout","text":["Iniciando optimización de hiperparámetros ...\n","Número de trials: 50\n","--------------------------------------------------\n"]},{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/50 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d86a5f67dda54beba7929bf6f4f1ca9d"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["                            OOF --> R2 = 0.9057074189186096, RMSE = 2.088793138571646, MAE = 1.685696530342102, loss = 4.7024003028869625\n","[I 2025-09-11 00:01:47,211] Trial 0 finished with value: 0.9057074189186096 and parameters: {'epochs': 206, 'learning_rate': 0.09704285838459498, 'drop_rate_capas_internas': 0.346398788362281, 'drop_rate_ultima_capa': 0.1397987726295555, 'usar_dropout_ultima': True, 'batch_size': 16, 'n_layers': 2}. Best is trial 0 with value: 0.9057074189186096.\n","                            OOF --> R2 = 0.8854733228683471, RMSE = 2.407924117253793, MAE = 1.9040528774261474, loss = 6.026446723937989\n","[I 2025-09-11 00:05:49,973] Trial 1 finished with value: 0.8854733228683471 and parameters: {'epochs': 296, 'learning_rate': 0.08994655844802531, 'drop_rate_capas_internas': 0.24246782213565524, 'drop_rate_ultima_capa': 0.0772737450810651, 'usar_dropout_ultima': False, 'batch_size': 8, 'n_layers': 2}. Best is trial 0 with value: 0.9057074189186096.\n","                            OOF --> R2 = 0.8610102891921997, RMSE = 2.62269850644659, MAE = 2.1355190515518188, loss = 7.306993579864502\n","[I 2025-09-11 00:08:25,205] Trial 2 finished with value: 0.8610102891921997 and parameters: {'epochs': 194, 'learning_rate': 0.0619817105976215, 'drop_rate_capas_internas': 0.2912139968434072, 'drop_rate_ultima_capa': 0.16777639420895207, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 2}. Best is trial 0 with value: 0.9057074189186096.\n","                            OOF --> R2 = 0.937046492099762, RMSE = 1.7526215786045611, MAE = 1.483475351333618, loss = 3.2755267143249513\n","[I 2025-09-11 00:12:15,179] Trial 3 finished with value: 0.937046492099762 and parameters: {'epochs': 293, 'learning_rate': 0.09793792198447357, 'drop_rate_capas_internas': 0.3616794696232922, 'drop_rate_ultima_capa': 0.09569206537600561, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 3 with value: 0.937046492099762.\n","                            OOF --> R2 = 0.8978278398513794, RMSE = 2.3326396962752147, MAE = 1.8374701499938966, loss = 5.472051429748535\n","[I 2025-09-11 00:15:10,941] Trial 4 finished with value: 0.8978278398513794 and parameters: {'epochs': 189, 'learning_rate': 0.07975133706123892, 'drop_rate_capas_internas': 0.2623422152178822, 'drop_rate_ultima_capa': 0.12801020317667164, 'usar_dropout_ultima': True, 'batch_size': 8, 'n_layers': 2}. Best is trial 3 with value: 0.937046492099762.\n","                            OOF --> R2 = 0.9321910977363587, RMSE = 1.783494618739867, MAE = 1.4616464138031007, loss = 3.515108573436737\n","[I 2025-09-11 00:19:12,251] Trial 5 finished with value: 0.9321910977363587 and parameters: {'epochs': 289, 'learning_rate': 0.045309550123115175, 'drop_rate_capas_internas': 0.23919657248382906, 'drop_rate_ultima_capa': 0.056784093336580715, 'usar_dropout_ultima': False, 'batch_size': 16, 'n_layers': 3}. Best is trial 3 with value: 0.937046492099762.\n","                            OOF --> R2 = 0.9230154156684875, RMSE = 1.9776360135953097, MAE = 1.6125607252120973, loss = 4.003693103790283\n","[I 2025-09-11 00:21:36,596] Trial 6 finished with value: 0.9230154156684875 and parameters: {'epochs': 171, 'learning_rate': 0.08813181884524238, 'drop_rate_capas_internas': 0.21491012873595416, 'drop_rate_ultima_capa': 0.19803304049007764, 'usar_dropout_ultima': True, 'batch_size': 16, 'n_layers': 3}. Best is trial 3 with value: 0.937046492099762.\n","                            OOF --> R2 = 0.8522055864334106, RMSE = 2.681144908083586, MAE = 2.180561327934265, loss = 7.584518718719482\n","[I 2025-09-11 00:23:50,083] Trial 7 finished with value: 0.8522055864334106 and parameters: {'epochs': 161, 'learning_rate': 0.06150794371265636, 'drop_rate_capas_internas': 0.22317381190502594, 'drop_rate_ultima_capa': 0.17946551388133902, 'usar_dropout_ultima': True, 'batch_size': 32, 'n_layers': 2}. Best is trial 3 with value: 0.937046492099762.\n","                            OOF --> R2 = 0.9103118300437927, RMSE = 2.1282363085478844, MAE = 1.7388483047485352, loss = 4.654737567901611\n","[I 2025-09-11 00:27:45,571] Trial 8 finished with value: 0.9103118300437927 and parameters: {'epochs': 283, 'learning_rate': 0.06833289550971697, 'drop_rate_capas_internas': 0.22391884918766036, 'drop_rate_ultima_capa': 0.15698671808344927, 'usar_dropout_ultima': True, 'batch_size': 8, 'n_layers': 2}. Best is trial 3 with value: 0.937046492099762.\n","                            OOF --> R2 = 0.8092775344848633, RMSE = 3.0150438491251723, MAE = 2.4784849882125854, loss = 9.728135013580323\n","[I 2025-09-11 00:29:54,739] Trial 9 finished with value: 0.8092775344848633 and parameters: {'epochs': 166, 'learning_rate': 0.041885751141204054, 'drop_rate_capas_internas': 0.3272820822527561, 'drop_rate_ultima_capa': 0.09715339716144901, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 2}. Best is trial 3 with value: 0.937046492099762.\n","                            OOF --> R2 = 0.9277442336082459, RMSE = 1.8465995992681108, MAE = 1.4995944857597352, loss = 3.760890007019043\n","[I 2025-09-11 00:33:14,060] Trial 10 finished with value: 0.9277442336082459 and parameters: {'epochs': 249, 'learning_rate': 0.0809072828188018, 'drop_rate_capas_internas': 0.3939074221575732, 'drop_rate_ultima_capa': 0.10202763371099328, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 3 with value: 0.937046492099762.\n","                            OOF --> R2 = 0.9270697355270385, RMSE = 1.8111349782498987, MAE = 1.5024903059005736, loss = 3.6208375453948975\n","[I 2025-09-11 00:36:58,820] Trial 11 finished with value: 0.9270697355270385 and parameters: {'epochs': 250, 'learning_rate': 0.045100513968478535, 'drop_rate_capas_internas': 0.39589008185489677, 'drop_rate_ultima_capa': 0.05148127963217749, 'usar_dropout_ultima': False, 'batch_size': 16, 'n_layers': 3}. Best is trial 3 with value: 0.937046492099762.\n","                            OOF --> R2 = 0.9222716093063354, RMSE = 1.9540334685781668, MAE = 1.5749782085418702, loss = 3.967266798019409\n","[I 2025-09-11 00:40:35,379] Trial 12 finished with value: 0.9222716093063354 and parameters: {'epochs': 271, 'learning_rate': 0.054403994988319215, 'drop_rate_capas_internas': 0.33797808466993845, 'drop_rate_ultima_capa': 0.050736733241399073, 'usar_dropout_ultima': False, 'batch_size': 16, 'n_layers': 3}. Best is trial 3 with value: 0.937046492099762.\n","                            OOF --> R2 = 0.9378099322319031, RMSE = 1.7367486483175607, MAE = 1.4304181456565856, loss = 3.2429096817970278\n","[I 2025-09-11 00:44:26,456] Trial 13 finished with value: 0.9378099322319031 and parameters: {'epochs': 300, 'learning_rate': 0.052531789499302615, 'drop_rate_capas_internas': 0.2887073223025305, 'drop_rate_ultima_capa': 0.08419723971919277, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 13 with value: 0.9378099322319031.\n","                            OOF --> R2 = 0.9430076599121093, RMSE = 1.6363393537902642, MAE = 1.318843424320221, loss = 2.956088626384735\n","[I 2025-09-11 00:47:44,834] Trial 14 finished with value: 0.9430076599121093 and parameters: {'epochs': 258, 'learning_rate': 0.09952112028958188, 'drop_rate_capas_internas': 0.2876260334982269, 'drop_rate_ultima_capa': 0.10175808128205406, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9365331649780273, RMSE = 1.732790900283235, MAE = 1.4579590201377868, loss = 3.2242875576019285\n","[I 2025-09-11 00:51:00,611] Trial 15 finished with value: 0.9365331649780273 and parameters: {'epochs': 253, 'learning_rate': 0.07509870148716166, 'drop_rate_capas_internas': 0.30419784149276535, 'drop_rate_ultima_capa': 0.11250278836721155, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9006842970848083, RMSE = 2.082607773823182, MAE = 1.7939786076545716, loss = 4.99019193649292\n","[I 2025-09-11 00:53:55,624] Trial 16 finished with value: 0.9006842970848083 and parameters: {'epochs': 227, 'learning_rate': 0.05153939984849321, 'drop_rate_capas_internas': 0.2722183059751395, 'drop_rate_ultima_capa': 0.0756642244802119, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9345946907997131, RMSE = 1.7655671653941727, MAE = 1.4116281270980835, loss = 3.3615997791290284\n","[I 2025-09-11 00:57:31,989] Trial 17 finished with value: 0.9345946907997131 and parameters: {'epochs': 268, 'learning_rate': 0.06823876866692657, 'drop_rate_capas_internas': 0.3000183282944103, 'drop_rate_ultima_capa': 0.07944196298649697, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9051676034927368, RMSE = 2.0929924737559626, MAE = 1.671101701259613, loss = 4.798930883407593\n","[I 2025-09-11 01:00:29,675] Trial 18 finished with value: 0.9051676034927368 and parameters: {'epochs': 231, 'learning_rate': 0.05591830571003417, 'drop_rate_capas_internas': 0.2721224914096434, 'drop_rate_ultima_capa': 0.12740429580267812, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9415770769119263, RMSE = 1.632777345549539, MAE = 1.3139140009880066, loss = 2.934428310394287\n","[I 2025-09-11 01:03:51,571] Trial 19 finished with value: 0.9415770769119263 and parameters: {'epochs': 268, 'learning_rate': 0.08956056700395913, 'drop_rate_capas_internas': 0.30983606736732094, 'drop_rate_ultima_capa': 0.1148465028845716, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9208892464637757, RMSE = 1.9770501085546073, MAE = 1.5726545333862305, loss = 4.123053693771363\n","[I 2025-09-11 01:07:37,895] Trial 20 finished with value: 0.9208892464637757 and parameters: {'epochs': 272, 'learning_rate': 0.08951694383900193, 'drop_rate_capas_internas': 0.32054750875842825, 'drop_rate_ultima_capa': 0.1443884753413279, 'usar_dropout_ultima': False, 'batch_size': 8, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9344023108482361, RMSE = 1.832748443952509, MAE = 1.4641202688217163, loss = 3.420488119125366\n","[I 2025-09-11 01:10:50,262] Trial 21 finished with value: 0.9344023108482361 and parameters: {'epochs': 260, 'learning_rate': 0.09969832716947934, 'drop_rate_capas_internas': 0.2918229721905032, 'drop_rate_ultima_capa': 0.11335643976945177, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9183368444442749, RMSE = 1.9418090320086219, MAE = 1.4807724952697754, loss = 4.068180108070374\n","[I 2025-09-11 01:14:01,018] Trial 22 finished with value: 0.9183368444442749 and parameters: {'epochs': 239, 'learning_rate': 0.09242740405310422, 'drop_rate_capas_internas': 0.31336511183089333, 'drop_rate_ultima_capa': 0.11168453667552762, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9138729453086853, RMSE = 1.9726813036736381, MAE = 1.5424233198165893, loss = 4.305707883834839\n","[I 2025-09-11 01:17:31,838] Trial 23 finished with value: 0.9138729453086853 and parameters: {'epochs': 281, 'learning_rate': 0.08517258770168269, 'drop_rate_capas_internas': 0.280197053082636, 'drop_rate_ultima_capa': 0.08785470507513263, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9340102076530457, RMSE = 1.8217098749858427, MAE = 1.4389374017715455, loss = 3.42443904876709\n","[I 2025-09-11 01:21:17,305] Trial 24 finished with value: 0.9340102076530457 and parameters: {'epochs': 300, 'learning_rate': 0.0744806073791619, 'drop_rate_capas_internas': 0.2525601084059903, 'drop_rate_ultima_capa': 0.06891953877752174, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9176834702491761, RMSE = 1.931871517419987, MAE = 1.5782033205032349, loss = 4.141990113258362\n","[I 2025-09-11 01:24:03,708] Trial 25 finished with value: 0.9176834702491761 and parameters: {'epochs': 215, 'learning_rate': 0.09282820134101828, 'drop_rate_capas_internas': 0.36436056894989066, 'drop_rate_ultima_capa': 0.08729566146316102, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9226549506187439, RMSE = 1.848686670939901, MAE = 1.4802270174026488, loss = 3.8469878911972044\n","[I 2025-09-11 01:27:35,276] Trial 26 finished with value: 0.9226549506187439 and parameters: {'epochs': 278, 'learning_rate': 0.09504451516330838, 'drop_rate_capas_internas': 0.2837590083522553, 'drop_rate_ultima_capa': 0.1041630833263051, 'usar_dropout_ultima': True, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9221631407737731, RMSE = 1.9455613396593918, MAE = 1.5218700170516968, loss = 3.958565282821655\n","[I 2025-09-11 01:31:05,506] Trial 27 finished with value: 0.9221631407737731 and parameters: {'epochs': 263, 'learning_rate': 0.08301376275369177, 'drop_rate_capas_internas': 0.3163760436982683, 'drop_rate_ultima_capa': 0.11851895711772084, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9047397136688232, RMSE = 2.2008613356342996, MAE = 1.7364192247390746, loss = 4.9682896614074705\n","[I 2025-09-11 01:34:34,534] Trial 28 finished with value: 0.9047397136688232 and parameters: {'epochs': 238, 'learning_rate': 0.06200965245196609, 'drop_rate_capas_internas': 0.25614670917279125, 'drop_rate_ultima_capa': 0.06483306111894764, 'usar_dropout_ultima': False, 'batch_size': 8, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9135808348655701, RMSE = 2.0375612625915953, MAE = 1.7348028421401978, loss = 4.385801649093628\n","[I 2025-09-11 01:37:16,060] Trial 29 finished with value: 0.9135808348655701 and parameters: {'epochs': 212, 'learning_rate': 0.07623793745248449, 'drop_rate_capas_internas': 0.34328782961621473, 'drop_rate_ultima_capa': 0.137893987409346, 'usar_dropout_ultima': True, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9242235541343689, RMSE = 1.9109050146736195, MAE = 1.5263443470001221, loss = 3.8889816761016847\n","[I 2025-09-11 01:40:43,721] Trial 30 finished with value: 0.9242235541343689 and parameters: {'epochs': 259, 'learning_rate': 0.09686997897072083, 'drop_rate_capas_internas': 0.3605780778675899, 'drop_rate_ultima_capa': 0.1409456197852689, 'usar_dropout_ultima': False, 'batch_size': 16, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9252939343452453, RMSE = 1.8580949798645752, MAE = 1.5345598340034485, loss = 3.7697067499160766\n","[I 2025-09-11 01:44:18,337] Trial 31 finished with value: 0.9252939343452453 and parameters: {'epochs': 290, 'learning_rate': 0.09918857860363801, 'drop_rate_capas_internas': 0.3572976075082246, 'drop_rate_ultima_capa': 0.09220916066622821, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9280367612838745, RMSE = 1.822273732813235, MAE = 1.4901843428611756, loss = 3.6538300275802613\n","[I 2025-09-11 01:47:53,073] Trial 32 finished with value: 0.9280367612838745 and parameters: {'epochs': 289, 'learning_rate': 0.0951821845039471, 'drop_rate_capas_internas': 0.3322347262002806, 'drop_rate_ultima_capa': 0.10063321916435336, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9308172941207886, RMSE = 1.7627757474793615, MAE = 1.4474376440048218, loss = 3.449594783782959\n","[I 2025-09-11 01:51:49,866] Trial 33 finished with value: 0.9308172941207886 and parameters: {'epochs': 296, 'learning_rate': 0.08773869630280254, 'drop_rate_capas_internas': 0.30607933718381564, 'drop_rate_ultima_capa': 0.08188838321479934, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.8976390600204468, RMSE = 2.167232338736958, MAE = 1.7300863027572633, loss = 5.1250084161758425\n","[I 2025-09-11 01:55:20,438] Trial 34 finished with value: 0.8976390600204468 and parameters: {'epochs': 279, 'learning_rate': 0.09252706876813112, 'drop_rate_capas_internas': 0.3848745565276178, 'drop_rate_ultima_capa': 0.12250113707778937, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 2}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.895923626422882, RMSE = 2.2978711142241286, MAE = 1.851327109336853, loss = 5.456559944152832\n","[I 2025-09-11 01:59:26,329] Trial 35 finished with value: 0.895923626422882 and parameters: {'epochs': 290, 'learning_rate': 0.09935185015385413, 'drop_rate_capas_internas': 0.2909064664577892, 'drop_rate_ultima_capa': 0.09454313543234462, 'usar_dropout_ultima': False, 'batch_size': 8, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.895811665058136, RMSE = 2.271319723726621, MAE = 1.8551203250885009, loss = 5.3392997741699215\n","[I 2025-09-11 02:03:02,304] Trial 36 finished with value: 0.895811665058136 and parameters: {'epochs': 300, 'learning_rate': 0.08428500225313941, 'drop_rate_capas_internas': 0.37075128022799736, 'drop_rate_ultima_capa': 0.10534050820610176, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 2}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9202223539352417, RMSE = 1.91032179906481, MAE = 1.5043908596038817, loss = 3.988895297050476\n","[I 2025-09-11 02:06:32,007] Trial 37 finished with value: 0.9202223539352417 and parameters: {'epochs': 270, 'learning_rate': 0.06464640146473033, 'drop_rate_capas_internas': 0.2407936425539299, 'drop_rate_ultima_capa': 0.13378789942139285, 'usar_dropout_ultima': True, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.8983311891555786, RMSE = 2.224657379555531, MAE = 1.8532730340957642, loss = 5.172548580169678\n","[I 2025-09-11 02:09:09,640] Trial 38 finished with value: 0.8983311891555786 and parameters: {'epochs': 199, 'learning_rate': 0.09040148487929692, 'drop_rate_capas_internas': 0.37519066508823, 'drop_rate_ultima_capa': 0.07022535767880461, 'usar_dropout_ultima': False, 'batch_size': 16, 'n_layers': 2}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.8780848503112793, RMSE = 2.4766668164573162, MAE = 1.9901826620101928, loss = 6.49189829826355\n","[I 2025-09-11 02:11:54,838] Trial 39 finished with value: 0.8780848503112793 and parameters: {'epochs': 183, 'learning_rate': 0.05021406081453407, 'drop_rate_capas_internas': 0.20109171507546258, 'drop_rate_ultima_capa': 0.060308939903686166, 'usar_dropout_ultima': True, 'batch_size': 8, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9222135424613953, RMSE = 1.9287818291574148, MAE = 1.6026447772979737, loss = 3.986939525604248\n","[I 2025-09-11 02:15:35,619] Trial 40 finished with value: 0.9222135424613953 and parameters: {'epochs': 284, 'learning_rate': 0.08638071670797724, 'drop_rate_capas_internas': 0.3490018433719104, 'drop_rate_ultima_capa': 0.14973844154352717, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9258036971092224, RMSE = 1.8881160861040396, MAE = 1.4234789848327636, loss = 3.8324825286865236\n","[I 2025-09-11 02:18:43,402] Trial 41 finished with value: 0.9258036971092224 and parameters: {'epochs': 250, 'learning_rate': 0.07322995883132184, 'drop_rate_capas_internas': 0.3086915131746852, 'drop_rate_ultima_capa': 0.11183302749387146, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9356464266777038, RMSE = 1.8007582289056803, MAE = 1.4159457802772522, loss = 3.470507764816284\n","[I 2025-09-11 02:21:56,134] Trial 42 finished with value: 0.9356464266777038 and parameters: {'epochs': 255, 'learning_rate': 0.07939392729595413, 'drop_rate_capas_internas': 0.30057999295143534, 'drop_rate_ultima_capa': 0.1167092241246801, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9359863996505737, RMSE = 1.7650681964762138, MAE = 1.4208675384521485, loss = 3.3330347895622254\n","[I 2025-09-11 02:24:59,966] Trial 43 finished with value: 0.9359863996505737 and parameters: {'epochs': 245, 'learning_rate': 0.09637464318155109, 'drop_rate_capas_internas': 0.27764158782475584, 'drop_rate_ultima_capa': 0.10804338563539717, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9267205476760865, RMSE = 1.8459971201856142, MAE = 1.517612671852112, loss = 3.698527479171753\n","[I 2025-09-11 02:28:15,085] Trial 44 finished with value: 0.9267205476760865 and parameters: {'epochs': 267, 'learning_rate': 0.07167921872503814, 'drop_rate_capas_internas': 0.2893987842625652, 'drop_rate_ultima_capa': 0.08726757805209831, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.8639750838279724, RMSE = 2.621568823468251, MAE = 2.0124513864517213, loss = 7.1404688358306885\n","[I 2025-09-11 02:31:28,705] Trial 45 finished with value: 0.8639750838279724 and parameters: {'epochs': 274, 'learning_rate': 0.07937141388197949, 'drop_rate_capas_internas': 0.26532373475920173, 'drop_rate_ultima_capa': 0.12274564432031404, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 2}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9296682834625244, RMSE = 1.825541448290398, MAE = 1.4316613912582397, loss = 3.5616690635681154\n","[I 2025-09-11 02:35:16,100] Trial 46 finished with value: 0.9296682834625244 and parameters: {'epochs': 294, 'learning_rate': 0.09417736850584035, 'drop_rate_capas_internas': 0.3281586655611637, 'drop_rate_ultima_capa': 0.09561412352720308, 'usar_dropout_ultima': False, 'batch_size': 16, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.920185101032257, RMSE = 1.9785947272444955, MAE = 1.596987247467041, loss = 4.102913641929627\n","[I 2025-09-11 02:38:48,668] Trial 47 finished with value: 0.920185101032257 and parameters: {'epochs': 285, 'learning_rate': 0.04053902451427564, 'drop_rate_capas_internas': 0.2969458710311451, 'drop_rate_ultima_capa': 0.18554314664990604, 'usar_dropout_ultima': True, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.9295081615447998, RMSE = 1.8287858587038024, MAE = 1.5048672318458558, loss = 3.711938214302063\n","[I 2025-09-11 02:42:08,662] Trial 48 finished with value: 0.9295081615447998 and parameters: {'epochs': 256, 'learning_rate': 0.058296076627034565, 'drop_rate_capas_internas': 0.3201269148475628, 'drop_rate_ultima_capa': 0.13336207939201783, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 3}. Best is trial 14 with value: 0.9430076599121093.\n","                            OOF --> R2 = 0.8756193161010742, RMSE = 2.4826909092484826, MAE = 2.020509052276611, loss = 6.422689390182495\n","[I 2025-09-11 02:45:19,131] Trial 49 finished with value: 0.8756193161010742 and parameters: {'epochs': 241, 'learning_rate': 0.04708687602409539, 'drop_rate_capas_internas': 0.2311444022606346, 'drop_rate_ultima_capa': 0.07658540957458607, 'usar_dropout_ultima': False, 'batch_size': 32, 'n_layers': 2}. Best is trial 14 with value: 0.9430076599121093.\n","\n","==================================================\n","RESULTADOS\n","==================================================\n","Mejor trial: 14\n","Mejor R2: 0.94\n","Mejores hiperparámetros:\n","  epochs: 258\n","  learning_rate: 0.09952112028958188\n","  drop_rate_capas_internas: 0.2876260334982269\n","  drop_rate_ultima_capa: 0.10175808128205406\n","  usar_dropout_ultima: False\n","  batch_size: 32\n","  n_layers: 3\n","CPU times: user 2h 18min 59s, sys: 4min 9s, total: 2h 23min 9s\n","Wall time: 2h 46min 29s\n"]}]},{"cell_type":"code","execution_count":52,"metadata":{"id":"IeK585Hn0OF9","executionInfo":{"status":"ok","timestamp":1757558729168,"user_tz":180,"elapsed":50,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"outputs":[],"source":["def entrenar_modelo_con_epochs_fijos(X_train_norm, y_train, params):\n","    '''\n","    Entrena el modelo con parámetros especificados.\n","    Params:\n","    - X_train_norm: datos de entrenamiento normalizados (NumPy array)\n","    - y_train: etiquetas de entrenamiento (Series o NumPy array)\n","    - params: diccionario con parámetros\n","\n","    Returns:\n","    - Modelo entrenado\n","    '''\n","\n","    # setear semillas para reproducibilidad\n","    random.seed(random_seed)\n","    np.random.seed(random_seed)\n","    tf_random.set_seed(random_seed)\n","\n","    # Crear modelo con arquitectura dinámica para params\n","    modelo = models.Sequential()\n","    # Input layer should match the shape of the normalized data\n","    modelo.add(layers.Input(shape=(X_train_norm.shape[1],)))\n","\n","    # Capas ocultas según n_layers (2 o 3)\n","    for i in range(params['n_layers']):\n","        modelo.add(layers.Dense(64, use_bias=False))\n","        modelo.add(layers.BatchNormalization())\n","        if i < params['n_layers'] - 1:\n","            modelo.add(layers.Activation(mejor_act_fun)) # activación capas ocultas, menos la última\n","            modelo.add(layers.Dropout(params['drop_rate_capas_internas'])) # Dropout capas ocultas, menos la última\n","    modelo.add(layers.Activation('relu')) # activación última capa interna\n","    if params['usar_dropout_ultima']: # dropout última capa interna\n","        modelo.add(layers.Dropout(params['drop_rate_ultima_capa']))\n","\n","    # Capa de salida\n","    modelo.add(layers.Dense(1))\n","\n","    optimizador = mejor_optimizador(learning_rate=params['learning_rate'])\n","    modelo.compile(\n","        optimizer=optimizador,\n","        loss='mse',\n","        metrics=['r2_score', 'mse', 'mae']\n","    )\n","\n","    modelo.summary() # ver el summary\n","\n","    history = modelo.fit(\n","        X_train_norm, y_train.values, # Use .values for y_train\n","        epochs=params['epochs'],\n","        batch_size=params['batch_size'],\n","        verbose=0\n","    )\n","\n","    return modelo"]},{"cell_type":"code","source":["%%time\n","\n","normalizer = layers.Normalization(axis=-1)\n","normalizer.adapt(X_train.values)\n","\n","# Normalizar\n","X_train_norm = normalizer(X_train.values)\n","X_test_norm = normalizer(X_test.values)\n","\n","# entrenar el modelo con los mejores hiperparámetros encontrados\n","modelo_opt = entrenar_modelo_con_epochs_fijos(X_train_norm, y_train, mejores_parametros)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":641},"id":"UwfASow2xRGQ","executionInfo":{"status":"ok","timestamp":1757558764590,"user_tz":180,"elapsed":22553,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"c23ef0a3-4c28-4e48-a980-6eddd22f892f"},"execution_count":53,"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential_276\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential_276\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense_1044 (\u001b[38;5;33mDense\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │           \u001b[38;5;34m384\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization_768         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │           \u001b[38;5;34m256\u001b[0m │\n","│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation_768 (\u001b[38;5;33mActivation\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_568 (\u001b[38;5;33mDropout\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1045 (\u001b[38;5;33mDense\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │         \u001b[38;5;34m4,096\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization_769         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │           \u001b[38;5;34m256\u001b[0m │\n","│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation_769 (\u001b[38;5;33mActivation\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_569 (\u001b[38;5;33mDropout\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1046 (\u001b[38;5;33mDense\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │         \u001b[38;5;34m4,096\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization_770         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │           \u001b[38;5;34m256\u001b[0m │\n","│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation_770 (\u001b[38;5;33mActivation\u001b[0m)     │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1047 (\u001b[38;5;33mDense\u001b[0m)              │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m65\u001b[0m │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ dense_1044 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">384</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization_768         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation_768 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_568 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1045 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │         <span style=\"color: #00af00; text-decoration-color: #00af00\">4,096</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization_769         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation_769 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dropout_569 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1046 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │         <span style=\"color: #00af00; text-decoration-color: #00af00\">4,096</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ batch_normalization_770         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ activation_770 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)     │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense_1047 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)              │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">65</span> │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m9,409\u001b[0m (36.75 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">9,409</span> (36.75 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m9,025\u001b[0m (35.25 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">9,025</span> (35.25 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m384\u001b[0m (1.50 KB)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">384</span> (1.50 KB)\n","</pre>\n"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 19.1 s, sys: 710 ms, total: 19.8 s\n","Wall time: 22.5 s\n"]}]},{"cell_type":"markdown","source":["###**Predicción para el test set**"],"metadata":{"id":"hbTF0hu9Whl4"}},{"cell_type":"code","source":["y_test_pred = modelo_opt.predict(normalizer(X_test.values), verbose=0)\n","r2_test_pred = r2_score(y_test, y_test_pred)\n","rmse_test_pred = root_mean_squared_error(y_test, y_test_pred)\n","mae_test_pred = mean_absolute_error(y_test, y_test_pred)\n","\n","print('-'*100)\n","print('Resultados con validación cruzada e hiperparámetros ajustados')\n","print('-'*100, '\\n')\n","print(f'R2 para el test set = {r2_test_pred:.2%}')\n","print(f'RMSE para el test set = {rmse_test_pred:.2f}')\n","print(f'MAE para el test set = {mae_test_pred:.2f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oRoHbKJ0xrdH","executionInfo":{"status":"ok","timestamp":1757558764776,"user_tz":180,"elapsed":190,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"fea5bdba-a2d9-4c91-bb93-c45679fc8b4f"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["----------------------------------------------------------------------------------------------------\n","Resultados con validación cruzada e hiperparámetros ajustados\n","---------------------------------------------------------------------------------------------------- \n","\n","R2 para el test set = 92.69%\n","RMSE para el test set = 1.62\n","MAE para el test set = 1.28\n"]}]},{"cell_type":"code","execution_count":55,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":407},"id":"6T0xXnZVYgWu","executionInfo":{"status":"ok","timestamp":1757558769538,"user_tz":180,"elapsed":225,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"281b9b00-246a-447c-c397-b0fe4db5f81a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 400x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.figure(figsize=(4, 4))\n","plt.scatter(y_test_pred, y_test)\n","plt.plot([20,45], [20,45], color='red')\n","plt.title('Valor Verdadero vs Predicción en Test Set', weight='bold', fontsize=10)\n","plt.xlabel('Predicción')\n","plt.ylabel('Real')\n","plt.xlim(20,45)\n","plt.ylim(20,45)\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"5sMOz5827sBl"},"source":["###**Analiza el impacto de cada variable en la predicción**"]},{"cell_type":"code","execution_count":56,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"executionInfo":{"elapsed":6719,"status":"ok","timestamp":1757558829748,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"},"user_tz":180},"id":"0qDZQY0S7wfR","outputId":"ab2fefdb-ccae-4cda-f282-9277f961221b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x390 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import tensorflow as tf\n","\n","# se usará a shap\n","\n","explainer = shap.Explainer(modelo_opt, X_train_norm.numpy(), seed=42)\n","shap_values = explainer(X_test_norm.numpy())\n","\n","rng = np.random.default_rng(42)\n","shap.summary_plot(shap_values, X_test_norm.numpy(), rng=rng, feature_names=atributos)"]},{"cell_type":"markdown","source":["Análisis:\n","- PIB per cápita es la variable que tiene más incidencia en la predicción de la tasa de natalidad. Eso ya se sabía con el cálculo del coeficiente de correlación (ver cálculo en la siguiente celda). A **mayor** PIB per cápita, **menor** tasa de natalidad y vicevera.\n","- Siguen en orden de importancia:\n","    - Urbanización: a **mayor** urbanización, **mayor** tasa de natalidad.\n","    - Edad de maternidad: a **mayor** edad, **menor** tasa de natalidad.\n","    - Tasa de empleo femenino: a **mayor** tasa, **mayor** tasa de madernidad.\n","    - Nivel educativo: a **mayor** nivel, **menor** tasa de maternidad.\n","    - Acceso al sistema de salud: a **mayor** nivel, **mayor** tasa de maternidad. Esta variable tiene poca importancia."],"metadata":{"id":"Q1gDC0cAfX70"}},{"cell_type":"code","source":["corrs = df[atributos].corrwith(df.Tasa_Natalidad)\n","corrs.rename('Correlación con Tasa_Natalidad', inplace=True)\n","corrs.sort_values()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":273},"id":"z7kcsOggf6gx","executionInfo":{"status":"ok","timestamp":1757558835156,"user_tz":180,"elapsed":35,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"346440b3-0c05-4e21-f114-92873169f8d9"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PIB_per_capita         -0.866007\n","Edad_Maternidad        -0.300375\n","Nivel_Educativo        -0.124269\n","Acceso_Salud            0.076261\n","Urbanizacion            0.204841\n","Tasa_Empleo_Femenino    0.242314\n","Name: Correlación con Tasa_Natalidad, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Correlación con Tasa_Natalidad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>PIB_per_capita</th>\n","      <td>-0.866007</td>\n","    </tr>\n","    <tr>\n","      <th>Edad_Maternidad</th>\n","      <td>-0.300375</td>\n","    </tr>\n","    <tr>\n","      <th>Nivel_Educativo</th>\n","      <td>-0.124269</td>\n","    </tr>\n","    <tr>\n","      <th>Acceso_Salud</th>\n","      <td>0.076261</td>\n","    </tr>\n","    <tr>\n","      <th>Urbanizacion</th>\n","      <td>0.204841</td>\n","    </tr>\n","    <tr>\n","      <th>Tasa_Empleo_Femenino</th>\n","      <td>0.242314</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","metadata":{"id":"bQXo9sqh72kd"},"source":["###**Realiza predicciones con el modelo y compárala con datos reales**"]},{"cell_type":"code","execution_count":58,"metadata":{"id":"PWlPlMye78ZG","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1757558839787,"user_tz":180,"elapsed":83,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"8fe89ccd-70d2-449d-a978-81491e558d43"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                PIB_per_capita  Acceso_Salud  Nivel_Educativo  \\\n","España                   29350           100             10.4   \n","Japón                    33850           100             12.9   \n","Estados Unidos           76330           100             13.4   \n","Chile                    15355           100             10.5   \n","Nigeria                   2184            62              9.7   \n","\n","                Tasa_Empleo_Femenino  Edad_Maternidad  Urbanizacion  \\\n","España                          58.1             32.6            81   \n","Japón                           74.8             32.6            92   \n","Estados Unidos                  74.7             30.4            83   \n","Chile                           51.2             30.8            88   \n","Nigeria                         50.5             29.5            54   \n","\n","                Tasa_Natalidad  \n","España                     6.9  \n","Japón                      6.3  \n","Estados Unidos            11.0  \n","Chile                     12.2  \n","Nigeria                   37.5  "],"text/html":["\n","  <div id=\"df-54847d9a-474f-4561-becf-8d1eba325d26\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PIB_per_capita</th>\n","      <th>Acceso_Salud</th>\n","      <th>Nivel_Educativo</th>\n","      <th>Tasa_Empleo_Femenino</th>\n","      <th>Edad_Maternidad</th>\n","      <th>Urbanizacion</th>\n","      <th>Tasa_Natalidad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>España</th>\n","      <td>29350</td>\n","      <td>100</td>\n","      <td>10.4</td>\n","      <td>58.1</td>\n","      <td>32.6</td>\n","      <td>81</td>\n","      <td>6.9</td>\n","    </tr>\n","    <tr>\n","      <th>Japón</th>\n","      <td>33850</td>\n","      <td>100</td>\n","      <td>12.9</td>\n","      <td>74.8</td>\n","      <td>32.6</td>\n","      <td>92</td>\n","      <td>6.3</td>\n","    </tr>\n","    <tr>\n","      <th>Estados Unidos</th>\n","      <td>76330</td>\n","      <td>100</td>\n","      <td>13.4</td>\n","      <td>74.7</td>\n","      <td>30.4</td>\n","      <td>83</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>Chile</th>\n","      <td>15355</td>\n","      <td>100</td>\n","      <td>10.5</td>\n","      <td>51.2</td>\n","      <td>30.8</td>\n","      <td>88</td>\n","      <td>12.2</td>\n","    </tr>\n","    <tr>\n","      <th>Nigeria</th>\n","      <td>2184</td>\n","      <td>62</td>\n","      <td>9.7</td>\n","      <td>50.5</td>\n","      <td>29.5</td>\n","      <td>54</td>\n","      <td>37.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54847d9a-474f-4561-becf-8d1eba325d26')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-54847d9a-474f-4561-becf-8d1eba325d26 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-54847d9a-474f-4561-becf-8d1eba325d26');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-90cb176e-e009-4008-9b09-7c4d7b2717a6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-90cb176e-e009-4008-9b09-7c4d7b2717a6')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-90cb176e-e009-4008-9b09-7c4d7b2717a6 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_d1fcbd91-673b-4131-bf18-8a915e4cfdae\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('datos_reales')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d1fcbd91-673b-4131-bf18-8a915e4cfdae button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('datos_reales');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"datos_reales","summary":"{\n  \"name\": \"datos_reales\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"PIB_per_capita\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28017,\n        \"min\": 2184,\n        \"max\": 76330,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          33850,\n          2184,\n          76330\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Acceso_Salud\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 62,\n        \"max\": 100,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          62,\n          100\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Nivel_Educativo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6543881044059767,\n        \"min\": 9.7,\n        \"max\": 13.4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          12.9,\n          9.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tasa_Empleo_Femenino\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.136020764649343,\n        \"min\": 50.5,\n        \"max\": 74.8,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          74.8,\n          50.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Edad_Maternidad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3791301606447457,\n        \"min\": 29.5,\n        \"max\": 32.6,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          30.4,\n          29.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Urbanizacion\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 54,\n        \"max\": 92,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          92,\n          54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tasa_Natalidad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.953262137392263,\n        \"min\": 6.3,\n        \"max\": 37.5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          6.3,\n          37.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":58}],"source":["# estadísticas de países obtenidas con ayuda de la IA\n","\n","espana = {\n","    'PIB_per_capita': 29350,\n","    'Acceso_Salud': 100,\n","    'Nivel_Educativo': 10.4,\n","    'Tasa_Empleo_Femenino': 58.1,\n","    'Edad_Maternidad': 32.6,\n","    'Urbanizacion': 81,\n","    'Tasa_Natalidad': 6.9\n","}\n","\n","japon = {\n","    'PIB_per_capita': 33850,\n","    'Acceso_Salud': 100,\n","    'Nivel_Educativo': 12.9,\n","    'Tasa_Empleo_Femenino': 74.8,\n","    'Edad_Maternidad': 32.6,\n","    'Urbanizacion': 92,\n","    'Tasa_Natalidad': 6.3\n","}\n","usa = {\n","    'PIB_per_capita': 76330,\n","    'Acceso_Salud': 100,\n","    'Nivel_Educativo': 13.4,\n","    'Tasa_Empleo_Femenino': 74.7,\n","    'Edad_Maternidad': 30.4,\n","    'Urbanizacion': 83,\n","    'Tasa_Natalidad': 11\n","}\n","chile = {\n","    'PIB_per_capita': 15355,\n","    'Acceso_Salud': 100,\n","    'Nivel_Educativo': 10.5,\n","    'Tasa_Empleo_Femenino': 51.2,\n","    'Edad_Maternidad': 30.8,\n","    'Urbanizacion': 88,\n","    'Tasa_Natalidad': 12.2\n","}\n","nigeria = {\n","    'PIB_per_capita': 2184,\n","    'Acceso_Salud': 62,\n","    'Nivel_Educativo': 9.7,\n","    'Tasa_Empleo_Femenino': 50.5,\n","    'Edad_Maternidad': 29.5,\n","    'Urbanizacion': 54,\n","    'Tasa_Natalidad': 37.5\n","}\n","\n","paises = [espana, japon, usa, chile, nigeria]\n","\n","datos_reales = pd.DataFrame(paises)\n","datos_reales.index = ['España', 'Japón', 'Estados Unidos', 'Chile', 'Nigeria']\n","datos_reales"]},{"cell_type":"code","source":["datos_reales_pred = modelo_opt.predict(normalizer(datos_reales[atributos].values), verbose=0)\n","\n","plt.figure(figsize=(4, 4))\n","plt.scatter(datos_reales_pred, datos_reales.Tasa_Natalidad)\n","plt.plot([0,45], [0,45], color='red')\n","plt.title('Predicción vs Real en Datos Reales', weight='bold', fontsize=10)\n","plt.xlabel('Predicción')\n","plt.ylabel('Real')\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":407},"id":"22FdUNPi6ukx","executionInfo":{"status":"ok","timestamp":1757558840122,"user_tz":180,"elapsed":299,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"bb974d08-b4d8-4d77-f4fe-056b465b8004"},"execution_count":59,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 400x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["r2_datos_reales = r2_score(datos_reales.Tasa_Natalidad, datos_reales_pred)\n","rmse_datos_reales = root_mean_squared_error(datos_reales.Tasa_Natalidad, datos_reales_pred)\n","mae_datos_reales = mean_absolute_error(datos_reales.Tasa_Natalidad, datos_reales_pred)\n","\n","print('-'*100)\n","print('Resultados con validación cruzada e hiperparámetros ajustados')\n","print('-'*100, '\\n')\n","print(f'R2 para los datos reales = {r2_datos_reales:.2f}')\n","print(f'RMSE para los datos reales = {rmse_datos_reales:.2f}')\n","print(f'MAE para los datos reales = {mae_datos_reales:.2f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kb-StB4toXK8","executionInfo":{"status":"ok","timestamp":1757558841530,"user_tz":180,"elapsed":49,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"57c5c251-fbcb-4c99-9265-01daf1e3bc99"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["----------------------------------------------------------------------------------------------------\n","Resultados con validación cruzada e hiperparámetros ajustados\n","---------------------------------------------------------------------------------------------------- \n","\n","R2 para los datos reales = -3.08\n","RMSE para los datos reales = 23.40\n","MAE para los datos reales = 20.50\n"]}]},{"cell_type":"markdown","source":["La predicción no es buena, lo cual se debe a la naturaleza sintética del dataset de entrenamiento."],"metadata":{"id":"qPfsYTwynEgm"}},{"cell_type":"markdown","metadata":{"id":"1sIqSfLLmuah"},"source":["##**4. Análisis de resultados y reflexión final (1 punto)**\n","\n","- Explica qué variables resultaron más influyentes en la predicción de la natalidad.\n","- Relaciona los resultados con tendencias demográficas globales.\n","- Propón mejoras o ajustes para futuras versiones del modelo."]},{"cell_type":"markdown","metadata":{"id":"QgI-wWic4Kqn"},"source":["- Variables más influyentes: El PIB per cápita fue la variable más influyente en la predicción de la tasa de natalidad, con una fuerte correlación negativa. Otras variables importantes incluyen la urbanización (correlación positiva) y la edad de maternidad (correlación negativa).\n","- Relación con tendencias demográficas: Los hallazgos, como la correlación negativa entre el PIB per cápita y la tasa de natalidad, se alinean con tendencias demográficas globales observadas en países con mayor desarrollo económico, como España en comparación con Nigeria, por ejemplo.\n","- Mejoras propuestas: La principal mejora sería obtener un dataset con datos reales y representativos de diversos países para entrenar el modelo. Además, se podría explorar arquitecturas de red neuronal más simple o el uso de otras técnicas de modelado si el dataset real lo justifica. También se podría incorporar un esquema de disminución de la tasa de aprendizaje, y usar el optimizador SGD para optimizar hiperparámetros con bajas tasas de aprendizaje (alrededor de 0.01) y determinar si supera al optimizador \"Adam\"."]},{"cell_type":"code","execution_count":61,"metadata":{"id":"xq2eruCPdonE","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1757558959940,"user_tz":180,"elapsed":3249,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"2a19aa66-aa46-4239-c583-85ff71586e2a"},"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"0bc0a2ce-1375-4d02-971e-c27d8145e9ce\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"0bc0a2ce-1375-4d02-971e-c27d8145e9ce\")) {                    Plotly.newPlot(                        \"0bc0a2ce-1375-4d02-971e-c27d8145e9ce\",                        [{\"mode\":\"markers\",\"name\":\"Objective Value\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],\"y\":[0.9057074189186096,0.8854733228683471,0.8610102891921997,0.937046492099762,0.8978278398513794,0.9321910977363587,0.9230154156684875,0.8522055864334106,0.9103118300437927,0.8092775344848633,0.9277442336082459,0.9270697355270385,0.9222716093063354,0.9378099322319031,0.9430076599121093,0.9365331649780273,0.9006842970848083,0.9345946907997131,0.9051676034927368,0.9415770769119263,0.9208892464637757,0.9344023108482361,0.9183368444442749,0.9138729453086853,0.9340102076530457,0.9176834702491761,0.9226549506187439,0.9221631407737731,0.9047397136688232,0.9135808348655701,0.9242235541343689,0.9252939343452453,0.9280367612838745,0.9308172941207886,0.8976390600204468,0.895923626422882,0.895811665058136,0.9202223539352417,0.8983311891555786,0.8780848503112793,0.9222135424613953,0.9258036971092224,0.9356464266777038,0.9359863996505737,0.9267205476760865,0.8639750838279724,0.9296682834625244,0.920185101032257,0.9295081615447998,0.8756193161010742],\"type\":\"scatter\"},{\"mode\":\"lines\",\"name\":\"Best Value\",\"x\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],\"y\":[0.9057074189186096,0.9057074189186096,0.9057074189186096,0.937046492099762,0.937046492099762,0.937046492099762,0.937046492099762,0.937046492099762,0.937046492099762,0.937046492099762,0.937046492099762,0.937046492099762,0.937046492099762,0.9378099322319031,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093,0.9430076599121093],\"type\":\"scatter\"},{\"marker\":{\"color\":\"#cccccc\"},\"mode\":\"markers\",\"name\":\"Infeasible Trial\",\"showlegend\":false,\"x\":[],\"y\":[],\"type\":\"scatter\"}],                        {\"title\":{\"text\":\"Optimization History Plot\"},\"xaxis\":{\"title\":{\"text\":\"Trial\"}},\"yaxis\":{\"title\":{\"text\":\"Objective Value\"}},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('0bc0a2ce-1375-4d02-971e-c27d8145e9ce');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"9c04c6ca-ad64-41f4-8944-0f63041cc7cd\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"9c04c6ca-ad64-41f4-8944-0f63041cc7cd\")) {                    Plotly.newPlot(                        \"9c04c6ca-ad64-41f4-8944-0f63041cc7cd\",                        [{\"cliponaxis\":false,\"hovertemplate\":[\"drop_rate_ultima_capa (FloatDistribution): 0.013212235096822556\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"usar_dropout_ultima (CategoricalDistribution): 0.01541459590636044\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"drop_rate_capas_internas (FloatDistribution): 0.02691009497480892\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"batch_size (CategoricalDistribution): 0.04280038099207872\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"learning_rate (FloatDistribution): 0.13550391707131193\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"epochs (IntDistribution): 0.3794427381404434\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"n_layers (CategoricalDistribution): 0.386716037818174\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\"],\"name\":\"Objective Value\",\"orientation\":\"h\",\"text\":[\"0.01\",\"0.02\",\"0.03\",\"0.04\",\"0.14\",\"0.38\",\"0.39\"],\"textposition\":\"outside\",\"x\":[0.013212235096822556,0.01541459590636044,0.02691009497480892,0.04280038099207872,0.13550391707131193,0.3794427381404434,0.386716037818174],\"y\":[\"drop_rate_ultima_capa\",\"usar_dropout_ultima\",\"drop_rate_capas_internas\",\"batch_size\",\"learning_rate\",\"epochs\",\"n_layers\"],\"type\":\"bar\"}],                        {\"title\":{\"text\":\"Hyperparameter Importances\"},\"xaxis\":{\"title\":{\"text\":\"Hyperparameter Importance\"}},\"yaxis\":{\"title\":{\"text\":\"Hyperparameter\"}},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('9c04c6ca-ad64-41f4-8944-0f63041cc7cd');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"f7384b1a-8620-4960-ab64-4ebd0d927850\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"f7384b1a-8620-4960-ab64-4ebd0d927850\")) {                    Plotly.newPlot(                        \"f7384b1a-8620-4960-ab64-4ebd0d927850\",                        [{\"dimensions\":[{\"label\":\"Objective Value\",\"range\":[0.8092775344848633,0.9430076599121093],\"values\":[0.8854733228683471,0.8978278398513794,0.9103118300437927,0.9208892464637757,0.9047397136688232,0.895923626422882,0.8780848503112793,0.9057074189186096,0.8983311891555786,0.9321910977363587,0.9230154156684875,0.9270697355270385,0.9222716093063354,0.9242235541343689,0.9296682834625244,0.8610102891921997,0.8522055864334106,0.8092775344848633,0.8976390600204468,0.895811665058136,0.8639750838279724,0.8756193161010742,0.937046492099762,0.9277442336082459,0.9378099322319031,0.9430076599121093,0.9365331649780273,0.9006842970848083,0.9345946907997131,0.9051676034927368,0.9415770769119263,0.9344023108482361,0.9183368444442749,0.9138729453086853,0.9340102076530457,0.9176834702491761,0.9226549506187439,0.9221631407737731,0.9135808348655701,0.9252939343452453,0.9280367612838745,0.9308172941207886,0.9202223539352417,0.9222135424613953,0.9258036971092224,0.9356464266777038,0.9359863996505737,0.9267205476760865,0.920185101032257,0.9295081615447998]},{\"label\":\"batch_size\",\"range\":[0,2],\"ticktext\":[\"8\",\"16\",\"32\"],\"tickvals\":[0,1,2],\"values\":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]},{\"label\":\"drop_rate_capas_i...\",\"range\":[0.20109171507546258,0.39589008185489677],\"values\":[0.24246782213565524,0.2623422152178822,0.22391884918766036,0.32054750875842825,0.25614670917279125,0.2909064664577892,0.20109171507546258,0.346398788362281,0.37519066508823,0.23919657248382906,0.21491012873595416,0.39589008185489677,0.33797808466993845,0.3605780778675899,0.3281586655611637,0.2912139968434072,0.22317381190502594,0.3272820822527561,0.3848745565276178,0.37075128022799736,0.26532373475920173,0.2311444022606346,0.3616794696232922,0.3939074221575732,0.2887073223025305,0.2876260334982269,0.30419784149276535,0.2722183059751395,0.3000183282944103,0.2721224914096434,0.30983606736732094,0.2918229721905032,0.31336511183089333,0.280197053082636,0.2525601084059903,0.36436056894989066,0.2837590083522553,0.3163760436982683,0.34328782961621473,0.3572976075082246,0.3322347262002806,0.30607933718381564,0.2407936425539299,0.3490018433719104,0.3086915131746852,0.30057999295143534,0.27764158782475584,0.2893987842625652,0.2969458710311451,0.3201269148475628]},{\"label\":\"drop_rate_ultima_...\",\"range\":[0.050736733241399073,0.19803304049007764],\"values\":[0.0772737450810651,0.12801020317667164,0.15698671808344927,0.1443884753413279,0.06483306111894764,0.09454313543234462,0.060308939903686166,0.1397987726295555,0.07022535767880461,0.056784093336580715,0.19803304049007764,0.05148127963217749,0.050736733241399073,0.1409456197852689,0.09561412352720308,0.16777639420895207,0.17946551388133902,0.09715339716144901,0.12250113707778937,0.10534050820610176,0.12274564432031404,0.07658540957458607,0.09569206537600561,0.10202763371099328,0.08419723971919277,0.10175808128205406,0.11250278836721155,0.0756642244802119,0.07944196298649697,0.12740429580267812,0.1148465028845716,0.11335643976945177,0.11168453667552762,0.08785470507513263,0.06891953877752174,0.08729566146316102,0.1041630833263051,0.11851895711772084,0.137893987409346,0.09220916066622821,0.10063321916435336,0.08188838321479934,0.13378789942139285,0.14973844154352717,0.11183302749387146,0.1167092241246801,0.10804338563539717,0.08726757805209831,0.18554314664990604,0.13336207939201783]},{\"label\":\"epochs\",\"range\":[161,300],\"values\":[296,189,283,272,238,290,183,206,199,289,171,250,271,259,294,194,161,166,279,300,274,241,293,249,300,258,253,227,268,231,268,260,239,281,300,215,278,263,212,290,289,296,270,284,250,255,245,267,285,256]},{\"label\":\"learning_rate\",\"range\":[0.04053902451427564,0.09969832716947934],\"values\":[0.08994655844802531,0.07975133706123892,0.06833289550971697,0.08951694383900193,0.06200965245196609,0.09935185015385413,0.05021406081453407,0.09704285838459498,0.09040148487929692,0.045309550123115175,0.08813181884524238,0.045100513968478535,0.054403994988319215,0.09686997897072083,0.09417736850584035,0.0619817105976215,0.06150794371265636,0.041885751141204054,0.09252706876813112,0.08428500225313941,0.07937141388197949,0.04708687602409539,0.09793792198447357,0.0809072828188018,0.052531789499302615,0.09952112028958188,0.07509870148716166,0.05153939984849321,0.06823876866692657,0.05591830571003417,0.08956056700395913,0.09969832716947934,0.09242740405310422,0.08517258770168269,0.0744806073791619,0.09282820134101828,0.09504451516330838,0.08301376275369177,0.07623793745248449,0.09918857860363801,0.0951821845039471,0.08773869630280254,0.06464640146473033,0.08638071670797724,0.07322995883132184,0.07939392729595413,0.09637464318155109,0.07167921872503814,0.04053902451427564,0.058296076627034565]},{\"label\":\"n_layers\",\"range\":[0,1],\"ticktext\":[\"2\",\"3\"],\"tickvals\":[0,1],\"values\":[0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]},{\"label\":\"usar_dropout_ultima\",\"range\":[0,1],\"ticktext\":[\"True\",\"False\"],\"tickvals\":[0,1],\"values\":[1,0,0,1,1,1,0,0,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,0,1]}],\"labelangle\":30,\"labelside\":\"bottom\",\"line\":{\"color\":[0.8854733228683471,0.8978278398513794,0.9103118300437927,0.9208892464637757,0.9047397136688232,0.895923626422882,0.8780848503112793,0.9057074189186096,0.8983311891555786,0.9321910977363587,0.9230154156684875,0.9270697355270385,0.9222716093063354,0.9242235541343689,0.9296682834625244,0.8610102891921997,0.8522055864334106,0.8092775344848633,0.8976390600204468,0.895811665058136,0.8639750838279724,0.8756193161010742,0.937046492099762,0.9277442336082459,0.9378099322319031,0.9430076599121093,0.9365331649780273,0.9006842970848083,0.9345946907997131,0.9051676034927368,0.9415770769119263,0.9344023108482361,0.9183368444442749,0.9138729453086853,0.9340102076530457,0.9176834702491761,0.9226549506187439,0.9221631407737731,0.9135808348655701,0.9252939343452453,0.9280367612838745,0.9308172941207886,0.9202223539352417,0.9222135424613953,0.9258036971092224,0.9356464266777038,0.9359863996505737,0.9267205476760865,0.920185101032257,0.9295081615447998],\"colorbar\":{\"title\":{\"text\":\"Objective Value\"}},\"colorscale\":[[0.0,\"rgb(247,251,255)\"],[0.125,\"rgb(222,235,247)\"],[0.25,\"rgb(198,219,239)\"],[0.375,\"rgb(158,202,225)\"],[0.5,\"rgb(107,174,214)\"],[0.625,\"rgb(66,146,198)\"],[0.75,\"rgb(33,113,181)\"],[0.875,\"rgb(8,81,156)\"],[1.0,\"rgb(8,48,107)\"]],\"reversescale\":false,\"showscale\":true},\"type\":\"parcoords\"}],                        {\"title\":{\"text\":\"Parallel Coordinate Plot\"},\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('f7384b1a-8620-4960-ab64-4ebd0d927850');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","📈 Estadísticas de los trials:\n","         number      value                 datetime_start  \\\n","count  50.00000  50.000000                             50   \n","mean   24.50000   0.913051  2025-09-11 01:19:45.256936960   \n","min     0.00000   0.809278     2025-09-10 23:58:49.524571   \n","25%    12.25000   0.901698  2025-09-11 00:37:52.964005888   \n","50%    24.50000   0.922188  2025-09-11 01:19:24.576285952   \n","75%    36.75000   0.929628  2025-09-11 02:02:08.314267392   \n","max    49.00000   0.943008     2025-09-11 02:42:08.667376   \n","std    14.57738   0.026182                            NaN   \n","\n","                   datetime_complete                   duration  \\\n","count                             50                         50   \n","mean   2025-09-11 01:23:05.044288768  0 days 00:03:19.787352100   \n","min       2025-09-11 00:01:47.211590     0 days 00:02:09.164440   \n","25%    2025-09-11 00:41:33.148914944  0 days 00:03:04.814762250   \n","50%    2025-09-11 01:22:40.507184128  0 days 00:03:24.774713500   \n","75%    2025-09-11 02:05:39.581693696  0 days 00:03:36.506522250   \n","max       2025-09-11 02:45:19.131239     0 days 00:04:05.886645   \n","std                              NaN  0 days 00:00:28.028434458   \n","\n","       params_batch_size  params_drop_rate_capas_internas  \\\n","count          50.000000                        50.000000   \n","mean           26.080000                         0.302086   \n","min             8.000000                         0.201092   \n","25%            16.000000                         0.272146   \n","50%            32.000000                         0.300299   \n","75%            32.000000                         0.336542   \n","max            32.000000                         0.395890   \n","std             9.397872                         0.048781   \n","\n","       params_drop_rate_ultima_capa  params_epochs  params_learning_rate  \\\n","count                     50.000000      50.000000             50.000000   \n","mean                       0.108515     253.740000              0.076840   \n","min                        0.050737     161.000000              0.040539   \n","25%                        0.084965     238.250000              0.061989   \n","50%                        0.104752     261.500000              0.080329   \n","75%                        0.127859     283.750000              0.092502   \n","max                        0.198033     300.000000              0.099698   \n","std                        0.034275      38.191147              0.018227   \n","\n","       params_n_layers  \n","count        50.000000  \n","mean          2.760000  \n","min           2.000000  \n","25%           3.000000  \n","50%           3.000000  \n","75%           3.000000  \n","max           3.000000  \n","std           0.431419  \n"]}],"source":["def analizar_resultados_optuna(study):\n","    \"\"\"Analiza y visualiza los resultados de Optuna\"\"\"\n","\n","    # Visualizaciones\n","    fig = optuna.visualization.plot_optimization_history(study)\n","    fig.show()\n","\n","    fig = optuna.visualization.plot_param_importances(study)\n","    fig.show()\n","\n","    fig = optuna.visualization.plot_parallel_coordinate(study)\n","    fig.show()\n","\n","    # Análisis estadístico\n","    trials_df = study.trials_dataframe()\n","    print(\"\\n📈 Estadísticas de los trials:\")\n","    print(trials_df.describe())\n","\n","    return trials_df\n","\n","# Analizar resultados\n","trials_df = analizar_resultados_optuna(opt_study_cv)"]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMMXC0yL/BEu5k3byMn/qwa"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"d86a5f67dda54beba7929bf6f4f1ca9d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4d22e6fabdb142f89843714f87efccee","IPY_MODEL_edc61275137141d48bf092e4d0ca8cbe","IPY_MODEL_1c70f73e85dc4f4d8224ab24e2a984c3"],"layout":"IPY_MODEL_0abc560a37534c3facc4a8c4c07ee9f1"}},"4d22e6fabdb142f89843714f87efccee":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c02ac83d9d40463a8f71728e6dcc067e","placeholder":"​","style":"IPY_MODEL_2fbc43d3ec484cac8b87bec225b1c9c0","value":"Best trial: 14. Best value: 0.943008: 100%"}},"edc61275137141d48bf092e4d0ca8cbe":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_a0914598b2de4b84ab9d2347200d9f83","max":50,"min":0,"orientation":"horizontal","style":"IPY_MODEL_3344602c9ebd4045b2c09e18233d6e46","value":50}},"1c70f73e85dc4f4d8224ab24e2a984c3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ae9f7df28f99422893bf3fd93628fa66","placeholder":"​","style":"IPY_MODEL_d96889c532a642afb90b1b64a24ec567","value":" 50/50 [2:46:29&lt;00:00, 200.09s/it]"}},"0abc560a37534c3facc4a8c4c07ee9f1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c02ac83d9d40463a8f71728e6dcc067e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2fbc43d3ec484cac8b87bec225b1c9c0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a0914598b2de4b84ab9d2347200d9f83":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3344602c9ebd4045b2c09e18233d6e46":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ae9f7df28f99422893bf3fd93628fa66":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d96889c532a642afb90b1b64a24ec567":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}