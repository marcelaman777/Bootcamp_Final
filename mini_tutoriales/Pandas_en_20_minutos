{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP2x25D89FKReHCvh65wRFz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#PANDAS EN 20 MINUTOS"],"metadata":{"id":"kJ-CVDSuX03p"}},{"cell_type":"markdown","source":["#1. La librería Pandas"],"metadata":{"id":"RKtuSxhtX-vr"}},{"cell_type":"markdown","source":["- ¿Qué es Pandas?\n","    - Librería de Python creada en 2008 por Wes McKinney.\n","    - Construida sobre NumPy, especializada en manejo de datos tabulares.\n","\n","- Principales características:\n","\n","    - Estructuras de datos optimizadas: Series (1D) y DataFrames (2D).\n","\n","    - Lectura y escritura de datos: CSV, Excel, JSON, SQL, Parquet.\n","\n","    - Compatible con NumPy, Matplotlib, Seaborn, Scikit-learn.\n","\n","    - Operaciones vectorizadas rápidas.\n","\n","- Usos comunes:\n","\n","    - Limpieza y transformación de datos.\n","\n","    - Exploración y análisis exploratorio (EDA).\n","\n","    - Agregación y agrupación (groupby, pivot_table).\n","\n","    - Manejo de series temporales."],"metadata":{"id":"eVzJvMeuY9eY"}},{"cell_type":"code","execution_count":15,"metadata":{"id":"1Tz59QGrXu00","executionInfo":{"status":"ok","timestamp":1757607631947,"user_tz":180,"elapsed":22,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"markdown","source":["##1.2. El tipo de dato Serie"],"metadata":{"id":"REGB8JicZ2bi"}},{"cell_type":"markdown","source":["- Características:\n","\n","    - Estructura unidimensional.\n","\n","    - Cada valor está asociado a un índice (numérico o string).\n","\n","    - Basada en NumPy → eficiente y flexible.\n","\n","    - Convierte fácilmente desde listas, diccionarios y arrays.\n","\n","- Creación de una Serie:"],"metadata":{"id":"MZ0IOu2MZxQZ"}},{"cell_type":"code","source":["# Desde lista\n","s1 = pd.Series([10, 20, 30])\n","print(f's1 = {s1}')\n","\n","# Con índices personalizados\n","s2 = pd.Series([10, 20, 30], index=['a','b','c'])\n","print(f's2 = {s2}')\n","\n","# Desde diccionario\n","s3 = pd.Series({'a': 1, 'b': 2, 'c': 3})\n","print(f's3 = {s3}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cMgFbZFBaCAZ","executionInfo":{"status":"ok","timestamp":1757607632945,"user_tz":180,"elapsed":10,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"96783729-0c76-4eaf-8671-97f90029b8e8"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["s1 = 0    10\n","1    20\n","2    30\n","dtype: int64\n","s2 = a    10\n","b    20\n","c    30\n","dtype: int64\n","s3 = a    1\n","b    2\n","c    3\n","dtype: int64\n"]}]},{"cell_type":"markdown","source":["- Obtención de datos:"],"metadata":{"id":"Ib6COD7qaD3Y"}},{"cell_type":"code","source":["print(s2['b'])      # acceso por índice -> 20\n","print(s2[0:2])      # slicing\n","print(s2[s2 > 15])  # filtrado condicional"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4mo17FjfaLBN","executionInfo":{"status":"ok","timestamp":1757607633845,"user_tz":180,"elapsed":54,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"fd9163d2-7e00-4c41-91a7-342299f898c7"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["20\n","a    10\n","b    20\n","dtype: int64\n","b    20\n","c    30\n","dtype: int64\n"]}]},{"cell_type":"markdown","source":["- Operaciones:"],"metadata":{"id":"GV1189UGaD0d"}},{"cell_type":"code","source":["print(s1 + 5)       # suma escalar\n","print(s1 * 2)       # multiplicación\n","print(s1.mean())    # promedio"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UVBvdB1uamUh","executionInfo":{"status":"ok","timestamp":1757607634459,"user_tz":180,"elapsed":8,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"4f0dba0d-a6cd-44c3-ee3b-53412aaab629"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["0    15\n","1    25\n","2    35\n","dtype: int64\n","0    20\n","1    40\n","2    60\n","dtype: int64\n","20.0\n"]}]},{"cell_type":"markdown","source":["##1.3. El tipo de dato DataFrame"],"metadata":{"id":"Aatr4x0MahEF"}},{"cell_type":"markdown","source":["- Características:\n","\n","    - Estructura bidimensional (filas y columnas).\n","\n","    - Cada columna es una Serie.\n","\n","    - Similar a tabla de SQL o Excel.\n","\n","    - Soporta distintos tipos de datos por columna.\n","\n","- Creación de un DataFrame:"],"metadata":{"id":"6qP9Z8EXaDxW"}},{"cell_type":"code","source":["# Desde diccionario\n","data = {'Nombre': ['Ana','Luis','Marta'],\n","        'Edad': [23, 34, 29],\n","        'Ciudad': ['Madrid','Sevilla','Valencia']}\n","df = pd.DataFrame(data)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":144},"id":"p4jq_Sgga6Su","executionInfo":{"status":"ok","timestamp":1757607636150,"user_tz":180,"elapsed":48,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"24d03c52-a816-4a81-ecc4-b4704ce44c48"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Nombre  Edad    Ciudad\n","0    Ana    23    Madrid\n","1   Luis    34   Sevilla\n","2  Marta    29  Valencia"],"text/html":["\n","  <div id=\"df-425d2edf-0b88-469b-a6a7-d68fa53f4c3a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nombre</th>\n","      <th>Edad</th>\n","      <th>Ciudad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Ana</td>\n","      <td>23</td>\n","      <td>Madrid</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Luis</td>\n","      <td>34</td>\n","      <td>Sevilla</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Marta</td>\n","      <td>29</td>\n","      <td>Valencia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-425d2edf-0b88-469b-a6a7-d68fa53f4c3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-425d2edf-0b88-469b-a6a7-d68fa53f4c3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-425d2edf-0b88-469b-a6a7-d68fa53f4c3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-51d04844-dde7-426c-8f22-da5ff966111d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-51d04844-dde7-426c-8f22-da5ff966111d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-51d04844-dde7-426c-8f22-da5ff966111d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_fb4451d5-ee52-4986-81eb-48cfd63cbc1b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_fb4451d5-ee52-4986-81eb-48cfd63cbc1b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Ana\",\n          \"Luis\",\n          \"Marta\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 23,\n        \"max\": 34,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          23,\n          34,\n          29\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ciudad\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Madrid\",\n          \"Sevilla\",\n          \"Valencia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["##1.4. Selección de datos en DataFrames"],"metadata":{"id":"3OJYlc7RaDaO"}},{"cell_type":"markdown","source":["- Columnas:"],"metadata":{"id":"z2zawJ_bbC5S"}},{"cell_type":"code","source":["print(df['Nombre'])\n","print(df[['Nombre','Edad']])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9Y_KLLbZbFxO","executionInfo":{"status":"ok","timestamp":1757607637037,"user_tz":180,"elapsed":183,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"9aa6403e-b45d-4eff-d5b8-595785841793"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["0      Ana\n","1     Luis\n","2    Marta\n","Name: Nombre, dtype: object\n","  Nombre  Edad\n","0    Ana    23\n","1   Luis    34\n","2  Marta    29\n"]}]},{"cell_type":"markdown","source":["- Filas:"],"metadata":{"id":"M1slODCrbKFR"}},{"cell_type":"code","source":["print(df.loc[0])        # por etiqueta\n","print(df.iloc[0])       # por índice\n","print(df.loc[0:1])      # varias filas"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dt_X4ag7bK-l","executionInfo":{"status":"ok","timestamp":1757607640977,"user_tz":180,"elapsed":43,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"692da347-778e-498d-89c4-e48b9ecc48d0"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Nombre       Ana\n","Edad          23\n","Ciudad    Madrid\n","Name: 0, dtype: object\n","Nombre       Ana\n","Edad          23\n","Ciudad    Madrid\n","Name: 0, dtype: object\n","  Nombre  Edad   Ciudad\n","0    Ana    23   Madrid\n","1   Luis    34  Sevilla\n"]}]},{"cell_type":"markdown","source":["- Elementos específicos:"],"metadata":{"id":"TEbKoD2rbORT"}},{"cell_type":"code","source":["df.loc[0,'Edad']   # 23"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6qTeHmJabUtw","executionInfo":{"status":"ok","timestamp":1757607641641,"user_tz":180,"elapsed":33,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"4a839f3c-e468-4bf1-8444-37fd45f4ba32"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["np.int64(23)"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["- Selección condicional:"],"metadata":{"id":"Gapj96xnbOOg"}},{"cell_type":"code","source":["print(df[df['Edad'] > 25])\n","print(df[(df['Edad'] > 22) & (df['Ciudad']=='Madrid')])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SnM0wcelbY87","executionInfo":{"status":"ok","timestamp":1757607652598,"user_tz":180,"elapsed":50,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"0d48bb64-decc-4d2c-cf0d-879549cc7355"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["  Nombre  Edad    Ciudad\n","1   Luis    34   Sevilla\n","2  Marta    29  Valencia\n","  Nombre  Edad  Ciudad\n","0    Ana    23  Madrid\n"]}]},{"cell_type":"markdown","source":["##1.5. Métodos de exploración"],"metadata":{"id":"ccbX1trLbOLt"}},{"cell_type":"code","source":["df.head()       # primeras filas\n","df.tail()       # últimas filas\n","df.info()       # resumen estructura\n","df.describe()   # estadísticas descriptivas"],"metadata":{"id":"q-cgW0O-biE-","colab":{"base_uri":"https://localhost:8080/","height":474},"executionInfo":{"status":"ok","timestamp":1757607654125,"user_tz":180,"elapsed":58,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"8756d62a-e17d-439d-986c-7d00899fcf14"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3 entries, 0 to 2\n","Data columns (total 3 columns):\n"," #   Column  Non-Null Count  Dtype \n","---  ------  --------------  ----- \n"," 0   Nombre  3 non-null      object\n"," 1   Edad    3 non-null      int64 \n"," 2   Ciudad  3 non-null      object\n","dtypes: int64(1), object(2)\n","memory usage: 204.0+ bytes\n"]},{"output_type":"execute_result","data":{"text/plain":["            Edad\n","count   3.000000\n","mean   28.666667\n","std     5.507571\n","min    23.000000\n","25%    26.000000\n","50%    29.000000\n","75%    31.500000\n","max    34.000000"],"text/html":["\n","  <div id=\"df-ae0d8874-f08f-4380-a3f2-47f62e746101\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Edad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>28.666667</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>5.507571</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>23.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>26.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>29.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>31.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>34.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae0d8874-f08f-4380-a3f2-47f62e746101')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ae0d8874-f08f-4380-a3f2-47f62e746101 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ae0d8874-f08f-4380-a3f2-47f62e746101');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-124e547c-dbed-44ea-b362-7705530dd145\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-124e547c-dbed-44ea-b362-7705530dd145')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-124e547c-dbed-44ea-b362-7705530dd145 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.801716654826423,\n        \"min\": 3.0,\n        \"max\": 34.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          28.666666666666668,\n          29.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["##1.6. Métodos de sumarización"],"metadata":{"id":"a9JEYtwIbOJE"}},{"cell_type":"code","source":["df['Edad'].min()\n","df['Edad'].max()\n","df['Edad'].mean()\n","df['Edad'].median()\n","df['Edad'].sum()\n","df['Edad'].count()"],"metadata":{"id":"CV8DFFXMbq3S","executionInfo":{"status":"ok","timestamp":1757607726055,"user_tz":180,"elapsed":7,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":26,"outputs":[]},{"cell_type":"markdown","source":["##1.7. Métodos para datos categóricos"],"metadata":{"id":"7x8A1cP5bnbY"}},{"cell_type":"code","source":["df['Ciudad'].unique()       # valores únicos\n","df['Ciudad'].nunique()      # nº de valores únicos\n","df['Ciudad'].value_counts() # frecuencia"],"metadata":{"id":"R_n7yPnFb0Ws"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#2. Obtención de datos desde archivos"],"metadata":{"id":"5c1Si0oobnuM"}},{"cell_type":"markdown","source":["##2.1. Archivos CSV"],"metadata":{"id":"LbyYusPgbniB"}},{"cell_type":"markdown","source":["- ¿Qué es un CSV?\n","\n","    - Texto plano, formato tabular.\n","\n","    - Separador más común: , (pero puede ser ;, |).\n","\n","    - Compatible con hojas de cálculo y bases de datos.\n","\n","    - No admite estilos ni fórmulas.\n","\n","- Leer CSV con Pandas → pd.read_csv()\n","    - Parámetros comunes:\n","\n","        - sep=\";\" → define delimitador.\n","\n","        - header=0 → fila de encabezados.\n","\n","        - index_col=0 → columna usada como índice.\n","\n","        - na_values=[\"NA\", \"NULL\"] → valores tratados como nulos."],"metadata":{"id":"CwSjnLc0b2qK"}},{"cell_type":"code","source":["# Lectura básica\n","df = pd.read_csv(\"archivo.csv\")\n","\n","# Con parámetros\n","df = pd.read_csv(\"archivo.csv\", sep=\";\", index_col=0, na_values=[\"NA\"])"],"metadata":{"id":"CqGm9pcZhX06"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- Escribir CSV con Pandas → to_csv()\n","    - Opciones comunes:\n","\n","        - index=False → no guardar índice.\n","\n","        - sep=\";\" → delimitador alternativo.\n","\n","        - na_rep=\"Desconocido\" → cómo guardar valores nulos."],"metadata":{"id":"5NmtoG0Pb2nJ"}},{"cell_type":"code","source":["# Escritura básica\n","df.to_csv(\"salida.csv\")\n","\n","# Con parámetros\n","df.to_csv(\"salida.csv\", index=False, sep=\";\", na_rep=\"Sin datos\")"],"metadata":{"id":"1O8IFydFhm4Y"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##2.2. Archivos Excel"],"metadata":{"id":"EMslur4vhpP4"}},{"cell_type":"markdown","source":["- Librería XLRD / openpyxl\n","\n","    - Antes: xlrd se usaba para .xls.\n","\n","    - Ahora: openpyxl recomendado para .xlsx.\n","\n","    - Instalación: pip install openpyxl.\n","\n","- Leer Excel con Pandas → pd.read_excel()\n","    - Parámetros comunes:\n","\n","        - sheet_name=\"Hoja1\" → seleccionar hoja.\n","\n","        - index_col=0 → columna índice.\n","\n","        - usecols=[\"Nombre\",\"Edad\"] → seleccionar columnas específicas."],"metadata":{"id":"YRJW_kSohpE0"}},{"cell_type":"code","source":["# Lectura básica\n","df = pd.read_excel(\"archivo.xlsx\")\n","\n","# Con parámetros\n","df = pd.read_excel(\"archivo.xlsx\", sheet_name=\"Hoja1\", usecols=[\"Nombre\",\"Edad\"])"],"metadata":{"id":"xBtpr_uhiW9C"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["- Escribir Excel con Pandas → to_excel()\n","    - Opciones comunes:\n","\n","        - sheet_name=\"Resultados\" → nombre de hoja.\n","\n","        - na_rep=\"Sin datos\" → representar valores nulos."],"metadata":{"id":"j9dNH4eniZ2Q"}},{"cell_type":"code","source":["# Escritura básica\n","df.to_excel(\"resultado.xlsx\")\n","\n","# Con parámetros\n","df.to_excel(\"resultado.xlsx\", sheet_name=\"Resultados\", na_rep=\"Sin datos\")"],"metadata":{"id":"v19At5M-iiNo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##2.3. Leer tablas web con Pandas (opcional)"],"metadata":{"id":"vLyO_oAriltU"}},{"cell_type":"markdown","source":["- Función read_html()\n","\n","    - Busca automáticamente todas las tablas de una página web.\n","\n","    - Devuelve una lista de DataFrames."],"metadata":{"id":"73QIhI1Disrf"}},{"cell_type":"code","source":["import requests\n","from io import StringIO\n","import pandas as pd\n","\n","url = \"https://en.wikipedia.org/wiki/List_of_countries_by_population\"\n","\n","# Add a User-Agent header to mimic a browser\n","headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'}\n","\n","try:\n","    response = requests.get(url, headers=headers)\n","    response.raise_for_status()  # Raise an HTTPError for bad responses (4xx or 5xx)\n","\n","    # Wrap the response text in StringIO to resolve the FutureWarning\n","    html_string = StringIO(response.text)\n","    tablas = pd.read_html(html_string, encoding='utf-8')\n","\n","    # Mostrar número de tablas\n","    print(len(tablas))\n","\n","    # Seleccionar la primera tabla\n","    df = tablas[0]\n","    print(df.head())\n","\n","except requests.exceptions.RequestException as e:\n","    print(f\"Error accessing the URL: {e}\")\n","except ValueError as e:\n","    print(f\"Error parsing HTML: {e}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qj_SBmgcizCz","executionInfo":{"status":"ok","timestamp":1757607743854,"user_tz":180,"elapsed":614,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"888c892b-1948-40ae-e4b2-573046ee0d74"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n","        Location  Population % of world         Date  \\\n","0          World  8232000000       100%  13 Jun 2025   \n","1          India  1417492000      17.3%   1 Jul 2025   \n","2          China  1408280000      17.2%  31 Dec 2024   \n","3  United States   340110988       4.1%   1 Jul 2024   \n","4      Indonesia   284438782       3.5%  30 Jun 2025   \n","\n","  Source (official or from the United Nations) Notes  \n","0                          UN projection[1][3]   NaN  \n","1                       Official projection[4]   [b]  \n","2                         Official estimate[5]   [c]  \n","3                         Official estimate[6]   [d]  \n","4                National annual projection[7]   NaN  \n"]}]},{"cell_type":"markdown","source":["#3. Manejo de Valores Perdidos y Outliers"],"metadata":{"id":"P-X1BkbJSPJT"}},{"cell_type":"markdown","source":["##3.1. Valores perdidos (Missing Values)"],"metadata":{"id":"5NmNeDLtS9Jg"}},{"cell_type":"markdown","source":["- Definición: datos ausentes, representados como NaN.\n","\n","- Causas: errores de medición, encuestas incompletas, conversión de formatos, eliminación accidental.\n","\n","- Identificación:\n","\n","    - df.isnull() → True en valores nulos.\n","\n","    - df.notnull() → True en valores no nulos.\n"],"metadata":{"id":"J94M6XSFSiT_"}},{"cell_type":"code","source":["df = pd.DataFrame({'A': [1, 2, None, 4],\n","                   'B': [5, None, 7, 8],\n","                   'C': [9, 10, 11, 12]})\n","print(df)\n","\n","print(f'Número de nulos por columna:\\n{df.isna().sum()}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MvmXKnoWiqTS","executionInfo":{"status":"ok","timestamp":1757607747180,"user_tz":180,"elapsed":40,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"c436977e-0b39-445a-fd79-637dd57f9c45"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["     A    B   C\n","0  1.0  5.0   9\n","1  2.0  NaN  10\n","2  NaN  7.0  11\n","3  4.0  8.0  12\n","Número de nulos por columna:\n","A    1\n","B    1\n","C    0\n","dtype: int64\n"]}]},{"cell_type":"markdown","source":["##3.2. Eliminación de valores perdidos"],"metadata":{"id":"6CJPVQZKUK6L"}},{"cell_type":"markdown","source":["- df.dropna(axis=0, how=\"any\") → elimina filas con NaN.\n","- df.dropna(axis=1, how=\"all\") → elimina columnas solo si todos son NaN.\n"],"metadata":{"id":"ieRx-LoeT4vh"}},{"cell_type":"code","source":["df = pd.DataFrame({'A': [1, 2, None, 4],\n","                   'B': [5, None, 7, 8],\n","                   'C': [9, 10, 11, 12]})\n","\n","print('Dataframe con nulos:\\n')\n","print(df)\n","df_sin_nulos = df.dropna() # elimina filas con nulos\n","print('\\nDataframe sin nulos:\\n')\n","print(df_sin_nulos)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JELEZaEKUYss","executionInfo":{"status":"ok","timestamp":1757607748102,"user_tz":180,"elapsed":69,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"b34bb619-e8f5-4114-f2f1-096e630f4a0e"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataframe con nulos:\n","\n","     A    B   C\n","0  1.0  5.0   9\n","1  2.0  NaN  10\n","2  NaN  7.0  11\n","3  4.0  8.0  12\n","\n","Dataframe sin nulos:\n","\n","     A    B   C\n","0  1.0  5.0   9\n","3  4.0  8.0  12\n"]}]},{"cell_type":"markdown","source":["##3.3. Imputación de valores perdidos"],"metadata":{"id":"-oARUA0PURLV"}},{"cell_type":"markdown","source":["- df.fillna(valor) → reemplaza NaN con un valor fijo.\n","\n","- Para números: media, mediana.\n","\n","- Para categóricos: moda (valor más frecuente)."],"metadata":{"id":"qVZxzKeIjMPq"}},{"cell_type":"code","source":["df = pd.DataFrame({'A': [1, 2, None, 4],\n","                   'B': [5, None, 8, 3]})\n","print('Dataframe con nulos:\\n')\n","print(df)\n","\n","df_imputado = df.fillna(df.median())\n","print('\\nDataframe imputado:\\n')\n","print(df_imputado)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kFbGn2czWsLb","executionInfo":{"status":"ok","timestamp":1757607749570,"user_tz":180,"elapsed":53,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"d16ca93e-c941-43d1-a54f-ea5964a2441e"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataframe con nulos:\n","\n","     A    B\n","0  1.0  5.0\n","1  2.0  NaN\n","2  NaN  8.0\n","3  4.0  3.0\n","\n","Dataframe imputado:\n","\n","     A    B\n","0  1.0  5.0\n","1  2.0  5.0\n","2  2.0  8.0\n","3  4.0  3.0\n"]}]},{"cell_type":"code","source":["df = pd.DataFrame({'A': [1, 2, None, 4],\n","                   'B': [5, None, 7, 8],\n","                   'C': [9, 10, 11, 12],\n","                   'D': ['a', 'a', None, 'b']})\n","\n","print('Dataframe con nulos:\\n')\n","print(df)\n","\n","# imputar números perdidos con la media, y etiquetas perdidas con la moda\n","df_imputado = df.fillna({'A': df['A'].mean(),\n","                         'B': df['B'].mean(),\n","                         'C': df['C'].mean(),\n","                         'D': df['D'].mode()[0]})\n","print('\\nDataframe imputado:\\n')\n","print(df_imputado)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0oxolKwDTSWj","executionInfo":{"status":"ok","timestamp":1757607749929,"user_tz":180,"elapsed":12,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"d7ae9372-1c45-4282-ebf8-c2f76e37bda4"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataframe con nulos:\n","\n","     A    B   C     D\n","0  1.0  5.0   9     a\n","1  2.0  NaN  10     a\n","2  NaN  7.0  11  None\n","3  4.0  8.0  12     b\n","\n","Dataframe imputado:\n","\n","          A         B   C  D\n","0  1.000000  5.000000   9  a\n","1  2.000000  6.666667  10  a\n","2  2.333333  7.000000  11  a\n","3  4.000000  8.000000  12  b\n"]}]},{"cell_type":"markdown","source":["##3.4. Outliers"],"metadata":{"id":"J6iO5NvZXQzn"}},{"cell_type":"markdown","source":["- Definición: valores atípicos muy alejados del resto.\n","\n","- Problemas: distorsionan análisis y modelos.\n","\n","- Detección (IQR):\n","\n","    - Calcular cuartiles Q1 (25%), Q3 (75%).\n","\n","    - IQR = Q3 − Q1.\n","\n","    - Rango válido = [Q1 − 1.5IQR , Q3 + 1.5IQR].\n","\n","    - Valores fuera = outliers.\n","\n","- Filtrado:\n","\n","    - Condiciones booleanas eliminan registros fuera del rango."],"metadata":{"id":"f5hTLTGUjMJb"}},{"cell_type":"code","source":["df = pd.DataFrame({'A': [1, 2, 10, 2, 1, 3], 'B': [6, 8, 6, 7, 8, 9]})\n","print(df)\n","\n","Q1 = df.A.quantile(0.25)\n","Q3 = df.A.quantile(0.75)\n","IQR = Q3 - Q1\n","\n","rango_valido = (Q1 - 1.5 * IQR, Q3 + 1.5 * IQR)\n","print(f'Rango válido: {rango_valido}')\n","\n","df_filtrado = df[(df.A >= rango_valido[0]) & (df.A <= rango_valido[1])]\n","print('df filtrado:')\n","print(df_filtrado)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U7l7LunmYT31","executionInfo":{"status":"ok","timestamp":1757607751239,"user_tz":180,"elapsed":64,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"2fed79e8-a692-4505-e501-e05404eadae1"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["    A  B\n","0   1  6\n","1   2  8\n","2  10  6\n","3   2  7\n","4   1  8\n","5   3  9\n","Rango válido: (np.float64(-1.0), np.float64(5.0))\n","df filtrado:\n","   A  B\n","0  1  6\n","1  2  8\n","3  2  7\n","4  1  8\n","5  3  9\n"]}]},{"cell_type":"markdown","source":["#4. Data Wrangling: limpieza, transformación y estructuración de datos para análisis"],"metadata":{"id":"_3j9yCfVjMGC"}},{"cell_type":"markdown","source":["##4.1. Ordenamiento y manipulación de datos"],"metadata":{"id":"1weeKL60cfXJ"}},{"cell_type":"markdown","source":["- Muestreo aleatorio: df.sample(frac=0.3) → selecciona fracción.\n","\n","- Permutación: df.sample(frac=1) → reordena filas aleatoriamente.\n","\n","- Ordenamiento: df.sort_values(by=\"columna\")."],"metadata":{"id":"AEAbifD6b1HU"}},{"cell_type":"code","source":["df = pd.DataFrame({'A': [1, 2, 4, 3], 'B': [6, 8, 7, 9]})\n","print(df)\n","\n","df_muestreado = df.sample(frac=0.5)\n","print('df muestreado:')\n","print(df_muestreado)\n","\n","df_permutado = df.sample(frac=1)\n","print('df permutado:')\n","print(df_permutado)\n","\n","df_ordenado = df.sort_values(by='A')\n","print('df ordenado:')\n","print(df_ordenado)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p4Sz5jZzcquA","executionInfo":{"status":"ok","timestamp":1757607752458,"user_tz":180,"elapsed":8,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"a5c4dd91-5300-4420-d1f8-12f07e6bfe7f"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["   A  B\n","0  1  6\n","1  2  8\n","2  4  7\n","3  3  9\n","df muestreado:\n","   A  B\n","0  1  6\n","3  3  9\n","df permutado:\n","   A  B\n","2  4  7\n","1  2  8\n","0  1  6\n","3  3  9\n","df ordenado:\n","   A  B\n","0  1  6\n","1  2  8\n","3  3  9\n","2  4  7\n"]}]},{"cell_type":"markdown","source":["##4.2. Duplicados"],"metadata":{"id":"YXOeYZhadTzz"}},{"cell_type":"markdown","source":["- df.duplicated() → detecta duplicados.\n","\n","- df.drop_duplicates() → elimina duplicados."],"metadata":{"id":"9lsxaq8Sb1Da"}},{"cell_type":"code","source":["df = pd.DataFrame({'A': [1, 2, 1, 3], 'B': [6, 8, 6, 7]})\n","print(df)\n","\n","df_sin_duplicados = df.drop_duplicates()\n","print('df sin duplicados:')\n","print(df_sin_duplicados)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KxtHse-cdqIy","executionInfo":{"status":"ok","timestamp":1757607753257,"user_tz":180,"elapsed":8,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"d4615622-baf6-4288-f2f4-308f9a7f2b4b"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["   A  B\n","0  1  6\n","1  2  8\n","2  1  6\n","3  3  7\n","df sin duplicados:\n","   A  B\n","0  1  6\n","1  2  8\n","3  3  7\n"]}]},{"cell_type":"markdown","source":["##4.3. Reemplazo de valores"],"metadata":{"id":"k2sDRAoTdcq5"}},{"cell_type":"markdown","source":["- df.replace({\"Viejo\":\"Nuevo\"})"],"metadata":{"id":"Fs3Lb-UXdbow"}},{"cell_type":"code","source":["df = pd.DataFrame({'A': [1, 2, 1, 3], 'B': [6, 8, 6, 7]})\n","print(df)\n","\n","df_reemplazado = df.replace({'A': {1: 99}})\n","print('df reemplazado:')\n","print(df_reemplazado)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"caya18pFd-Ev","executionInfo":{"status":"ok","timestamp":1757607753956,"user_tz":180,"elapsed":8,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"ef640115-abc7-4f3b-af8a-f8ba89e23e9f"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["   A  B\n","0  1  6\n","1  2  8\n","2  1  6\n","3  3  7\n","df reemplazado:\n","    A  B\n","0  99  6\n","1   2  8\n","2  99  6\n","3   3  7\n"]}]},{"cell_type":"markdown","source":["##4.4. Discretización y binning"],"metadata":{"id":"ABN_Zx-Wdmjx"}},{"cell_type":"markdown","source":["- Convierte variables continuas en categorías.\n","\n","- pd.cut() divide en intervalos."],"metadata":{"id":"V_jYLqUiditW"}},{"cell_type":"code","source":["df = pd.DataFrame({'Edad': [20, 25, 30, 35, 40]})\n","print(df)\n","\n","df['RangoEdad'] = pd.cut(df['Edad'], bins=[0, 25, 40, 60], labels=['Joven', 'Adulto', 'Adulto Mayor'])\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vcg784C3d1N1","executionInfo":{"status":"ok","timestamp":1757607754702,"user_tz":180,"elapsed":86,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"a217e8fa-5588-4af8-ead9-8b3688ca3d1e"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["   Edad\n","0    20\n","1    25\n","2    30\n","3    35\n","4    40\n","   Edad RangoEdad\n","0    20     Joven\n","1    25     Joven\n","2    30    Adulto\n","3    35    Adulto\n","4    40    Adulto\n"]}]},{"cell_type":"markdown","source":["##4.5. Enriquecimiento de la data"],"metadata":{"id":"YqqYPEWieZAK"}},{"cell_type":"markdown","source":["- Funciones y mapeos\n","    - df[\"col\"].map(func) → aplica función a una serie.\n","\n","- Apply\n","\n","    - Serie: df[\"col\"].apply(func)\n","\n","    - DataFrame: df.apply(func, axis=1)\n","\n","- Lambda\n","\n","    - Funciones rápidas: df[\"col\"].apply(lambda x: x*2)"],"metadata":{"id":"VVGOoYoLfXDC"}},{"cell_type":"code","source":["df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})\n","print(df)\n","\n","df['A_cuadrado'] = df['A'].map(lambda x: x**2)\n","print(df)\n","\n","df['comb_lineal'] = df.apply(lambda row: row['A'] + 2 * row['B'], axis=1)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EotVQCJjfilU","executionInfo":{"status":"ok","timestamp":1757607755284,"user_tz":180,"elapsed":10,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"ddc2d5ed-5dda-4580-e602-0c8db53c16e8"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["   A  B\n","0  1  4\n","1  2  5\n","2  3  6\n","   A  B  A_cuadrado\n","0  1  4           1\n","1  2  5           4\n","2  3  6           9\n","   A  B  A_cuadrado  comb_lineal\n","0  1  4           1            9\n","1  2  5           4           12\n","2  3  6           9           15\n"]}]},{"cell_type":"markdown","source":["##4.6. Manipulación de DataFrames"],"metadata":{"id":"BtiI5pZKgCPg"}},{"cell_type":"markdown","source":["- Agregar columna: df[\"nueva\"] = valores.\n","\n","- Eliminar columna: df.drop(\"col\", axis=1).\n","\n","- Convertir tipo: df[\"col\"].astype(int).\n","\n","- Índices:\n","\n","    - df.set_index(\"col\")\n","\n","    - df.reset_index().\n","\n","- Renombrar: df.rename(columns={\"A\":\"B\"})."],"metadata":{"id":"Px8Q00INfo37"}},{"cell_type":"code","source":["# agregar columna\n","df = pd.DataFrame({'I': ['a', 'b', 'c'], 'A': [1, 2, 3], 'B': [4, 5, 6]})\n","print('Agregar columna C:')\n","df['C'] = [7, 8, 9]\n","print(df)\n","\n","# eliminar columna\n","print('Eliminar columna A:')\n","df = df.drop('A', axis=1)\n","print(df)\n","\n","# convertir tipo\n","print('Convertir B a float:')\n","df['B'] = df['B'].astype(float)\n","print(df)\n","\n","# convertir columna I en índice\n","print('Convertir I en índice:')\n","df = df.set_index('I')\n","print(df)\n","\n","# resetear índice\n","print('Resetear índice:')\n","df = df.reset_index()\n","print(df)\n","\n","# renombrar columna B\n","print('Renombrar columna B:')\n","df = df.rename(columns={'B': 'B2'})\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fVDlGZlfhNWO","executionInfo":{"status":"ok","timestamp":1757607755991,"user_tz":180,"elapsed":8,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"afd2715a-cef8-4eef-dd4f-b4b2c77d6fb6"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["Agregar columna C:\n","   I  A  B  C\n","0  a  1  4  7\n","1  b  2  5  8\n","2  c  3  6  9\n","Eliminar columna A:\n","   I  B  C\n","0  a  4  7\n","1  b  5  8\n","2  c  6  9\n","Convertir B a float:\n","   I    B  C\n","0  a  4.0  7\n","1  b  5.0  8\n","2  c  6.0  9\n","Convertir I en índice:\n","     B  C\n","I        \n","a  4.0  7\n","b  5.0  8\n","c  6.0  9\n","Resetear índice:\n","   I    B  C\n","0  a  4.0  7\n","1  b  5.0  8\n","2  c  6.0  9\n","Renombrar columna B:\n","   I   B2  C\n","0  a  4.0  7\n","1  b  5.0  8\n","2  c  6.0  9\n"]}]},{"cell_type":"markdown","source":["#5. Agrupamiento, Pivoteo y Combinación de datos"],"metadata":{"id":"iquhtAbDIeZG"}},{"cell_type":"markdown","source":["##5.1. Agrupamiento con Indexación Jerárquica (MultiIndex)"],"metadata":{"id":"cVUXxALfIvEi"}},{"cell_type":"markdown","source":["- Permite múltiples niveles en los índices → útil para datos complejos/multidimensionales.\n","\n","- Creación: con set_index([\"col1\", \"col2\"]).\n","\n","- Acceso a subconjuntos → usando loc[(\"valor1\",\"valor2\")]."],"metadata":{"id":"mQ29Q3JWIz8H"}},{"cell_type":"code","source":["data = {\n","    \"Ciudad\": [\"Madrid\", \"Madrid\", \"Barcelona\", \"Barcelona\"],\n","    \"Año\": [2020, 2021, 2020, 2021],\n","    \"Ventas\": [1000, 1500, 1200, 1300]\n","}\n","df = pd.DataFrame(data)\n","df = df.set_index([\"Ciudad\", \"Año\"])\n","print(df, '\\n')\n","\n","print(f'Ventas Madrid 2020 = {df.loc[(\"Madrid\", 2020)].values[0]}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e0--vEOiI6ZA","executionInfo":{"status":"ok","timestamp":1757608521488,"user_tz":180,"elapsed":48,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"b2dc501a-9fea-4148-bdae-f572cabb4eb3"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["                Ventas\n","Ciudad    Año         \n","Madrid    2020    1000\n","          2021    1500\n","Barcelona 2020    1200\n","          2021    1300 \n","\n","Ventas Madrid 2020 = 1000\n"]}]},{"cell_type":"markdown","source":["##5.2. Agrupamiento con groupby()"],"metadata":{"id":"zVPc4QP4JYXr"}},{"cell_type":"markdown","source":["- Basado en dividir → aplicar → combinar.\n","\n","- Se puede agrupar por una o más columnas.\n","\n","- Funciones comunes: sum(), mean(), count(), max(), min().\n","\n","- Se pueden aplicar múltiples agregaciones a la vez."],"metadata":{"id":"BMQdEb5wJeSL"}},{"cell_type":"code","source":["print(df.groupby(\"Ciudad\")[\"Ventas\"].sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oSwxgCdBJdOj","executionInfo":{"status":"ok","timestamp":1757608523135,"user_tz":180,"elapsed":54,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"3b53186f-6c12-41f0-cf22-d0408c98ecf5"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["Ciudad\n","Barcelona    2500\n","Madrid       2500\n","Name: Ventas, dtype: int64\n"]}]},{"cell_type":"code","source":["print(df.groupby(\"Ciudad\")[\"Ventas\"].agg([\"sum\", \"mean\"]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zUxxtm2_Jp3M","executionInfo":{"status":"ok","timestamp":1757608528531,"user_tz":180,"elapsed":9,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"180b1006-d93f-44c8-d79b-881b5d62aa36"},"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["            sum    mean\n","Ciudad                 \n","Barcelona  2500  1250.0\n","Madrid     2500  1250.0\n"]}]},{"cell_type":"code","source":["print(df.groupby(level='Ciudad')['Ventas'].transform(lambda x: x / x.sum()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u1JvMDL6nDLB","executionInfo":{"status":"ok","timestamp":1757608534487,"user_tz":180,"elapsed":67,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"4d4bede9-7f68-479b-f034-05a8f3e6ed03"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["Ciudad     Año \n","Madrid     2020    0.40\n","           2021    0.60\n","Barcelona  2020    0.48\n","           2021    0.52\n","Name: Ventas, dtype: float64\n"]}]},{"cell_type":"markdown","source":["##5.3. Pivoteo de DataFrames"],"metadata":{"id":"nFWxNgaSJ51Z"}},{"cell_type":"markdown","source":["- Convierte datos de formato largo → ancho.\n","\n","- Se usa pivot_table().\n","\n","- Ideal para reorganizar y resumir información."],"metadata":{"id":"4UdCC3wGJ-OB"}},{"cell_type":"code","source":["df_reset = df.reset_index()\n","pivot = df_reset.pivot_table(values=\"Ventas\", index=\"Ciudad\", columns=\"Año\")\n","print(pivot)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J7Z85MGfKVqC","executionInfo":{"status":"ok","timestamp":1757607758795,"user_tz":180,"elapsed":57,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"b712b381-c3c5-4499-83f4-0c3a5f3f8fd0"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Año          2020    2021\n","Ciudad                   \n","Barcelona  1200.0  1300.0\n","Madrid     1000.0  1500.0\n"]}]},{"cell_type":"markdown","source":["##5.4. Despivoteo de DataFrames (melt)"],"metadata":{"id":"t1rlOSwwK86u"}},{"cell_type":"markdown","source":["- Convierte de formato ancho → largo.\n","\n","- Útil para análisis detallados o series temporales."],"metadata":{"id":"QWvoYKzaLB2W"}},{"cell_type":"code","source":["melted = df_reset.melt(id_vars=[\"Ciudad\"], value_vars=[\"Ventas\"])\n","print(melted)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0QL9w0ZnLD7T","executionInfo":{"status":"ok","timestamp":1757607759699,"user_tz":180,"elapsed":59,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"62cce83f-13fa-4d5b-e498-d601eb9ff3eb"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["      Ciudad variable  value\n","0     Madrid   Ventas   1000\n","1     Madrid   Ventas   1500\n","2  Barcelona   Ventas   1200\n","3  Barcelona   Ventas   1300\n"]}]},{"cell_type":"code","source":["print('DataFrame:')\n","df = pd.DataFrame({\n","    'producto': ['lapiz', 'lapiz', 'cuaderno', 'cuaderno', 'resma', 'corchetes', 'corchetes'],\n","    'año': [2020, 2021, 2020, 2021, 2021, 2020, 2021],\n","    'precio': [10, 15, 4, 9, 2, 15, 10]\n","})\n","print(df, '\\n')\n","\n","# pivotear\n","df_pivot = df.pivot(index='producto', columns=['año'], values='precio')\n","print('Pivotear:')\n","print(df_pivot, '\\n')\n","\n","# melt\n","print('Melt:')\n","df_pivot = df_pivot.reset_index()\n","df_melt = pd.melt(df_pivot, id_vars='producto', value_vars=[2020, 2021], var_name='Año', value_name='Precio')\n","print(df_melt, '\\n')\n","\n","# pivotear con función agregada\n","df_pivot_agg = pd.pivot_table(df_melt, index='Año', columns='producto', values='Precio', aggfunc=lambda x: x*1000)\n","print('Pivotear con función agregada:')\n","print(df_pivot_agg)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6xd-WzJaLwi3","executionInfo":{"status":"ok","timestamp":1757607759763,"user_tz":180,"elapsed":11,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"f3ce6ed7-c020-4ccf-d6d7-69fe609d957d"},"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["DataFrame:\n","    producto   año  precio\n","0      lapiz  2020      10\n","1      lapiz  2021      15\n","2   cuaderno  2020       4\n","3   cuaderno  2021       9\n","4      resma  2021       2\n","5  corchetes  2020      15\n","6  corchetes  2021      10 \n","\n","Pivotear:\n","año        2020  2021\n","producto             \n","corchetes  15.0  10.0\n","cuaderno    4.0   9.0\n","lapiz      10.0  15.0\n","resma       NaN   2.0 \n","\n","Melt:\n","    producto   Año  Precio\n","0  corchetes  2020    15.0\n","1   cuaderno  2020     4.0\n","2      lapiz  2020    10.0\n","3      resma  2020     NaN\n","4  corchetes  2021    10.0\n","5   cuaderno  2021     9.0\n","6      lapiz  2021    15.0\n","7      resma  2021     2.0 \n","\n","Pivotear con función agregada:\n","producto  corchetes  cuaderno    lapiz   resma\n","Año                                           \n","2020        15000.0    4000.0  10000.0     NaN\n","2021        10000.0    9000.0  15000.0  2000.0\n"]}]},{"cell_type":"markdown","source":["#6. Combinación y Merge de Datos"],"metadata":{"id":"vR2kolhSZYYN"}},{"cell_type":"markdown","source":["##6.1. Concatenación (pd.concat)"],"metadata":{"id":"XL-phzqrZcij"}},{"cell_type":"markdown","source":["- Une DataFrames verticalmente (axis=0) → más filas.\n","\n","- Une DataFrames horizontalmente (axis=1) → más columnas."],"metadata":{"id":"2AsKsYtuZg2G"}},{"cell_type":"code","source":["df1 = pd.DataFrame({\"A\": [1,2], \"B\": [3,4]})\n","df2 = pd.DataFrame({\"A\": [5,6], \"B\": [7,8]})\n","print(pd.concat([df1, df2], axis=0))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ox5dGCXtZkW2","executionInfo":{"status":"ok","timestamp":1757607760746,"user_tz":180,"elapsed":46,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"63c69baf-5246-40e6-eee6-2d52d3212b7d"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["   A  B\n","0  1  3\n","1  2  4\n","0  5  7\n","1  6  8\n"]}]},{"cell_type":"markdown","source":["##6.2. Merge (pd.merge)"],"metadata":{"id":"hc-zrsopZzKm"}},{"cell_type":"markdown","source":["- Une DataFrames en base a una clave común (como SQL JOIN).\n","\n","- Tipos de uniones:\n","\n","    - inner → solo coincidencias.\n","\n","    - left → todo el izq., añade coincidentes.\n","\n","    - right → todo el der., añade coincidentes.\n","\n","    - outer → unión completa, rellena NaN."],"metadata":{"id":"p-W66n-1Z5LB"}},{"cell_type":"code","source":["df1 = pd.DataFrame({\"ID\": [1,2,3], \"Nombre\": [\"Ana\",\"Luis\",\"Marta\"]})\n","df2 = pd.DataFrame({\"ID\": [1,2,4], \"Edad\": [23,34,29]})\n","print(pd.merge(df1, df2, on=\"ID\", how=\"outer\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NHhNYpyUaA75","executionInfo":{"status":"ok","timestamp":1757607761587,"user_tz":180,"elapsed":111,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"ea2d2be2-074a-437f-e812-963bc4a12e3e"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["   ID Nombre  Edad\n","0   1    Ana  23.0\n","1   2   Luis  34.0\n","2   3  Marta   NaN\n","3   4    NaN  29.0\n"]}]},{"cell_type":"markdown","source":["#PANDAS: Resumen Express"],"metadata":{"id":"TvjZidq_b2kG"}},{"cell_type":"markdown","source":["##1. La librería Pandas"],"metadata":{"id":"TRSvD5RycCaO"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# --- SERIE ---\n","s = pd.Series([10, 20, 30], index=['a','b','c'])\n","print(s['b'])        # 20\n","print(s[s > 15])     # b    20\n","                     # c    30\n","                     # dtype: int64\n","print(s.mean())      # 20.0\n","\n","# --- DATAFRAME ---\n","data = {'Nombre': ['Ana','Luis','Marta'],\n","        'Edad': [23,34,29],\n","        'Ciudad': ['Madrid','Sevilla','Valencia']}\n","df = pd.DataFrame(data)\n","\n","print(df['Nombre'])\n","print(df.loc[0,'Edad'])\n","print(df[df['Edad'] > 25])\n","\n","# --- EXPLORACIÓN ---\n","print(df.head())\n","print(df.info())\n","print(df.describe())\n","\n","# --- SUMARIZACIÓN ---\n","print(df['Edad'].mean())\n","print(df['Edad'].sum())\n","\n","# --- CATEGÓRICOS ---\n","print(df['Ciudad'].unique())\n","print(df['Ciudad'].nunique())\n","print(df['Ciudad'].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jxPhNXMlcL0V","executionInfo":{"status":"ok","timestamp":1757607763353,"user_tz":180,"elapsed":123,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"8565881b-fd54-477c-9a59-8fca1aae8e8e"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["20\n","b    20\n","c    30\n","dtype: int64\n","20.0\n","0      Ana\n","1     Luis\n","2    Marta\n","Name: Nombre, dtype: object\n","23\n","  Nombre  Edad    Ciudad\n","1   Luis    34   Sevilla\n","2  Marta    29  Valencia\n","  Nombre  Edad    Ciudad\n","0    Ana    23    Madrid\n","1   Luis    34   Sevilla\n","2  Marta    29  Valencia\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3 entries, 0 to 2\n","Data columns (total 3 columns):\n"," #   Column  Non-Null Count  Dtype \n","---  ------  --------------  ----- \n"," 0   Nombre  3 non-null      object\n"," 1   Edad    3 non-null      int64 \n"," 2   Ciudad  3 non-null      object\n","dtypes: int64(1), object(2)\n","memory usage: 204.0+ bytes\n","None\n","            Edad\n","count   3.000000\n","mean   28.666667\n","std     5.507571\n","min    23.000000\n","25%    26.000000\n","50%    29.000000\n","75%    31.500000\n","max    34.000000\n","28.666666666666668\n","86\n","['Madrid' 'Sevilla' 'Valencia']\n","3\n","Ciudad\n","Madrid      1\n","Sevilla     1\n","Valencia    1\n","Name: count, dtype: int64\n"]}]},{"cell_type":"markdown","source":["##2. Obtención de datos desde archivos"],"metadata":{"id":"k8AZsKw4jKGv"}},{"cell_type":"code","source":["# --- CSV ---\n","df = pd.read_csv(\"archivo.csv\")\n","df.to_csv(\"salida.csv\", index=False)\n","\n","# --- Excel ---\n","df = pd.read_excel(\"archivo.xlsx\", sheet_name=\"Hoja1\")\n","df.to_excel(\"resultado.xlsx\", sheet_name=\"Resultados\", na_rep=\"Sin datos\")\n","\n","# --- Tablas Web ---\n","url = \"https://es.wikipedia.org/wiki/Anexo:Pa%C3%ADses_por_PIB\"\n","tablas = pd.read_html(url)\n","df_web = tablas[0]\n","print(df_web.head())"],"metadata":{"id":"c3SaPSKQi6qF","executionInfo":{"status":"ok","timestamp":1757607787632,"user_tz":180,"elapsed":27,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":48,"outputs":[]},{"cell_type":"markdown","source":["##3. Manejo de Valores Perdidos y Outliers"],"metadata":{"id":"qRVDUESHpXUR"}},{"cell_type":"code","source":["# --- Ejemplo de DataFrame ---\n","df = pd.DataFrame({\n","    \"Nombre\": [\"Ana\", \"Luis\", \"Marta\", \"Juan\", \"Ana\"],\n","    \"Edad\": [25, None, 29, 35, None],\n","    \"Ingreso\": [3000, 4000, 500000, 3500, 3800]\n","})\n","\n","print(df)\n","\n","# --- Valores perdidos ---\n","\n","print('Identificar valores perdidos:')\n","print(df.isnull())                 # Identificar NaN\n","df_sin_na = df.dropna()            # Eliminar filas con NaN\n","df_relleno = df.fillna({\"Edad\": df[\"Edad\"].mean()})  # Imputación numérica\n","df[\"Edad\"] = df[\"Edad\"].fillna(df[\"Edad\"].median())  # Con mediana\n","print('df imputado:')\n","print(df)\n","\n","# Imputación categórica (moda)\n","df_categ = pd.DataFrame({\"Color\": [\"Rojo\", \"Azul\", None, \"Rojo\"]})\n","df_categ[\"Color\"] = df_categ[\"Color\"].fillna(df_categ[\"Color\"].mode()[0])\n","print('df imputado:')\n","print(df_categ)\n","\n","# --- 4. Outliers ---\n","Q1, Q3 = df[\"Ingreso\"].quantile([0.25, 0.75])\n","IQR = Q3 - Q1\n","lim_inf, lim_sup = Q1 - 1.5*IQR, Q3 + 1.5*IQR\n","df_sin_outliers = df[(df[\"Ingreso\"] >= lim_inf) & (df[\"Ingreso\"] <= lim_sup)]\n","print('df sin outliers:')\n","print(df_sin_outliers)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u7y8ERGDhKsj","executionInfo":{"status":"ok","timestamp":1757607796874,"user_tz":180,"elapsed":36,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"2c14fedd-5bdd-49d8-dc16-b44fddc880a8"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["  Nombre  Edad  Ingreso\n","0    Ana  25.0     3000\n","1   Luis   NaN     4000\n","2  Marta  29.0   500000\n","3   Juan  35.0     3500\n","4    Ana   NaN     3800\n","Identificar valores perdidos:\n","   Nombre   Edad  Ingreso\n","0   False  False    False\n","1   False   True    False\n","2   False  False    False\n","3   False  False    False\n","4   False   True    False\n","df imputado:\n","  Nombre  Edad  Ingreso\n","0    Ana  25.0     3000\n","1   Luis  29.0     4000\n","2  Marta  29.0   500000\n","3   Juan  35.0     3500\n","4    Ana  29.0     3800\n","df imputado:\n","  Color\n","0  Rojo\n","1  Azul\n","2  Rojo\n","3  Rojo\n","df sin outliers:\n","  Nombre  Edad  Ingreso\n","0    Ana  25.0     3000\n","1   Luis  29.0     4000\n","3   Juan  35.0     3500\n","4    Ana  29.0     3800\n"]}]},{"cell_type":"markdown","source":["##4. Data Wrangling"],"metadata":{"id":"tbmlKKuvqSX6"}},{"cell_type":"code","source":["# --- Ejemplo de DataFrame ---\n","df = pd.DataFrame({\n","    \"Nombre\": [\"Ana\", \"Luis\", \"Marta\", \"Juan\", \"Ana\"],\n","    \"Edad\": [25, None, 29, 35, None],\n","    \"Ingreso\": [3000, 4000, 500000, 3500, 3800]\n","})\n","\n","# Muestreo aleatorio y permutación\n","muestra = df.sample(frac=0.4)\n","permutado = df.sample(frac=1)\n","\n","# Ordenamiento\n","ordenado = df.sort_values(by=\"Ingreso\")\n","\n","# Duplicados\n","duplicados = df[df.duplicated()]\n","df_sin_dup = df.drop_duplicates()\n","\n","# Reemplazo\n","df[\"Nombre\"] = df[\"Nombre\"].replace({\"Ana\": \"Ana María\"})\n","\n","# Discretización / Binning\n","df[\"RangoIngreso\"] = pd.cut(df[\"Ingreso\"], bins=[0, 3500, 10000, 600000],\n","                            labels=[\"Bajo\", \"Medio\", \"Alto\"])\n","\n","# Enriquecimiento: funciones, apply, lambda\n","df[\"Edad_x2\"] = df[\"Edad\"].apply(lambda x: x*2)\n","\n","# Manipulación DataFrame\n","df[\"NuevaCol\"] = [\"A\", \"B\", \"C\", \"D\", \"E\"]  # agregar\n","df = df.drop(\"NuevaCol\", axis=1)            # eliminar\n","\n","print('df')\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fmUilF6fqxQl","executionInfo":{"status":"ok","timestamp":1757607798019,"user_tz":180,"elapsed":51,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"21c2a082-5ca8-4976-9020-d52dd5f82c81"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["df\n","      Nombre  Edad  Ingreso RangoIngreso  Edad_x2\n","0  Ana María  25.0     3000         Bajo     50.0\n","1       Luis   NaN     4000        Medio      NaN\n","2      Marta  29.0   500000         Alto     58.0\n","3       Juan  35.0     3500         Bajo     70.0\n","4  Ana María   NaN     3800        Medio      NaN\n"]}]},{"cell_type":"markdown","source":["##5. Agrupamiento, Pivoteo y Combinación de datos"],"metadata":{"id":"l2mHMWg-bAE6"}},{"cell_type":"code","source":["# === Agrupamiento con MultiIndex ===\n","data = {\"Ciudad\":[\"Madrid\",\"Madrid\",\"Barcelona\",\"Barcelona\"],\n","        \"Año\":[2020,2021,2020,2021],\n","        \"Ventas\":[1000,1500,1200,1300]}\n","df = pd.DataFrame(data).set_index([\"Ciudad\",\"Año\"])\n","print(\"MultiIndex:\\n\", df)\n","\n","# === groupby ===\n","print(\"\\nSuma por ciudad:\\n\", df.groupby(\"Ciudad\")[\"Ventas\"].sum())\n","print(\"\\nVarias funciones:\\n\", df.groupby(\"Ciudad\")[\"Ventas\"].agg([\"sum\",\"mean\"]))\n","\n","# === transform ===\n","print(\"\\nVentas normalizadas:\\n\", df.groupby(\"Ciudad\")[\"Ventas\"].transform(lambda x: x / x.sum()))\n","\n","# === Pivot ===\n","df_reset = df.reset_index()\n","print(\"\\nPivot:\\n\", df_reset.pivot_table(values=\"Ventas\", index=\"Ciudad\", columns=\"Año\"))\n","\n","# === Melt ===\n","print(\"\\nMelt:\\n\", df_reset.melt(id_vars=[\"Ciudad\"], value_vars=[\"Ventas\"]))\n","\n","# === Concat ===\n","df1 = pd.DataFrame({\"A\":[1,2], \"B\":[3,4]})\n","df2 = pd.DataFrame({\"A\":[5,6], \"B\":[7,8]})\n","print(\"\\nConcat:\\n\", pd.concat([df1, df2], axis=0))\n","\n","# === Merge ===\n","df1 = pd.DataFrame({\"ID\":[1,2,3], \"Nombre\":[\"Ana\",\"Luis\",\"Marta\"]})\n","df2 = pd.DataFrame({\"ID\":[1,2,4], \"Edad\":[23,34,29]})\n","print(\"\\nMerge outer:\\n\", pd.merge(df1, df2, on=\"ID\", how=\"outer\"))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wBAvlb5apBUk","executionInfo":{"status":"ok","timestamp":1757609030264,"user_tz":180,"elapsed":49,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"5a272a5a-2801-4375-f059-417f68b664b0"},"execution_count":77,"outputs":[{"output_type":"stream","name":"stdout","text":["MultiIndex:\n","                 Ventas\n","Ciudad    Año         \n","Madrid    2020    1000\n","          2021    1500\n","Barcelona 2020    1200\n","          2021    1300\n","\n","Suma por ciudad:\n"," Ciudad\n","Barcelona    2500\n","Madrid       2500\n","Name: Ventas, dtype: int64\n","\n","Varias funciones:\n","             sum    mean\n","Ciudad                 \n","Barcelona  2500  1250.0\n","Madrid     2500  1250.0\n","\n","Ventas normalizadas:\n"," Ciudad     Año \n","Madrid     2020    0.40\n","           2021    0.60\n","Barcelona  2020    0.48\n","           2021    0.52\n","Name: Ventas, dtype: float64\n","\n","Pivot:\n"," Año          2020    2021\n","Ciudad                   \n","Barcelona  1200.0  1300.0\n","Madrid     1000.0  1500.0\n","\n","Melt:\n","       Ciudad variable  value\n","0     Madrid   Ventas   1000\n","1     Madrid   Ventas   1500\n","2  Barcelona   Ventas   1200\n","3  Barcelona   Ventas   1300\n","\n","Concat:\n","    A  B\n","0  1  3\n","1  2  4\n","0  5  7\n","1  6  8\n","\n","Merge outer:\n","    ID Nombre  Edad\n","0   1    Ana  23.0\n","1   2   Luis  34.0\n","2   3  Marta   NaN\n","3   4    NaN  29.0\n"]}]},{"cell_type":"markdown","source":["##6. Combinación y Merge de Datos"],"metadata":{"id":"dm2ZNTcYbdVP"}},{"cell_type":"code","source":["# === Agrupamiento con MultiIndex ===\n","data = {\"Ciudad\":[\"Madrid\",\"Madrid\",\"Barcelona\",\"Barcelona\"],\n","        \"Año\":[2020,2021,2020,2021],\n","        \"Ventas\":[1000,1500,1200,1300]}\n","\n","print('Data original\\n',df, '\\n')\n","df = pd.DataFrame(data).set_index([\"Ciudad\",\"Año\"])\n","print('MultiIndex: pd.DataFrame(data).set_index([\"Ciudad\",\"Año\"])\\n', df)\n","\n","# === groupby ===\n","print(\"\\nSuma por ciudad:\\n\", df.groupby(\"Ciudad\")[\"Ventas\"].sum())\n","print(\"\\nVarias funciones:\\n\", df.groupby(\"Ciudad\")[\"Ventas\"].agg([\"sum\",\"mean\"]))\n","\n","# === Pivot ===\n","df_reset = df.reset_index()\n","print(\"\\nPivot:\\n\", df_reset.pivot_table(values=\"Ventas\", index=\"Ciudad\", columns=\"Año\"))\n","\n","# === Melt ===\n","print(\"\\nMelt:\\n\", df_reset.melt(id_vars=[\"Ciudad\"], value_vars=[\"Ventas\"]))\n","\n","# === Concat ===\n","df1 = pd.DataFrame({\"A\":[1,2], \"B\":[3,4]})\n","df2 = pd.DataFrame({\"A\":[5,6], \"B\":[7,8]})\n","print(\"\\nConcat:\\n\", pd.concat([df1, df2], axis=0))\n","\n","# === Merge ===\n","df1 = pd.DataFrame({\"ID\":[1,2,3], \"Nombre\":[\"Ana\",\"Luis\",\"Marta\"]})\n","df2 = pd.DataFrame({\"ID\":[1,2,4], \"Edad\":[23,34,29]})\n","print(\"\\nMerge outer:\\n\", pd.merge(df1, df2, on=\"ID\", how=\"outer\"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WOZK5mvrbhP4","executionInfo":{"status":"ok","timestamp":1757607799358,"user_tz":180,"elapsed":154,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"3589b3b6-6a19-4140-c436-0c88f22be6b3"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["Data original\n","       Nombre  Años  Ingreso RangoIngreso  Edad_x2\n","0  Ana María  25.0     3000         Bajo     50.0\n","1       Luis   NaN     4000        Medio      NaN\n","2      Marta  29.0   500000         Alto     58.0\n","3       Juan  35.0     3500         Bajo     70.0\n","4  Ana María   NaN     3800        Medio      NaN \n","\n","MultiIndex: pd.DataFrame(data).set_index([\"Ciudad\",\"Año\"])\n","                 Ventas\n","Ciudad    Año         \n","Madrid    2020    1000\n","          2021    1500\n","Barcelona 2020    1200\n","          2021    1300\n","\n","Suma por ciudad:\n"," Ciudad\n","Barcelona    2500\n","Madrid       2500\n","Name: Ventas, dtype: int64\n","\n","Varias funciones:\n","             sum    mean\n","Ciudad                 \n","Barcelona  2500  1250.0\n","Madrid     2500  1250.0\n","\n","Pivot:\n"," Año          2020    2021\n","Ciudad                   \n","Barcelona  1200.0  1300.0\n","Madrid     1000.0  1500.0\n","\n","Melt:\n","       Ciudad variable  value\n","0     Madrid   Ventas   1000\n","1     Madrid   Ventas   1500\n","2  Barcelona   Ventas   1200\n","3  Barcelona   Ventas   1300\n","\n","Concat:\n","    A  B\n","0  1  3\n","1  2  4\n","0  5  7\n","1  6  8\n","\n","Merge outer:\n","    ID Nombre  Edad\n","0   1    Ana  23.0\n","1   2   Luis  34.0\n","2   3  Marta   NaN\n","3   4    NaN  29.0\n"]}]},{"cell_type":"markdown","source":["#EJEMPLO"],"metadata":{"id":"Z5RitYy72zDY"}},{"cell_type":"code","source":["# Dataset base\n","data = {\n","    \"Tienda\": [\"Madrid\",\"Madrid\",\"Madrid\",\"Barcelona\",\"Barcelona\",\"Sevilla\",\"Sevilla\"],\n","    \"Año\": [2020,2020,2021,2020,2021,2020,2021],\n","    \"Producto\": [\"A\",\"B\",\"A\",\"A\",\"B\",\"A\",\"B\"],\n","    \"Vendedor\": [\"Ana\",\"Luis\",\"Ana\",\"Marta\",\"Luis\",\"Ana\",\"Marta\"],\n","    \"Ventas\": [500,800,700,600,900,400,1000]\n","}\n","df = pd.DataFrame(data)\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s4pSIPHk2031","executionInfo":{"status":"ok","timestamp":1757607800137,"user_tz":180,"elapsed":36,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"ddcc512d-1875-42b7-941e-7da7da742b9b"},"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["      Tienda   Año Producto Vendedor  Ventas\n","0     Madrid  2020        A      Ana     500\n","1     Madrid  2020        B     Luis     800\n","2     Madrid  2021        A      Ana     700\n","3  Barcelona  2020        A    Marta     600\n","4  Barcelona  2021        B     Luis     900\n","5    Sevilla  2020        A      Ana     400\n","6    Sevilla  2021        B    Marta    1000\n"]}]},{"cell_type":"code","source":["# multiIndex\n","\n","df_multi = df.set_index([\"Tienda\",\"Año\"])\n","print(df_multi)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QmULUMZD22fO","executionInfo":{"status":"ok","timestamp":1757607800515,"user_tz":180,"elapsed":16,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"66583be3-97bd-4865-9a05-a8c3110b0123"},"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["               Producto Vendedor  Ventas\n","Tienda    Año                           \n","Madrid    2020        A      Ana     500\n","          2020        B     Luis     800\n","          2021        A      Ana     700\n","Barcelona 2020        A    Marta     600\n","          2021        B     Luis     900\n","Sevilla   2020        A      Ana     400\n","          2021        B    Marta    1000\n"]}]},{"cell_type":"code","source":["# groupby\n","\n","# Suma de ventas por tienda\n","print(df.groupby(\"Tienda\")[\"Ventas\"].sum())\n","\n","# Promedio y máximo de ventas por producto\n","print(df.groupby(\"Producto\")[\"Ventas\"].agg([\"mean\",\"max\"]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eefKm8Or25CX","executionInfo":{"status":"ok","timestamp":1757607801316,"user_tz":180,"elapsed":218,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"9dd8a5dc-7a3d-4bb8-88d1-0a7edd9883b4"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Tienda\n","Barcelona    1500\n","Madrid       2000\n","Sevilla      1400\n","Name: Ventas, dtype: int64\n","           mean   max\n","Producto             \n","A         550.0   700\n","B         900.0  1000\n"]}]},{"cell_type":"code","source":["# pivot\n","\n","pivot = df.pivot_table(values=\"Ventas\", index=\"Tienda\", columns=\"Año\", aggfunc=\"sum\")\n","print(pivot)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ja-sxip_2690","executionInfo":{"status":"ok","timestamp":1757607801386,"user_tz":180,"elapsed":17,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"11263940-8ab2-4e31-bbb4-5e23a8bcd7e1"},"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["Año        2020  2021\n","Tienda               \n","Barcelona   600   900\n","Madrid     1300   700\n","Sevilla     400  1000\n"]}]},{"cell_type":"code","source":["# melt\n","\n","melted = df.melt(id_vars=[\"Tienda\",\"Año\"], value_vars=[\"Ventas\"])\n","print(melted.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"32ligWWi281F","executionInfo":{"status":"ok","timestamp":1757607801710,"user_tz":180,"elapsed":54,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"78bc9c73-4860-492e-80e7-ccb77b9f9396"},"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["      Tienda   Año variable  value\n","0     Madrid  2020   Ventas    500\n","1     Madrid  2020   Ventas    800\n","2     Madrid  2021   Ventas    700\n","3  Barcelona  2020   Ventas    600\n","4  Barcelona  2021   Ventas    900\n"]}]},{"cell_type":"code","source":["# concat\n","\n","df_extra = pd.DataFrame({\n","    \"Tienda\":[\"Valencia\"], \"Año\":[2021], \"Producto\":[\"C\"], \"Vendedor\":[\"Luis\"], \"Ventas\":[750]\n","})\n","df_concat = pd.concat([df, df_extra], ignore_index=True)\n","print(df_concat)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dW3XmRy_2-7Y","executionInfo":{"status":"ok","timestamp":1757607801790,"user_tz":180,"elapsed":40,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"5b7a250b-238a-4908-c203-7923962bba87"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["      Tienda   Año Producto Vendedor  Ventas\n","0     Madrid  2020        A      Ana     500\n","1     Madrid  2020        B     Luis     800\n","2     Madrid  2021        A      Ana     700\n","3  Barcelona  2020        A    Marta     600\n","4  Barcelona  2021        B     Luis     900\n","5    Sevilla  2020        A      Ana     400\n","6    Sevilla  2021        B    Marta    1000\n","7   Valencia  2021        C     Luis     750\n"]}]},{"cell_type":"code","source":["#merge\n","\n","empleados = pd.DataFrame({\n","    \"Vendedor\":[\"Ana\",\"Luis\",\"Marta\",\"Pedro\"],\n","    \"Edad\":[30,35,28,40]\n","})\n","\n","df_merge = pd.merge(df, empleados, on=\"Vendedor\", how=\"left\")\n","print(df_merge)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z7RbuYto3Aqg","executionInfo":{"status":"ok","timestamp":1757607802563,"user_tz":180,"elapsed":62,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"6881e905-1e59-45c0-e6b6-99b780f595ea"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["      Tienda   Año Producto Vendedor  Ventas  Edad\n","0     Madrid  2020        A      Ana     500    30\n","1     Madrid  2020        B     Luis     800    35\n","2     Madrid  2021        A      Ana     700    30\n","3  Barcelona  2020        A    Marta     600    28\n","4  Barcelona  2021        B     Luis     900    35\n","5    Sevilla  2020        A      Ana     400    30\n","6    Sevilla  2021        B    Marta    1000    28\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Ventas\n","df = pd.DataFrame({\n","    \"Tienda\":[\"Madrid\",\"Madrid\",\"Barcelona\",\"Sevilla\"],\n","    \"Año\":[2020,2021,2020,2021],\n","    \"Vendedor\":[\"Ana\",\"Luis\",\"Marta\",\"Ana\"],\n","    \"Ventas\":[500,700,600,400]\n","})\n","\n","# Información adicional de empleados\n","empleados = pd.DataFrame({\n","    \"Vendedor\":[\"Ana\",\"Luis\",\"Marta\",\"Pedro\"],\n","    \"Edad\":[30,35,28,40],\n","    \"Departamento\":[\"Electrónica\",\"Hogar\",\"Moda\",\"Deportes\"]\n","})"],"metadata":{"id":"bLMxmVau3FyN","executionInfo":{"status":"ok","timestamp":1757607802640,"user_tz":180,"elapsed":22,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["# Inner Join (intersección, solo coincidencias)\n","\n","inner = pd.merge(df, empleados, on=\"Vendedor\", how=\"inner\")\n","print(inner)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3676egV33R3-","executionInfo":{"status":"ok","timestamp":1757607803111,"user_tz":180,"elapsed":12,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"8e23efbd-9991-46c6-dce8-2596ed2fbd2a"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["      Tienda   Año Vendedor  Ventas  Edad Departamento\n","0     Madrid  2020      Ana     500    30  Electrónica\n","1     Madrid  2021     Luis     700    35        Hogar\n","2  Barcelona  2020    Marta     600    28         Moda\n","3    Sevilla  2021      Ana     400    30  Electrónica\n"]}]},{"cell_type":"code","source":["# Left Join (todo de la izquierda)\n","\n","left = pd.merge(df, empleados, on=\"Vendedor\", how=\"left\")\n","print(left)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bzlY2AHe3Z9N","executionInfo":{"status":"ok","timestamp":1757607803675,"user_tz":180,"elapsed":49,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"14c71684-4dd0-48c4-b849-5d108363797e"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["      Tienda   Año Vendedor  Ventas  Edad Departamento\n","0     Madrid  2020      Ana     500    30  Electrónica\n","1     Madrid  2021     Luis     700    35        Hogar\n","2  Barcelona  2020    Marta     600    28         Moda\n","3    Sevilla  2021      Ana     400    30  Electrónica\n"]}]},{"cell_type":"code","source":["# Right Join (todo de la derecha)\n","\n","right = pd.merge(df, empleados, on=\"Vendedor\", how=\"right\")\n","print(right)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XmLnBlsi3Wtl","executionInfo":{"status":"ok","timestamp":1757607804090,"user_tz":180,"elapsed":37,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"be291b6b-7137-4d4f-934a-38da5aab6d47"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["      Tienda     Año Vendedor  Ventas  Edad Departamento\n","0     Madrid  2020.0      Ana   500.0    30  Electrónica\n","1    Sevilla  2021.0      Ana   400.0    30  Electrónica\n","2     Madrid  2021.0     Luis   700.0    35        Hogar\n","3  Barcelona  2020.0    Marta   600.0    28         Moda\n","4        NaN     NaN    Pedro     NaN    40     Deportes\n"]}]},{"cell_type":"code","source":["# Outer Join (unión completa)\n","\n","outer = pd.merge(df, empleados, on=\"Vendedor\", how=\"outer\")\n","print(outer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f_PHdSrz3gTV","executionInfo":{"status":"ok","timestamp":1757607804622,"user_tz":180,"elapsed":37,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"af00d7ad-996f-4c22-c210-d2bf5b55ec2a"},"execution_count":64,"outputs":[{"output_type":"stream","name":"stdout","text":["      Tienda     Año Vendedor  Ventas  Edad Departamento\n","0     Madrid  2020.0      Ana   500.0    30  Electrónica\n","1    Sevilla  2021.0      Ana   400.0    30  Electrónica\n","2     Madrid  2021.0     Luis   700.0    35        Hogar\n","3  Barcelona  2020.0    Marta   600.0    28         Moda\n","4        NaN     NaN    Pedro     NaN    40     Deportes\n"]}]}]}