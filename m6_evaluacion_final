{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["9c6sF2YVHT8F"],"authorship_tag":"ABX9TyMk/BDISdXq5G++2KQN8C43"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#**ANÁLISIS DEL IMPACTO DEL CAMBIO CLIMÁTICO EN LA PRODUCCIÓN AGRÍCOLA**"],"metadata":{"id":"IGTijnD-Gqpi"}},{"cell_type":"markdown","source":["Eres un analista de datos en un centro de investigación sobre cambio climático y seguridad\n","alimentaria. Te han encomendado evaluar cómo factores climáticos afectan la producción agrícola\n","en distintos países. Para ello, aplicarás modelos de aprendizaje supervisado para predecir la\n","producción de alimentos y clasificar los países según su vulnerabilidad.\n","\n","OBJETIVOS DE LA EVALUACIÓN\n","- Aplicar técnicas de regresión para predecir la producción agrícola en función de variables\n","climáticas.\n","- Utilizar algoritmos de clasificación para categorizar los países según el impacto del cambio\n","climático.\n","- Evaluar el desempeño de los modelos mediante métricas adecuadas.\n","- Aplicar preprocesamiento de datos para mejorar la calidad del análisis.\n","- Optimizar los modelos a través de técnicas de ajuste de hiperparámetros."],"metadata":{"id":"3W7TrWXoGuJZ"}},{"cell_type":"markdown","source":["##**Importar bibliotecas**"],"metadata":{"id":"gjR_oTVqWLOJ"}},{"cell_type":"code","execution_count":55,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uLx0qe2cGTED","executionInfo":{"status":"ok","timestamp":1757365064354,"user_tz":180,"elapsed":1217,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"e08c5772-c12f-470b-8498-609c584bb64c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","ruta_archivos = '/content/drive/MyDrive/bootcamp_ciencia_de_datos/evaluaciones/archivos/'"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","import plotly.express as px\n","\n","import statsmodels.api as sm\n","from scipy.stats import shapiro\n","\n","from sklearn.preprocessing import StandardScaler, MinMaxScaler, PolynomialFeatures\n","from sklearn.base import BaseEstimator, TransformerMixin\n","from sklearn.pipeline import Pipeline\n","from sklearn.compose import ColumnTransformer, TransformedTargetRegressor\n","\n","from sklearn.model_selection import cross_val_score, cross_val_predict, cross_validate, GridSearchCV, KFold, train_test_split, StratifiedKFold\n","\n","from sklearn.metrics import mean_absolute_error, r2_score, root_mean_squared_error, mean_squared_error, accuracy_score, precision_score, recall_score, roc_auc_score, confusion_matrix\n","\n","from sklearn.linear_model import LinearRegression, Ridge, Lasso\n","from sklearn.tree import DecisionTreeRegressor, DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.svm import SVC\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","import itertools\n","\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.max_rows', None)\n","pd.set_option('display.max_colwidth', None)"],"metadata":{"id":"mFc3Vs0af2C9","executionInfo":{"status":"ok","timestamp":1757365064356,"user_tz":180,"elapsed":15,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":56,"outputs":[]},{"cell_type":"markdown","source":["##**1. Carga y exploración de datos (1 punto)**\n","- Carga el dataset proporcionado, que contiene información sobre temperatura media,\n","cambio en las precipitaciones, frecuencia de sequías y producción agrícola en\n","distintos países.\n","- Analiza la distribución de las variables y detecta posibles valores atípicos o\n","tendencias."],"metadata":{"id":"RtSysInZGxKg"}},{"cell_type":"code","source":["# cargar el dataset\n","\n","df = pd.read_csv(ruta_archivos + 'cambio_climatico_agricultura.csv', index_col='País')\n","print(f'Dimensión del dataset: {df.shape}\\n')\n","\n","target = 'Producción_alimentos'\n","var_disc = ['Frecuencia_sequías']\n","var_cont = ['Temperatura_promedio', 'Cambio_lluvias']\n","var_num  = var_cont + var_disc\n","\n","print('atributos numéricos:', var_num)\n","print('   - atributos discretos:', var_disc)\n","print('   - atributos continuos:', var_cont)\n","\n","print('\\n')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"V47dJM6JIWPB","executionInfo":{"status":"ok","timestamp":1757365064588,"user_tz":180,"elapsed":243,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"95c412f9-915c-4012-8841-d78dae4b9d6b"},"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["Dimensión del dataset: (23, 4)\n","\n","atributos numéricos: ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']\n","   - atributos discretos: ['Frecuencia_sequías']\n","   - atributos continuos: ['Temperatura_promedio', 'Cambio_lluvias']\n","\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["           Temperatura_promedio  Cambio_lluvias  Frecuencia_sequías  \\\n","País                                                                  \n","Alemania                   10.5              -5                   2   \n","Argentina                  17.8             -10                   5   \n","Australia                  22.3             -15                   8   \n","Brasil                     25.1              -8                   6   \n","Canadá                      6.2              -2                   1   \n","\n","           Producción_alimentos  \n","País                             \n","Alemania                 950000  \n","Argentina                650000  \n","Australia                400000  \n","Brasil                   900000  \n","Canadá                   850000  "],"text/html":["\n","  <div id=\"df-abea68d2-3a7a-42e2-b02c-8df0f9f122b1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperatura_promedio</th>\n","      <th>Cambio_lluvias</th>\n","      <th>Frecuencia_sequías</th>\n","      <th>Producción_alimentos</th>\n","    </tr>\n","    <tr>\n","      <th>País</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Alemania</th>\n","      <td>10.5</td>\n","      <td>-5</td>\n","      <td>2</td>\n","      <td>950000</td>\n","    </tr>\n","    <tr>\n","      <th>Argentina</th>\n","      <td>17.8</td>\n","      <td>-10</td>\n","      <td>5</td>\n","      <td>650000</td>\n","    </tr>\n","    <tr>\n","      <th>Australia</th>\n","      <td>22.3</td>\n","      <td>-15</td>\n","      <td>8</td>\n","      <td>400000</td>\n","    </tr>\n","    <tr>\n","      <th>Brasil</th>\n","      <td>25.1</td>\n","      <td>-8</td>\n","      <td>6</td>\n","      <td>900000</td>\n","    </tr>\n","    <tr>\n","      <th>Canadá</th>\n","      <td>6.2</td>\n","      <td>-2</td>\n","      <td>1</td>\n","      <td>850000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abea68d2-3a7a-42e2-b02c-8df0f9f122b1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-abea68d2-3a7a-42e2-b02c-8df0f9f122b1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-abea68d2-3a7a-42e2-b02c-8df0f9f122b1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-803ee23f-de57-481a-9da9-51bf859c27e8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-803ee23f-de57-481a-9da9-51bf859c27e8')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-803ee23f-de57-481a-9da9-51bf859c27e8 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 23,\n  \"fields\": [\n    {\n      \"column\": \"Pa\\u00eds\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"China\",\n          \"Italia\",\n          \"Alemania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperatura_promedio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.692255567817194,\n        \"min\": 4.6,\n        \"max\": 28.0,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          14.7,\n          13.4,\n          10.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cambio_lluvias\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": -15,\n        \"max\": -1,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          -7,\n          -11,\n          -5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frecuencia_sequ\\u00edas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          4,\n          5,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Producci\\u00f3n_alimentos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 241066,\n        \"min\": 300000,\n        \"max\": 1200000,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          950000,\n          370000,\n          550000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["###**EDA**"],"metadata":{"id":"blazUksLSEwq"}},{"cell_type":"code","source":["# detectar duplicados\n","print(f'Número de duplicados: {df.duplicated().sum()}')\n","\n","# detectar missing values\n","print(f'Número de missing values: {df.isna().sum().sum()}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XwloZ0sYJ9Kd","executionInfo":{"status":"ok","timestamp":1757365064690,"user_tz":180,"elapsed":48,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"c55052e7-b6ea-4154-a7f4-16dbd8937b64"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["Número de duplicados: 0\n","Número de missing values: 0\n"]}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bxsYRKEtpxyZ","executionInfo":{"status":"ok","timestamp":1757365064709,"user_tz":180,"elapsed":17,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"eccd9390-70a2-41a4-be2d-38227330b793"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 23 entries, Alemania to Nueva Zelanda\n","Data columns (total 4 columns):\n"," #   Column                Non-Null Count  Dtype  \n","---  ------                --------------  -----  \n"," 0   Temperatura_promedio  23 non-null     float64\n"," 1   Cambio_lluvias        23 non-null     int64  \n"," 2   Frecuencia_sequías    23 non-null     int64  \n"," 3   Producción_alimentos  23 non-null     int64  \n","dtypes: float64(1), int64(3)\n","memory usage: 920.0+ bytes\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":301},"id":"JWr1rSm9rf0A","executionInfo":{"status":"ok","timestamp":1757365064768,"user_tz":180,"elapsed":54,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"c37b8fc1-2d35-44a1-9c53-9c6f4b8feaf4"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Temperatura_promedio  Cambio_lluvias  Frecuencia_sequías  \\\n","count             23.000000       23.000000           23.000000   \n","mean              16.291304       -7.782609            4.347826   \n","std                6.692256        4.055933            2.604344   \n","min                4.600000      -15.000000            1.000000   \n","25%               12.150000      -11.000000            2.000000   \n","50%               15.400000       -8.000000            4.000000   \n","75%               21.400000       -4.500000            6.500000   \n","max               28.000000       -1.000000            9.000000   \n","\n","       Producción_alimentos  \n","count          2.300000e+01  \n","mean           7.030435e+05  \n","std            2.410665e+05  \n","min            3.000000e+05  \n","25%            5.250000e+05  \n","50%            7.000000e+05  \n","75%            8.950000e+05  \n","max            1.200000e+06  "],"text/html":["\n","  <div id=\"df-f30dae4f-f206-4f9d-84c3-fa766cff94f3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperatura_promedio</th>\n","      <th>Cambio_lluvias</th>\n","      <th>Frecuencia_sequías</th>\n","      <th>Producción_alimentos</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>23.000000</td>\n","      <td>23.000000</td>\n","      <td>23.000000</td>\n","      <td>2.300000e+01</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>16.291304</td>\n","      <td>-7.782609</td>\n","      <td>4.347826</td>\n","      <td>7.030435e+05</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>6.692256</td>\n","      <td>4.055933</td>\n","      <td>2.604344</td>\n","      <td>2.410665e+05</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>4.600000</td>\n","      <td>-15.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000e+05</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>12.150000</td>\n","      <td>-11.000000</td>\n","      <td>2.000000</td>\n","      <td>5.250000e+05</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>15.400000</td>\n","      <td>-8.000000</td>\n","      <td>4.000000</td>\n","      <td>7.000000e+05</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>21.400000</td>\n","      <td>-4.500000</td>\n","      <td>6.500000</td>\n","      <td>8.950000e+05</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>28.000000</td>\n","      <td>-1.000000</td>\n","      <td>9.000000</td>\n","      <td>1.200000e+06</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f30dae4f-f206-4f9d-84c3-fa766cff94f3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f30dae4f-f206-4f9d-84c3-fa766cff94f3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f30dae4f-f206-4f9d-84c3-fa766cff94f3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e3f91957-5561-4996-8c0b-1b4b1ad0f461\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e3f91957-5561-4996-8c0b-1b4b1ad0f461')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e3f91957-5561-4996-8c0b-1b4b1ad0f461 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Temperatura_promedio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.053342419179181,\n        \"min\": 4.6,\n        \"max\": 28.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          16.29130434782609,\n          15.4,\n          23.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cambio_lluvias\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.8691062969784,\n        \"min\": -15.0,\n        \"max\": 23.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -7.782608695652174,\n          -8.0,\n          23.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frecuencia_sequ\\u00edas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.121721596064174,\n        \"min\": 1.0,\n        \"max\": 23.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.3478260869565215,\n          4.0,\n          23.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Producci\\u00f3n_alimentos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 386397.1825774789,\n        \"min\": 23.0,\n        \"max\": 1200000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          703043.4782608695,\n          700000.0,\n          23.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["Revisemos la distribución de las variables y analicemos si hay outliers"],"metadata":{"id":"Zbqs7AHAhSyT"}},{"cell_type":"code","source":["# vamos a revisar normalidad\n","# test de hipótesis con un nivel de significancia del 5%\n","\n","alpha = 0.05\n","pvalues = {}\n","print(f'Test de normalidad de Shapiro-Wilk con un nivel de significancia del {alpha:.0%}')\n","for col in var_num+[target]:\n","    _, pvalues[col] = shapiro(df[col])\n","    mensaje = 'no es normal' if pvalues[col] < alpha else 'no se descarta que sea normal'\n","    print(f'  - \"{col}\": p_value = {pvalues[col]:.2f} --> {mensaje}')\n","print('\\n\\n')\n","\n","fig, axs = plt.subplots(3, 4, figsize=(14, 9))\n","axs = axs.ravel()\n","\n","for i, col in enumerate(var_num+[target]):\n","    sns.histplot(df[col], kde=True, ax=axs[i], bins='sturges')\n","    axs[i].set_title(col, weight='bold', fontsize=12)\n","    axs[i].set_xlabel('')\n","\n","for i, col in enumerate(var_num+[target]):\n","    j = i + len(var_num+[target])\n","    sm.qqplot(df[col], ax=axs[j], fit=True, line=\"45\")\n","    axs[j].set_title(f'{col}\\n(p-value: {pvalues[col]:.3f})', weight='bold', fontsize=12)\n","    axs[j].set_xlabel('')\n","\n","for i, col in enumerate(var_num+[target]):\n","    j = i + len(var_num+[target])*2\n","    sns.boxplot(data=df, x=col, ax=axs[j], width=0.3)\n","    axs[j].set_title(col, weight='bold', fontsize=12)\n","    axs[j].set_xlabel('')\n","    axs[j].set_yticks([])\n","\n","plt.suptitle('Distribución de las variables y el target', weight='bold', fontsize=16)\n","plt.subplots_adjust(hspace=0.5)\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"O3BNAd-SLYfO","executionInfo":{"status":"ok","timestamp":1757365067465,"user_tz":180,"elapsed":2693,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"d6ccc834-da25-4bb6-cad2-4c9f97197314"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["Test de normalidad de Shapiro-Wilk con un nivel de significancia del 5%\n","  - \"Temperatura_promedio\": p_value = 0.79 --> no se descarta que sea normal\n","  - \"Cambio_lluvias\": p_value = 0.58 --> no se descarta que sea normal\n","  - \"Frecuencia_sequías\": p_value = 0.06 --> no se descarta que sea normal\n","  - \"Producción_alimentos\": p_value = 0.82 --> no se descarta que sea normal\n","\n","\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x900 with 12 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Obs: En estricto rigor no debí hacer un qqplot para la variable frecuencia sequías porque es discreta (no quise dejar un espacio vacío en el gráfico). Sin embargo, curiosamente pasó el test de normalidad."],"metadata":{"id":"a8X6AePU5i0B"}},{"cell_type":"markdown","source":["De acuerdo al método de Tukey (IQR) para detección de outliers, no se visualizan outliers univariados en los boxplots."],"metadata":{"id":"YlJjmKKX2zSn"}},{"cell_type":"code","source":["# veamos las relaciones entre las variables y el target\n","\n","sns.pairplot(df, kind='reg', diag_kind='hist')\n","plt.suptitle('Relación entre las variables y el target', weight='bold', fontsize=16, y=1.02)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"fnsDwe-YJ5Zy","executionInfo":{"status":"ok","timestamp":1757365075022,"user_tz":180,"elapsed":7522,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"da44f2e5-de2d-442e-c9b4-c5c337b74b4f"},"execution_count":62,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 20 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# revisar la correlación de Pearson\n","fig = plt.figure(figsize=(5, 2))\n","corr = df.corr(method='pearson')\n","sns.heatmap(corr, annot=True, cmap='coolwarm', vmax=1., vmin=-1., fmt='.2f')\n","plt.title('Correlación de Pearson', weight='bold')\n","plt.xticks(rotation=30, ha='right')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":316},"id":"iOtaPmskbaAB","executionInfo":{"status":"ok","timestamp":1757365075295,"user_tz":180,"elapsed":265,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"a12b42ab-9472-4ad0-baf1-fbabe0c22e39"},"execution_count":63,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 500x200 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["def interpreta_correlacion(x):\n","    abs_x = abs(x)\n","    signo = 'negativa' if np.sign(x) == -1 else 'positiva'\n","    if 0.8 <= abs_x <= 1:\n","        return f'Correlación {signo} fuerte'\n","    if 0.5 <= abs_x < 0.8:\n","        return f'Correlación {signo} moderada'\n","    if 0.2 <= abs_x < 0.5:\n","        return f'Correlación {signo} débil'\n","    return f'Correlación {signo} débil o inexistente'\n","\n","\n","correlaciones_sorted = corr.unstack().reset_index().sort_values(0, ascending=False).reset_index(drop=True).loc[len(corr):,:].reset_index(drop=True)[::2]\n","correlaciones_sorted.columns = ['Col1', 'Col2', 'Correlación']\n","correlaciones_sorted = correlaciones_sorted.sort_values('Correlación', key=abs, ascending=False).reset_index(drop=True)\n","correlaciones_sorted['Interpretación'] = correlaciones_sorted['Correlación'].map(interpreta_correlacion)\n","correlaciones_sorted"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":238},"id":"Kbc_OJng6MjE","executionInfo":{"status":"ok","timestamp":1757365075351,"user_tz":180,"elapsed":46,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"4996cde0-6746-4016-ed0e-9c0e5eb7a01c"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   Col1                  Col2  Correlación  \\\n","0        Cambio_lluvias    Frecuencia_sequías    -0.893936   \n","1  Temperatura_promedio    Frecuencia_sequías     0.827176   \n","2  Temperatura_promedio        Cambio_lluvias    -0.809602   \n","3  Producción_alimentos    Frecuencia_sequías    -0.719977   \n","4  Producción_alimentos        Cambio_lluvias     0.694767   \n","5  Producción_alimentos  Temperatura_promedio    -0.501925   \n","\n","                  Interpretación  \n","0    Correlación negativa fuerte  \n","1    Correlación positiva fuerte  \n","2    Correlación negativa fuerte  \n","3  Correlación negativa moderada  \n","4  Correlación positiva moderada  \n","5  Correlación negativa moderada  "],"text/html":["\n","  <div id=\"df-b92a30ca-eb65-4365-8a08-d28418719772\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Col1</th>\n","      <th>Col2</th>\n","      <th>Correlación</th>\n","      <th>Interpretación</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Cambio_lluvias</td>\n","      <td>Frecuencia_sequías</td>\n","      <td>-0.893936</td>\n","      <td>Correlación negativa fuerte</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Temperatura_promedio</td>\n","      <td>Frecuencia_sequías</td>\n","      <td>0.827176</td>\n","      <td>Correlación positiva fuerte</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Temperatura_promedio</td>\n","      <td>Cambio_lluvias</td>\n","      <td>-0.809602</td>\n","      <td>Correlación negativa fuerte</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Producción_alimentos</td>\n","      <td>Frecuencia_sequías</td>\n","      <td>-0.719977</td>\n","      <td>Correlación negativa moderada</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Producción_alimentos</td>\n","      <td>Cambio_lluvias</td>\n","      <td>0.694767</td>\n","      <td>Correlación positiva moderada</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Producción_alimentos</td>\n","      <td>Temperatura_promedio</td>\n","      <td>-0.501925</td>\n","      <td>Correlación negativa moderada</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b92a30ca-eb65-4365-8a08-d28418719772')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b92a30ca-eb65-4365-8a08-d28418719772 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b92a30ca-eb65-4365-8a08-d28418719772');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b07e7f37-964e-485b-be06-63f1f622a231\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b07e7f37-964e-485b-be06-63f1f622a231')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b07e7f37-964e-485b-be06-63f1f622a231 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_e32c3836-40ba-41a5-ae9e-0588e9b51f29\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('correlaciones_sorted')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e32c3836-40ba-41a5-ae9e-0588e9b51f29 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('correlaciones_sorted');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"correlaciones_sorted","summary":"{\n  \"name\": \"correlaciones_sorted\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"Col1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Cambio_lluvias\",\n          \"Temperatura_promedio\",\n          \"Producci\\u00f3n_alimentos\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Col2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Frecuencia_sequ\\u00edas\",\n          \"Cambio_lluvias\",\n          \"Temperatura_promedio\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Correlaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7827507051955164,\n        \"min\": -0.8939360881091512,\n        \"max\": 0.8271760038371547,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          -0.8939360881091512,\n          0.8271760038371547,\n          -0.5019251745884321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interpretaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Correlaci\\u00f3n positiva fuerte\",\n          \"Correlaci\\u00f3n positiva moderada\",\n          \"Correlaci\\u00f3n negativa fuerte\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":64}]},{"cell_type":"markdown","source":["**Análisis multivariado: Detección de puntos atípicos y/o de influyentes**\n","\n","Luego de una ardua investigación para buscar métodos que me ayudasen a detectar puntos anómalos, finalmente decidí que utilizaré el método combinado de distancia de Cook y apalancamiento por su rigor estadístico. Este método identifica tanto puntos de alto apalancamiento (que potencialmente distorsionan el modelo) como observaciones influyentes (que afectan significativamente los parámetros de regresión). La combinación de ambas métricas permite detectar outliers que impactan directamente las correlaciones lineales, optimizando la fuerza predictiva del modelo al eliminar selectivamente solo las observaciones que genuinamente alteran los resultados, preservando los datos válidos que mantienen el patrón subyacente.\n","\n","Importante mencionar que el análisis para eliminar puntos influyentes será aplicado sobre las variables originales del dataset, lo cual no es antojadizo, sino que es el resultado de dos experimentos efectuados:\n","- el primero, con las variables originales y regresión con validación cruzada que arrojó los mejores resultados, y\n","- el segundo, con las variables originales más las de segundo orden, con peores resultados en validación cruzada, que no reproduzco en este notebook para que no sea tan extenso.\n","\n","Importante señalar que de no eliminar los puntos influyentes, los resultados en validación cruzada son peores que en el primer experimento.\n","\n","<br>\n","\n","Miremos prinero una visualización 3D."],"metadata":{"id":"kZAVjnfKhiXr"}},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"57d79924","executionInfo":{"status":"ok","timestamp":1757365075419,"user_tz":180,"elapsed":64,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"989c149f-4d8d-4a4c-8f70-74514e28746e"},"source":["fig = px.scatter_3d(df,\n","                    x='Temperatura_promedio',\n","                    y='Cambio_lluvias',\n","                    z='Frecuencia_sequías',\n","                    #size='Producción_alimentos',\n","                    color='Producción_alimentos',\n","                    color_continuous_scale='viridis_r', # Added '_r' to reverse the colormap\n","                    hover_name=df.index,\n","                    title='3D Scatter Plot de Cambio Climático vs Producción Agrícola',\n","                    height=1000, # ajustar alto\n","                    width=1000)  # ajustar ancho\n","\n","fig.show()"],"execution_count":65,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.35.2.min.js\"></script>                <div id=\"760586c8-5143-4c7b-bb8d-0686550e5ab5\" class=\"plotly-graph-div\" style=\"height:1000px; width:1000px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"760586c8-5143-4c7b-bb8d-0686550e5ab5\")) {                    Plotly.newPlot(                        \"760586c8-5143-4c7b-bb8d-0686550e5ab5\",                        [{\"hovertemplate\":\"\\u003cb\\u003e%{hovertext}\\u003c\\u002fb\\u003e\\u003cbr\\u003e\\u003cbr\\u003eTemperatura_promedio=%{x}\\u003cbr\\u003eCambio_lluvias=%{y}\\u003cbr\\u003eFrecuencia_sequías=%{z}\\u003cbr\\u003eProducción_alimentos=%{marker.color}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"hovertext\":[\"Alemania\",\"Argentina\",\"Australia\",\"Brasil\",\"Canadá\",\"Chile\",\"España\",\"Estados Unidos\",\"Francia\",\"Italia\",\"Japón\",\"México\",\"Reino Unido\",\"Rusia\",\"Sudáfrica\",\"China\",\"India\",\"Noruega\",\"Perú\",\"Tailandia\",\"Egipto\",\"Corea del Sur\",\"Nueva Zelanda\"],\"legendgroup\":\"\",\"marker\":{\"color\":[950000,650000,400000,900000,850000,500000,600000,1200000,980000,700000,720000,450000,820000,900000,300000,1100000,700000,600000,550000,480000,370000,890000,560000],\"coloraxis\":\"coloraxis\",\"symbol\":\"circle\"},\"mode\":\"markers\",\"name\":\"\",\"scene\":\"scene\",\"showlegend\":false,\"x\":[10.5,17.8,22.3,25.1,6.2,15.4,18.2,12.8,11.5,13.4,16.1,22.9,9.7,5.4,20.5,14.7,26.9,4.6,20.1,28.0,23.5,13.8,15.3],\"y\":[-5,-10,-15,-8,-2,-12,-9,-4,-6,-7,-3,-11,-4,-1,-13,-6,-12,-3,-11,-14,-8,-5,-10],\"z\":[2,5,8,6,1,7,6,3,2,4,1,7,2,1,9,3,6,1,5,7,8,2,4],\"type\":\"scatter3d\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"scene\":{\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"xaxis\":{\"title\":{\"text\":\"Temperatura_promedio\"}},\"yaxis\":{\"title\":{\"text\":\"Cambio_lluvias\"}},\"zaxis\":{\"title\":{\"text\":\"Frecuencia_sequías\"}}},\"coloraxis\":{\"colorbar\":{\"title\":{\"text\":\"Producción_alimentos\"}},\"colorscale\":[[0.0,\"#fde725\"],[0.1111111111111111,\"#b5de2b\"],[0.2222222222222222,\"#6ece58\"],[0.3333333333333333,\"#35b779\"],[0.4444444444444444,\"#1f9e89\"],[0.5555555555555556,\"#26828e\"],[0.6666666666666666,\"#31688e\"],[0.7777777777777778,\"#3e4989\"],[0.8888888888888888,\"#482878\"],[1.0,\"#440154\"]]},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"3D Scatter Plot de Cambio Climático vs Producción Agrícola\"},\"height\":1000,\"width\":1000},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('760586c8-5143-4c7b-bb8d-0686550e5ab5');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["Con la simple observación vemos que:\n","- hay un degradado de colores en la diagonal -de mayor a menor nivel de producción (y viceversa)-, según el ángulo de observación.\n","- hay puntos claros en zonas de vecinos más oscuros (y viceversa), lo que indica una probable anomalía.\n","\n","Vamos a tratar de identificar esos puntos."],"metadata":{"id":"jMTKO_x4QDfK"}},{"cell_type":"code","source":["# primero, setear y entrenar el modelo lineal\n","model = sm.formula.ols(data=df, formula='Producción_alimentos ~  Temperatura_promedio + Cambio_lluvias + Frecuencia_sequías').fit()\n","\n","# Calcular estadísticas de apalancamiento\n","leverage = model.get_influence().hat_matrix_diag\n","\n","# Identificar puntos de apalancamiento leverage\n","# Umbral común: 2-3 veces la media del leverage\n","umbral_leverage = 2 * np.mean(leverage)\n","punto_leverage = np.where(leverage > umbral_leverage)[0]\n","\n","print('\\nPuntos de Alto Apalancamiento (leverage):')\n","print(f\"  - Umbral de Apalancamiento: {umbral_leverage:.4f}\")\n","print(f'  - Paises con alto leverage: {df.iloc[punto_leverage].index.tolist()}')\n","\n","# Calcular la distancia de Cook\n","distancia_cook = model.get_influence().cooks_distance[0]\n","\n","# Identificar observaciones influyentes basadas en la distancia de Cook\n","# Umbral común: 4/n o 1\n","umbral_cook = 4 / len(df)\n","observaciones_influyentes = np.where(distancia_cook > umbral_cook)[0]\n","\n","print('\\nObservaciones Influyentes (Distancia de Cook):')\n","print(f\"  - Umbral Cook: {umbral_cook:.4f}\")\n","print(f'  - Paises influyentes: {df.iloc[observaciones_influyentes].index.tolist()}')\n","\n","# Añadir al DataFrame para análisis\n","df_aux = df.copy()\n","df_aux['leverage'] = leverage\n","df_aux['distancia_cook'] = distancia_cook\n","df_aux['leverage_alto'] = df.index.isin(df.iloc[punto_leverage].index)\n","df_aux['influencia_cook_alta'] = df.index.isin(df.iloc[observaciones_influyentes].index)\n","\n","k = len(var_num)  # Número de predictores\n","n = len(df)      # Número de observaciones\n","\n","# Umbral de leverage mejorado (común en literatura)\n","umbral_leverage_mejorado = 2 * (k + 1) / n\n","punto_leverage_mejorado = np.where(leverage > umbral_leverage_mejorado)[0]\n","\n","print(\"\\nPuntos de Alto Apalancamiento (leverage mejorado):\")\n","print(f\"  - Umbral de leverage mejorado: {umbral_leverage_mejorado:.4f}\")\n","print(f'  - Paises con alto leverage mejorado: {df.iloc[punto_leverage_mejorado].index.tolist()}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5XGAMPDhQCpL","executionInfo":{"status":"ok","timestamp":1757365075537,"user_tz":180,"elapsed":64,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"e2817210-8bb7-4003-c233-13f4bca68628"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Puntos de Alto Apalancamiento (leverage):\n","  - Umbral de Apalancamiento: 0.3478\n","  - Paises con alto leverage: ['Egipto']\n","\n","Observaciones Influyentes (Distancia de Cook):\n","  - Umbral Cook: 0.1739\n","  - Paises influyentes: ['Japón', 'Noruega', 'Egipto']\n","\n","Puntos de Alto Apalancamiento (leverage mejorado):\n","  - Umbral de leverage mejorado: 0.3478\n","  - Paises con alto leverage mejorado: ['Egipto']\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(15, 5))\n","\n","# Leverage vs Cook's Distance\n","plt.subplot(1, 3, 1)\n","condicion = (df_aux['leverage_alto'] | df_aux['influencia_cook_alta'])\n","leverage1 = df_aux.loc[condicion, ['leverage']]\n","distancia_cook1 = df_aux.loc[condicion, ['distancia_cook']]\n","leverage2 = df_aux.loc[~condicion, ['leverage']]\n","distancia_cook2 = df_aux.loc[~condicion, ['distancia_cook']]\n","plt.scatter(leverage1, distancia_cook1, c='r', s=50, label='Influyente')\n","plt.scatter(leverage2, distancia_cook2, c='b', alpha=0.7, s=50, label='Normal')\n","\n","plt.axhline(y=umbral_cook, color='red', linestyle='--', label=f'Umbral de Cook: {umbral_cook:.3f}')\n","plt.axvline(x=2*np.mean(leverage), color='green', linestyle='--', label=f'Umbral de Leverage: {2*np.mean(leverage):.3f}')\n","plt.xlabel('Leverage')\n","plt.ylabel('Distancia de Cook')\n","plt.title('Leverage vs Distancia de Cook')\n","plt.legend()\n","\n","# Puntos influyentes\n","plt.subplot(1, 3, 2)\n","plt.scatter(df['Temperatura_promedio'], df['Producción_alimentos'], alpha=0.5, label='Normal')\n","paises_influyentes = df.iloc[observaciones_influyentes]\n","plt.scatter(paises_influyentes['Temperatura_promedio'],\n","           paises_influyentes['Producción_alimentos'],\n","           color='red', s=50, label='Influyente (Cook)')\n","plt.xlabel('Temperatura')\n","plt.ylabel('Producción')\n","plt.title('Puntos Influyentes')\n","plt.legend()\n","\n","# Distancia de Cook por país\n","plt.subplot(1, 3, 3)\n","x_pos = np.arange(len(df))\n","plt.bar(x_pos, distancia_cook, alpha=0.7, label='Distancias')\n","plt.axhline(y=umbral_cook, color='red', linestyle='--', label='Umbral')\n","plt.ylabel('Distancia de Cook')\n","plt.title('Distancia de Cook por País')\n","plt.xticks(x_pos, df.index, rotation=90)#, ha='right')\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":507},"id":"QbjQz-fjYvXa","executionInfo":{"status":"ok","timestamp":1757365077867,"user_tz":180,"elapsed":2341,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"7a78a35a-2b9c-428d-ab9c-5d2c1e234f84"},"execution_count":67,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x500 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# verificación de la mejora en la correlación con la eliminación de los puntos influyentes identificados\n","\n","paises_a_eliminar = df.iloc[observaciones_influyentes].index.tolist()\n","print(f'Países a eliminar = {paises_a_eliminar}\\n')\n","\n","df_limpio = df.copy()\n","df_limpio = df[~df.index.isin(paises_a_eliminar)]\n","\n","# Calcular correlaciones antes y después\n","corr_original = df.corr()\n","corr_limpio = df_limpio.corr()\n","\n","print(f'Mejora en la correlación al eliminar: {paises_a_eliminar}\\n')\n","\n","print(\"CORRELACIONES con Producción_alimentos ANTES/DESPUÉS de la eliminación:\")\n","compara_corr = pd.concat([corr_original[:-1][target], corr_limpio[:-1][target]], axis=1)\n","compara_corr.columns = ['corr_original', 'corr_limpio']\n","compara_corr['¿ mejoró la correlación?'] = abs(compara_corr['corr_original']) < abs(compara_corr['corr_limpio']) # mejora en valor absoluto\n","compara_corr"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":231},"id":"mQB89fBJTKsM","executionInfo":{"status":"ok","timestamp":1757365078114,"user_tz":180,"elapsed":236,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"76f90016-a775-4dbd-b7eb-cfb2553c8946"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["Países a eliminar = ['Japón', 'Noruega', 'Egipto']\n","\n","Mejora en la correlación al eliminar: ['Japón', 'Noruega', 'Egipto']\n","\n","CORRELACIONES con Producción_alimentos ANTES/DESPUÉS de la eliminación:\n"]},{"output_type":"execute_result","data":{"text/plain":["                      corr_original  corr_limpio  ¿ mejoró la correlación?\n","Temperatura_promedio      -0.501925    -0.553072                      True\n","Cambio_lluvias             0.694767     0.818313                      True\n","Frecuencia_sequías        -0.719977    -0.797257                      True"],"text/html":["\n","  <div id=\"df-e7347b85-aa88-4ed4-a478-c5d9db865fd3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>corr_original</th>\n","      <th>corr_limpio</th>\n","      <th>¿ mejoró la correlación?</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Temperatura_promedio</th>\n","      <td>-0.501925</td>\n","      <td>-0.553072</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>Cambio_lluvias</th>\n","      <td>0.694767</td>\n","      <td>0.818313</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>Frecuencia_sequías</th>\n","      <td>-0.719977</td>\n","      <td>-0.797257</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7347b85-aa88-4ed4-a478-c5d9db865fd3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e7347b85-aa88-4ed4-a478-c5d9db865fd3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e7347b85-aa88-4ed4-a478-c5d9db865fd3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-5c8d4689-fb9b-4aa6-99ec-4e0c45df7b60\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c8d4689-fb9b-4aa6-99ec-4e0c45df7b60')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-5c8d4689-fb9b-4aa6-99ec-4e0c45df7b60 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_885fbe4a-325b-4e3a-b76b-dd99c189cfcb\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('compara_corr')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_885fbe4a-325b-4e3a-b76b-dd99c189cfcb button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('compara_corr');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"compara_corr","summary":"{\n  \"name\": \"compara_corr\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"corr_original\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7616998081196314,\n        \"min\": -0.7199766867454701,\n        \"max\": 0.694767242065194,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          -0.5019251745884321,\n          0.694767242065194,\n          -0.7199766867454701\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"corr_limpio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8708606000598273,\n        \"min\": -0.7972570755776932,\n        \"max\": 0.8183130568349631,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          -0.5530715255633164,\n          0.8183130568349631,\n          -0.7972570755776932\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u00bf mejor\\u00f3 la correlaci\\u00f3n?\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["# ahora solo resta revisar si hay significancia estadística para que valga la pena eliminar los países influyentes\n","\n","# primero, calculamos las regresiones lineales para el dataset original y el dataset limpio (sin los outliers)\n","\n","# MODELO COMPLETO (con todos los datos originales)\n","modelo_completo = sm.formula.ols(\n","    formula='Producción_alimentos ~ Temperatura_promedio + Cambio_lluvias + Frecuencia_sequías',\n","    data=df\n",").fit()\n","\n","print(\"=\"*60)\n","print(\"MODELO COMPLETO (CON PAÍSES INFLUYENTES)\")\n","print(\"=\"*60)\n","print(modelo_completo.summary())\n","\n","# MODELO LIMPIO (sin puntos de Cook) ['Japón', 'Noruega', 'Egipto'])\n","modelo_limpio = sm.formula.ols(\n","    formula='Producción_alimentos ~ Temperatura_promedio + Cambio_lluvias + Frecuencia_sequías',\n","    data=df_limpio\n",").fit()\n","\n","print(\"\\n\" + \"=\"*60)\n","print(\"MODELO LIMPIO (SIN PAÍSES INFLUYENTES)\")\n","print(\"=\"*60)\n","print(modelo_limpio.summary())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J-NFVU9PTQ4b","executionInfo":{"status":"ok","timestamp":1757365078307,"user_tz":180,"elapsed":197,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"74654f62-3560-4512-9b73-7dcaa26eb0b5"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["============================================================\n","MODELO COMPLETO (CON PAÍSES INFLUYENTES)\n","============================================================\n","                             OLS Regression Results                             \n","================================================================================\n","Dep. Variable:     Producción_alimentos   R-squared:                       0.574\n","Model:                              OLS   Adj. R-squared:                  0.507\n","Method:                   Least Squares   F-statistic:                     8.536\n","Date:                  Mon, 08 Sep 2025   Prob (F-statistic):           0.000853\n","Time:                          20:57:58   Log-Likelihood:                -307.34\n","No. Observations:                    23   AIC:                             622.7\n","Df Residuals:                        19   BIC:                             627.2\n","Df Model:                             3                                         \n","Covariance Type:              nonrobust                                         \n","========================================================================================\n","                           coef    std err          t      P>|t|      [0.025      0.975]\n","----------------------------------------------------------------------------------------\n","Intercept             9.355e+05   9.86e+04      9.491      0.000    7.29e+05    1.14e+06\n","Temperatura_promedio  1.379e+04   9993.240      1.380      0.184   -7128.455    3.47e+04\n","Cambio_lluvias        2.308e+04   2.07e+04      1.116      0.278   -2.02e+04    6.64e+04\n","Frecuencia_sequías   -6.382e+04   3.36e+04     -1.898      0.073   -1.34e+05    6573.386\n","==============================================================================\n","Omnibus:                        1.719   Durbin-Watson:                   1.540\n","Prob(Omnibus):                  0.423   Jarque-Bera (JB):                0.644\n","Skew:                           0.362   Prob(JB):                        0.725\n","Kurtosis:                       3.382   Cond. No.                         56.6\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n","\n","============================================================\n","MODELO LIMPIO (SIN PAÍSES INFLUYENTES)\n","============================================================\n","                             OLS Regression Results                             \n","================================================================================\n","Dep. Variable:     Producción_alimentos   R-squared:                       0.774\n","Model:                              OLS   Adj. R-squared:                  0.731\n","Method:                   Least Squares   F-statistic:                     18.25\n","Date:                  Mon, 08 Sep 2025   Prob (F-statistic):           2.04e-05\n","Time:                          20:57:58   Log-Likelihood:                -261.24\n","No. Observations:                    20   AIC:                             530.5\n","Df Residuals:                        16   BIC:                             534.5\n","Df Model:                             3                                         \n","Covariance Type:              nonrobust                                         \n","========================================================================================\n","                           coef    std err          t      P>|t|      [0.025      0.975]\n","----------------------------------------------------------------------------------------\n","Intercept             1.009e+06   8.15e+04     12.369      0.000    8.36e+05    1.18e+06\n","Temperatura_promedio  2.262e+04   8827.000      2.562      0.021    3904.715    4.13e+04\n","Cambio_lluvias        5.311e+04   2.03e+04      2.611      0.019    9990.583    9.62e+04\n","Frecuencia_sequías   -4.891e+04   3.24e+04     -1.508      0.151   -1.18e+05    1.98e+04\n","==============================================================================\n","Omnibus:                        2.708   Durbin-Watson:                   1.669\n","Prob(Omnibus):                  0.258   Jarque-Bera (JB):                2.004\n","Skew:                           0.763   Prob(JB):                        0.367\n","Kurtosis:                       2.722   Cond. No.                         58.9\n","==============================================================================\n","\n","Notes:\n","[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"]}]},{"cell_type":"code","source":["# ahora seguimos con la comparación estadística formal entre ambos modelos\n","print(\"=\"*60)\n","print(\"COMPARACIÓN ESTADÍSTICA ENTRE MODELOS\")\n","print(\"=\"*60)\n","\n","# Comparación de AIC/BIC\n","print(f\"\\nCriterios de información:\")\n","print(f\"AIC - Completo: {modelo_completo.aic:.2f}, Limpio: {modelo_limpio.aic:.2f}\")\n","print(f\"BIC - Completo: {modelo_completo.bic:.2f}, Limpio: {modelo_limpio.bic:.2f}\")\n","print(f\"¿Mejor modelo criterio AIC? {'LIMPIO' if modelo_limpio.aic < modelo_completo.aic else 'COMPLETO'}\")\n","print(f\"¿Mejor modelo criterio BIC? {'LIMPIO' if modelo_limpio.bic < modelo_completo.bic else 'COMPLETO'}\")\n","\n","# Comparación de R² y R² ajustado\n","print(f\"\\nBondad de ajuste:\")\n","print(f\"R² - Completo: {modelo_completo.rsquared:.3f}, Limpio: {modelo_limpio.rsquared:.3f}\")\n","print(f\"R² ajustado - Completo: {modelo_completo.rsquared_adj:.3f}, Limpio: {modelo_limpio.rsquared_adj:.3f}\")\n","print(f\"¿Mejor modelo R²? {'LIMPIO' if modelo_limpio.rsquared > modelo_completo.rsquared else 'COMPLETO'}\")\n","print(f\"¿Mejor modelo R² ajustado? {'LIMPIO' if modelo_limpio.rsquared_adj > modelo_completo.rsquared_adj else 'COMPLETO'}\")\n","\n","# Análisis de residuos\n","print(f\"\\nError estándar de los residuos:\")\n","print(f\"Completo: {np.sqrt(modelo_completo.mse_resid):.2f}, Limpio: {np.sqrt(modelo_limpio.mse_resid):.2f}\")\n","print(f\"¿Mejor modelo MSE? {'LIMPIO' if modelo_limpio.mse_resid < modelo_completo.mse_resid else 'COMPLETO'}\")\n","\n","# calcular mejoras porcentuales\n","mejora_aic = (modelo_limpio.aic - modelo_completo.aic) / modelo_completo.aic * 100\n","mejora_bic = (modelo_limpio.bic - modelo_completo.bic) / modelo_completo.bic * 100\n","mejora_r2 = (modelo_limpio.rsquared - modelo_completo.rsquared) / modelo_completo.rsquared * 100\n","mejora_r2_adj = (modelo_limpio.rsquared_adj - modelo_completo.rsquared_adj) / modelo_completo.rsquared_adj * 100\n","mejora_mse = (modelo_limpio.mse_resid - modelo_completo.mse_resid) / modelo_completo.mse_resid * 100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GHgQrSsKVL5-","executionInfo":{"status":"ok","timestamp":1757365078335,"user_tz":180,"elapsed":26,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"5b2c9965-ca6f-4ba9-ff59-9357135a57e4"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["============================================================\n","COMPARACIÓN ESTADÍSTICA ENTRE MODELOS\n","============================================================\n","\n","Criterios de información:\n","AIC - Completo: 622.69, Limpio: 530.49\n","BIC - Completo: 627.23, Limpio: 534.47\n","¿Mejor modelo criterio AIC? LIMPIO\n","¿Mejor modelo criterio BIC? LIMPIO\n","\n","Bondad de ajuste:\n","R² - Completo: 0.574, Limpio: 0.774\n","R² ajustado - Completo: 0.507, Limpio: 0.731\n","¿Mejor modelo R²? LIMPIO\n","¿Mejor modelo R² ajustado? LIMPIO\n","\n","Error estándar de los residuos:\n","Completo: 169294.33, Limpio: 127369.69\n","¿Mejor modelo MSE? LIMPIO\n"]}]},{"cell_type":"code","source":["# ahora viene el análisis en cambios de coeficientes\n","\n","print(\"=\"*60)\n","print(\"CAMBIOS EN COEFICIENTES Y SIGNIFICANCIA\")\n","print(\"=\"*60)\n","\n","coeficientes = [\n","    'Temperatura_promedio',\n","    'Cambio_lluvias',\n","    'Frecuencia_sequías'\n","]\n","\n","print(\"Variable\\t\\tCompleto (p-value)\\tLimpio (p-value)\\tCambio\")\n","print(\"-\" * 80)\n","\n","for coef in coeficientes:\n","    pval_completo = modelo_completo.pvalues[coef]\n","    pval_limpio = modelo_limpio.pvalues[coef]\n","    cambio = \"mejora\" if pval_limpio < pval_completo else \"no mejora\"\n","\n","    print(f\"{coef:20}\\t\\t{pval_completo:.4f}\\t\\t\\t{pval_limpio:.4f}\\t\\t{cambio}\")\n","\n","# Identificar variables que ganan significancia con un 5% de nivel de significancia\n","print(f\"\\nVariables que ganan significancia (p < 0.05):\")\n","for coef in coeficientes:\n","    if modelo_limpio.pvalues[coef] < alpha and modelo_completo.pvalues[coef] >= alpha:\n","        print(f\"  - {coef}: {modelo_completo.pvalues[coef]:.3f} → {modelo_limpio.pvalues[coef]:.3f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rpk6Qh5jWCGr","executionInfo":{"status":"ok","timestamp":1757365078352,"user_tz":180,"elapsed":15,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"b1a5d779-24c3-45c0-d35e-43d0ecea9508"},"execution_count":71,"outputs":[{"output_type":"stream","name":"stdout","text":["============================================================\n","CAMBIOS EN COEFICIENTES Y SIGNIFICANCIA\n","============================================================\n","Variable\t\tCompleto (p-value)\tLimpio (p-value)\tCambio\n","--------------------------------------------------------------------------------\n","Temperatura_promedio\t\t0.1837\t\t\t0.0209\t\tmejora\n","Cambio_lluvias      \t\t0.2781\t\t\t0.0189\t\tmejora\n","Frecuencia_sequías  \t\t0.0731\t\t\t0.1510\t\tno mejora\n","\n","Variables que ganan significancia (p < 0.05):\n","  - Temperatura_promedio: 0.184 → 0.021\n","  - Cambio_lluvias: 0.278 → 0.019\n"]}]},{"cell_type":"code","source":["# ahora viene la revisión de los supuestos de un modelo de regresión para el dataset limpio\n","print(\"=\"*60)\n","print(\"VERIFICACIÓN DE SUPUESTOS - MODELO LIMPIO\")\n","print(\"=\"*60)\n","\n","# 1. Test de normalidad de residuos\n","residuos_limpio = modelo_limpio.resid\n","stat_normal, p_normal = shapiro(residuos_limpio)\n","p_normal_omnibus = float(modelo_limpio.summary().tables[2].data[1][1])\n","p_normal_jarque = float(modelo_limpio.summary().tables[2].data[2][3])\n","\n","print(\"1. NORMALIDAD DE RESIDUOS:\")\n","print(f\"   Shapiro-Wilk: p = {p_normal:.4f} → {'No se descarta normalidad' if p_normal > alpha else 'No normal'}\")\n","print(f\"   Omnibus:      p = {p_normal_omnibus:.4f} → {'No se descarta normalidad' if p_normal_omnibus > alpha else 'No normal'}\")\n","print(f\"   Jarque-Bera:  p = {p_normal_jarque:.4f} → {'No de descarta normalidad' if p_normal_jarque > alpha else 'No normal'}\")\n","\n","# 2. Test de heterocedasticidad\n","print(\"\\n2. HOMOCEDASTICIDAD:\")\n","from statsmodels.stats.diagnostic import het_breuschpagan\n","bp_test = het_breuschpagan(modelo_limpio.resid, modelo_limpio.model.exog)\n","print(f\"   Breusch-Pagan: p = {bp_test[1]:.4f} → {'Homocedástico' if bp_test[1] > alpha else 'Heterocedástico'}\")\n","\n","# 3. Test de autocorrelación\n","print(f\"\\n3. AUTOCORRELACIÓN:\")\n","dw_stat = float(modelo_limpio.summary().tables[2].data[0][3])\n","print(f\"   Durbin-Watson: {dw_stat:.3f} → {'Sin autocorrelación' if 1.5 < dw_stat < 2.5 else 'Posible autocorrelación'}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8DE2xKrwWoKR","executionInfo":{"status":"ok","timestamp":1757365078454,"user_tz":180,"elapsed":100,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"f2bdf989-31c4-42e9-d87f-6302a13be72c"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["============================================================\n","VERIFICACIÓN DE SUPUESTOS - MODELO LIMPIO\n","============================================================\n","1. NORMALIDAD DE RESIDUOS:\n","   Shapiro-Wilk: p = 0.1274 → No se descarta normalidad\n","   Omnibus:      p = 0.2580 → No se descarta normalidad\n","   Jarque-Bera:  p = 0.3670 → No de descarta normalidad\n","\n","2. HOMOCEDASTICIDAD:\n","   Breusch-Pagan: p = 0.3124 → Homocedástico\n","\n","3. AUTOCORRELACIÓN:\n","   Durbin-Watson: 1.669 → Sin autocorrelación\n"]}]},{"cell_type":"code","source":["# RESUMEN FINAL DE LA COMPARACIÓN\n","print(\"=\"*60)\n","print(\"CONCLUSIÓN - ¿VALE LA PENA ELIMINAR LOS PAÍSES INFLUYENTES?\")\n","print(\"=\"*60)\n","print('Se tiene:')\n","print(f'  - Reducción porcentual en AIC: {abs(mejora_aic):.2f}% (menos es mejor)')\n","print(f'  - Reducción porcentual en BIC: {abs(mejora_bic):.2f}% (menos es mejor)')\n","print(f'  - Aumento porcentual en R²: {mejora_r2:.2f}% (más es mejor)')\n","print(f'  - Aumento porcentual en R² ajustado: {mejora_r2_adj:.2f}% (más es mejor)')\n","print(f'  - Reducción porcentual en MSE: {abs(mejora_mse):.2f}% (menos es mejor)')\n","print('  - Dos variables ganaron significancia estadística (p < 0.05)')\n","print('  - Cumplimiento de los supuestos del modelo de regresión para el dataset limpio')\n","\n","print(\"\\nCONCLUSIÓN: La eliminación de países influyentes MEJORA significativamente el modelo\")\n","\n","\n","print(f\"\\nPaíses eliminados: {paises_a_eliminar}\")\n","print(f\"Observaciones restantes: {len(df_limpio)} de {len(df)} ({len(df_limpio)/len(df)*100:.1f}% del dataset original)\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BnIkGfFTWzwc","executionInfo":{"status":"ok","timestamp":1757365078474,"user_tz":180,"elapsed":18,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"a941fe55-0c0f-4c3f-8def-5c6a1b7d4737"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["============================================================\n","CONCLUSIÓN - ¿VALE LA PENA ELIMINAR LOS PAÍSES INFLUYENTES?\n","============================================================\n","Se tiene:\n","  - Reducción porcentual en AIC: 14.81% (menos es mejor)\n","  - Reducción porcentual en BIC: 14.79% (menos es mejor)\n","  - Aumento porcentual en R²: 34.81% (más es mejor)\n","  - Aumento porcentual en R² ajustado: 44.33% (más es mejor)\n","  - Reducción porcentual en MSE: 43.40% (menos es mejor)\n","  - Dos variables ganaron significancia estadística (p < 0.05)\n","  - Cumplimiento de los supuestos del modelo de regresión para el dataset limpio\n","\n","CONCLUSIÓN: La eliminación de países influyentes MEJORA significativamente el modelo\n","\n","Países eliminados: ['Japón', 'Noruega', 'Egipto']\n","Observaciones restantes: 20 de 23 (87.0% del dataset original)\n"]}]},{"cell_type":"code","source":["# seguir trabajando con el dataset sin los países influyentes\n","\n","print('Dataset de países eliminados:\\n')\n","df_eliminados = df[df.index.isin(paises_a_eliminar)]\n","display(df_eliminados.head())\n","print(f'\\nDimensión del dataset de eliminados: {df_eliminados.shape}')\n","\n","print('\\n\\nDataset de países definitivos:\\n')\n","df.drop(paises_a_eliminar, inplace=True)\n","display(df.head())\n","print(f'\\nDimensión del dataset limpio: {df.shape}')"],"metadata":{"id":"WoaG-et-3RO6","colab":{"base_uri":"https://localhost:8080/","height":569},"executionInfo":{"status":"ok","timestamp":1757365078573,"user_tz":180,"elapsed":97,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"0b48e26b-bb96-46c6-cb96-ef4e2faa53a0"},"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataset de países eliminados:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["         Temperatura_promedio  Cambio_lluvias  Frecuencia_sequías  \\\n","País                                                                \n","Japón                    16.1              -3                   1   \n","Noruega                   4.6              -3                   1   \n","Egipto                   23.5              -8                   8   \n","\n","         Producción_alimentos  \n","País                           \n","Japón                  720000  \n","Noruega                600000  \n","Egipto                 370000  "],"text/html":["\n","  <div id=\"df-1f3d5a14-6976-4117-a34e-11c21c45b75e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperatura_promedio</th>\n","      <th>Cambio_lluvias</th>\n","      <th>Frecuencia_sequías</th>\n","      <th>Producción_alimentos</th>\n","    </tr>\n","    <tr>\n","      <th>País</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Japón</th>\n","      <td>16.1</td>\n","      <td>-3</td>\n","      <td>1</td>\n","      <td>720000</td>\n","    </tr>\n","    <tr>\n","      <th>Noruega</th>\n","      <td>4.6</td>\n","      <td>-3</td>\n","      <td>1</td>\n","      <td>600000</td>\n","    </tr>\n","    <tr>\n","      <th>Egipto</th>\n","      <td>23.5</td>\n","      <td>-8</td>\n","      <td>8</td>\n","      <td>370000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f3d5a14-6976-4117-a34e-11c21c45b75e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1f3d5a14-6976-4117-a34e-11c21c45b75e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1f3d5a14-6976-4117-a34e-11c21c45b75e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b5c642bd-bc56-4f3e-9ed3-083411a18b7a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5c642bd-bc56-4f3e-9ed3-083411a18b7a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b5c642bd-bc56-4f3e-9ed3-083411a18b7a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"print(f'\\\\nDimensi\\u00f3n del dataset limpio: {df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Pa\\u00eds\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Jap\\u00f3n\",\n          \"Noruega\",\n          \"Egipto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperatura_promedio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.52382976188326,\n        \"min\": 4.6,\n        \"max\": 23.5,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          16.1,\n          4.6,\n          23.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cambio_lluvias\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": -8,\n        \"max\": -3,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -8,\n          -3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frecuencia_sequ\\u00edas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 1,\n        \"max\": 8,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          8,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Producci\\u00f3n_alimentos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 177857,\n        \"min\": 370000,\n        \"max\": 720000,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          720000,\n          600000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","Dimensión del dataset de eliminados: (3, 4)\n","\n","\n","Dataset de países definitivos:\n","\n"]},{"output_type":"display_data","data":{"text/plain":["           Temperatura_promedio  Cambio_lluvias  Frecuencia_sequías  \\\n","País                                                                  \n","Alemania                   10.5              -5                   2   \n","Argentina                  17.8             -10                   5   \n","Australia                  22.3             -15                   8   \n","Brasil                     25.1              -8                   6   \n","Canadá                      6.2              -2                   1   \n","\n","           Producción_alimentos  \n","País                             \n","Alemania                 950000  \n","Argentina                650000  \n","Australia                400000  \n","Brasil                   900000  \n","Canadá                   850000  "],"text/html":["\n","  <div id=\"df-585d936e-daaa-4534-94be-bebdcc47728c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperatura_promedio</th>\n","      <th>Cambio_lluvias</th>\n","      <th>Frecuencia_sequías</th>\n","      <th>Producción_alimentos</th>\n","    </tr>\n","    <tr>\n","      <th>País</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Alemania</th>\n","      <td>10.5</td>\n","      <td>-5</td>\n","      <td>2</td>\n","      <td>950000</td>\n","    </tr>\n","    <tr>\n","      <th>Argentina</th>\n","      <td>17.8</td>\n","      <td>-10</td>\n","      <td>5</td>\n","      <td>650000</td>\n","    </tr>\n","    <tr>\n","      <th>Australia</th>\n","      <td>22.3</td>\n","      <td>-15</td>\n","      <td>8</td>\n","      <td>400000</td>\n","    </tr>\n","    <tr>\n","      <th>Brasil</th>\n","      <td>25.1</td>\n","      <td>-8</td>\n","      <td>6</td>\n","      <td>900000</td>\n","    </tr>\n","    <tr>\n","      <th>Canadá</th>\n","      <td>6.2</td>\n","      <td>-2</td>\n","      <td>1</td>\n","      <td>850000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-585d936e-daaa-4534-94be-bebdcc47728c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-585d936e-daaa-4534-94be-bebdcc47728c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-585d936e-daaa-4534-94be-bebdcc47728c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-68f23a5a-dda5-40bc-b4ff-3b3c6fbf58b0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68f23a5a-dda5-40bc-b4ff-3b3c6fbf58b0')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-68f23a5a-dda5-40bc-b4ff-3b3c6fbf58b0 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"print(f'\\\\nDimensi\\u00f3n del dataset limpio: {df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Pa\\u00eds\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Argentina\",\n          \"Canad\\u00e1\",\n          \"Australia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperatura_promedio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.926348465718625,\n        \"min\": 6.2,\n        \"max\": 25.1,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          17.8,\n          6.2,\n          22.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cambio_lluvias\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": -15,\n        \"max\": -2,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -10,\n          -2,\n          -15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frecuencia_sequ\\u00edas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 8,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5,\n          1,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Producci\\u00f3n_alimentos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 226384,\n        \"min\": 400000,\n        \"max\": 950000,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          650000,\n          850000,\n          400000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","Dimensión del dataset limpio: (20, 4)\n"]}]},{"cell_type":"markdown","source":["##**2. Preprocesamiento y escalamiento de datos (2 puntos)**\n","- Aplica técnicas de normalización o estandarización a las variables numéricas.\n","- Codifica correctamente cualquier variable categórica si fuera necesario.\n","- Divide los datos en conjunto de entrenamiento y prueba (80%-20%)."],"metadata":{"id":"wV0BIfrjHEG-"}},{"cell_type":"code","source":["# no hay variables categóricas, solo numéricas por lo que usaré:\n","# minmaxscaler para la var discreta\n","# standardscaler para las var continuas\n","\n","preprocessor = ColumnTransformer(\n","    transformers=[\n","        ('num_std', StandardScaler(), var_cont),\n","        ('num_mms', MinMaxScaler(), var_disc)\n","    ],\n","    #remainder='passthrough'\n",").set_output(transform='pandas')\n","\n","X = df[var_num]\n","y = df[target]\n","\n","# división 80/20 en train/test sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","print(f'X_train shape: {X_train.shape}')\n","print(f'y_train shape: {y_train.shape}')\n","print(f'X_test shape: {X_test.shape}')\n","print(f'y_test shape: {y_test.shape}')\n","\n","# escalamiento\n","X_train_scaled = preprocessor.fit_transform(X_train)\n","X_test_scaled = preprocessor.transform(X_test)\n","\n","#display(X_train_scaled.head())\n","#display(X_test_scaled.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JDGh8S_Ju-Om","executionInfo":{"status":"ok","timestamp":1757365078607,"user_tz":180,"elapsed":30,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"f89de609-8dfe-4446-88e4-4dd507d6157c"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["X_train shape: (16, 3)\n","y_train shape: (16,)\n","X_test shape: (4, 3)\n","y_test shape: (4,)\n"]}]},{"cell_type":"markdown","source":["##**3. Aplicación de modelos de aprendizaje supervisado (4 puntos)**\n","- Regresión:\n","    - Entrena un modelo de regresión lineal para predecir la producción de alimentos.\n","    - Evalúa el modelo usando métricas como MAE, MSE y R2.\n","    - Compara con otros modelos de regresión (árbol de decisión, random forest).\n","- Clasificación:\n","    - Crea una nueva variable categórica que clasifique los países en \"Bajo\",\n","    \"Medio\" y \"Alto\" impacto climático en la producción agrícola.\n","    - Entrena modelos de clasificación como K-Nearest Neighbors, Árbol de\n","    Decisión y Support Vector Machine.\n","    - Evalúa el desempeño usando matriz de confusión, precisión, sensibilidad y\n","    curva ROC-AUC."],"metadata":{"id":"9c6sF2YVHT8F"}},{"cell_type":"markdown","source":["**IMPORTANTE**\n","___\n","\n","Dado el tamaño reducido del dataset limpio (20 filas), un conjunto de prueba del 20% (4 filas) resulta extremadamente pequeño y poco representativo. En particular para tareas de clasificación, donde cada observación puede tener un impacto significativo en métricas como la accuracy (cada punto representa un 25% en un test set de 4), un test set tan pequeño aumenta el riesgo de obtener métricas de evaluación poco fiables y una alta variabilidad en los resultados.\n","\n","Para intentar obtener una evaluación ligeramente más robusta del rendimiento de los modelos de clasificación en una única división (antes de pasar a la validación cruzada), se optó por aumentar el tamaño del conjunto de prueba al 30% (6 filas). Aunque sigue siendo un tamaño pequeño, proporciona una base un poco más amplia para la evaluación inicial y ayuda a mitigar, en cierta medida, la inestabilidad observada con un test set del 20%, especialmente considerando la tendencia al sobreajuste en modelos como los árboles de decisión.\n","\n","El mismo criterio de se aplicó a las tareas de regresión."],"metadata":{"id":"Vac3q8TV4k00"}},{"cell_type":"markdown","source":["###**Funciones auxiliares comunes a Regresión y Clasificación**"],"metadata":{"id":"5erWZVBSF40R"}},{"cell_type":"code","source":["# Transformer para seleccionar atributos\n","class SeleccionarAtributos(BaseEstimator, TransformerMixin):\n","    '''\n","    Selecciona los atributos de manera acumulativa:\n","    - Originales: en caso que el parámetro orig sea True\n","    - Cuadráticos: en caso que el parámetro cuad sea True. Corresponden a los atributos elevados al cuadrado.\n","    - Combinados: en caso que el parámetro comb sea True. Corresponden a la multiplicación de dos variables distintas.\n","\n","    Retorna:\n","    - Si orig==True and cuad==False and comb==False, selecciona solo los atributos originales\n","    - Si orig==False and cuad==True and comb==False, selecciona solo los atributos cuadráticos\n","    - Si orig==False and cuad==False and comb==True, selecciona solo los atributos combinados\n","    - Si orig==True and cuad==True and comb==False, selecciona los atributos originales y cuadráticos\n","    - Si orig==True and cuad==False and comb==True, selecciona los atributos originales y combinados\n","    - Si orig==False and cuad==True and comb==True, selecciona los atributos cuadráticos y combinados\n","    - Si orig==True and cuad==True and comb==True, selecciona todos los atributos\n","    '''\n","    def __init__(self, atributos_originales, orig, cuad, comb):\n","        self.atributos_originales = atributos_originales\n","        self.orig = orig\n","        self.cuad = cuad\n","        self.comb = comb\n","\n","    def fit(self, X, y=None):\n","        # Asumimos que X es un DataFrame (por el set_output)\n","        atributos_orig = self.atributos_originales if self.orig else []\n","        atributos_cuadraticos = [f'{col}^2' for col in self.atributos_originales] if self.cuad else []\n","        atributos_combinados = [col for col in X.columns if col not in self.atributos_originales + atributos_cuadraticos] if self.comb else []\n","        self.atributos_elegidos = atributos_orig + atributos_cuadraticos + atributos_combinados\n","        self.features_names_out = self.atributos_elegidos\n","        return self\n","\n","    def transform(self, X):\n","        return X[self.atributos_elegidos]\n","\n","    def get_feature_names_out(self):\n","        return self.features_names_out"],"metadata":{"id":"D4DcmbxVpMSS","executionInfo":{"status":"ok","timestamp":1757365078650,"user_tz":180,"elapsed":47,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["def compara_modelos_sin_cv(df, tipo_modelo='regresion'):\n","    '''\n","    Compara modelos de regresión o clasificación sin validación cruzada.\n","    Params:\n","    - df: DataFrame con los datos\n","    - tipo_modelo: 'regresion' o 'clasificacion'\n","\n","    Retorna un DataFrame con los resultados de cada modelo.\n","    '''\n","\n","    print(f'Comparación de modelos de {tipo_modelo} sin validación cruzada', end=' ... ')\n","\n","    if tipo_modelo == 'regresion':\n","        modelos = [LinearRegression(), Ridge(random_state=42), Lasso(random_state=42), DecisionTreeRegressor(random_state=42), RandomForestRegressor(random_state=42)]\n","    elif tipo_modelo == 'clasificacion':\n","        modelos = [KNeighborsClassifier(n_neighbors=5), DecisionTreeClassifier(random_state=42), SVC(random_state=42, probability=True)]\n","    else:\n","        raise ValueError('tipo_modelo debe ser \"regresion\" o \"clasificacion\"')\n","\n","    opciones = ['orig', 'cuad', 'comb']\n","    combinaciones = []\n","    for combo in itertools.combinations(opciones, 1):\n","        combinaciones.append(list(combo))\n","    for combo in itertools.combinations(opciones, 2):\n","        combinaciones.append(list(combo))\n","    for combo in itertools.combinations(opciones, 3):\n","        combinaciones.append(list(combo))\n","\n","    opciones = ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']\n","    combinaciones_var = []\n","    for combo in itertools.combinations(opciones, 1):\n","        combinaciones_var.append(list(combo))\n","    for combo in itertools.combinations(opciones, 2):\n","        combinaciones_var.append(list(combo))\n","    for combo in itertools.combinations(opciones, 3):\n","        combinaciones_var.append(list(combo))\n","\n","    # genera todas las combinaciones posibles de atributos\n","    resultados = dict()\n","    for modelo in modelos:\n","        for combinacion_var in combinaciones_var:\n","            for combinacion in combinaciones:\n","                orig = True if 'orig' in combinacion else False\n","                cuad = True if 'cuad' in combinacion else False\n","                comb = True if ('comb' in combinacion and len(combinacion_var)>1) else False\n","                if orig or cuad or comb:\n","                    if tipo_modelo == 'regresion':\n","                        resultado = regresion_sin_cv(df, combinacion_var, modelo, orig, cuad, comb)\n","                    else:\n","                        resultado = clasificacion_sin_cv(df, combinacion_var, modelo, orig, cuad, comb)\n","                    resultados.update(resultado)\n","\n","    print(f'{len(resultados)} modelos generados\\n')\n","\n","    if tipo_modelo == 'regresion':\n","        scores = ['mse_train', 'mse_test', 'rmse_train', 'rmse_test', 'mae_train', 'mae_test', 'r2_train', 'r2_test']\n","        return pd.DataFrame(resultados, index=scores).T.sort_values(['r2_test', 'r2_train'], ascending=False)\n","\n","    scores = ['precision_train', 'precision_test', 'recall_train', 'recall_test', 'accuracy_train', 'accuracy_test', 'roc_auc_train', 'roc_auc_test', 'confusion_train', 'confusion_test']\n","    return pd.DataFrame(resultados, index=scores).T.sort_values(['accuracy_test', 'accuracy_train'], ascending=False)"],"metadata":{"id":"PsvailWuBrVX","executionInfo":{"status":"ok","timestamp":1757365078719,"user_tz":180,"elapsed":72,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":77,"outputs":[]},{"cell_type":"markdown","source":["###**Regresión**"],"metadata":{"id":"H08sbDvL-M-a"}},{"cell_type":"code","source":["def regresion_sin_cv(df, vars, modelo, orig, cuad, comb):\n","    '''\n","    Efectúa la regresión sin validación cruzada.\n","    Params:\n","    - df: DataFrame con los datos\n","    - vars: lista de variables a usar\n","    - modelo: modelo de regresión a usar\n","    - orig: booleano que indica si se usan las variables originales\n","    - cuad: booleano que indica si se usan las variables cuadráticas\n","    - comb: booleano que indica si se usan las variables combinadas\n","\n","    Retorna un diccionario con las métricas del modelo.\n","    '''\n","\n","    # darle un nombre adecuado al modelo\n","    nombre_modelo = modelo.__class__.__name__ + '_'\n","    if orig: nombre_modelo = nombre_modelo + 'O'\n","    if cuad: nombre_modelo = nombre_modelo + 'C'\n","    if comb: nombre_modelo = nombre_modelo + 'B'\n","    nombre_modelo = nombre_modelo + ' ' + str(vars)\n","\n","    vars_std = [var for var in vars if var in var_cont]\n","    vars_mms = [var for var in vars if var in var_disc]\n","\n","    X_train, X_test, y_train, y_test = train_test_split(df[vars], df[target], test_size=0.3, random_state=42)\n","\n","    if 'Linear' in nombre_modelo or 'Ridge' in nombre_modelo or 'Lasso' in nombre_modelo:\n","\n","        preprocessor_sc = ColumnTransformer(\n","            transformers=[\n","                ('num_std', StandardScaler(), vars_std),\n","                ('num_mms', MinMaxScaler(), vars_mms)\n","            ],\n","            #remainder='passthrough',\n","            verbose_feature_names_out=False\n","        ).set_output(transform='pandas')\n","\n","        pipe_reg = Pipeline(steps=[\n","            ('preprocessor_sc', preprocessor_sc),\n","            ('poli', PolynomialFeatures(degree=2, include_bias=False, interaction_only=False)),\n","            ('selector', SeleccionarAtributos(vars, orig, cuad, comb)),\n","            ('modelo', TransformedTargetRegressor(regressor=modelo, func=lambda x:x/10E6, inverse_func=lambda x:x*10E6)), # tuve que escalarlo para evitar un convergence warning en los modelos lineales\n","        ]).set_output(transform=\"pandas\")\n","\n","    else:\n","        pipe_reg = Pipeline(steps=[\n","            ('poli', PolynomialFeatures(degree=2, include_bias=False, interaction_only=False)),\n","            ('selector', SeleccionarAtributos(vars, orig, cuad, comb)),\n","            ('modelo', modelo)\n","        ]).set_output(transform=\"pandas\")\n","\n","    pipe_reg.fit(X_train, y_train)\n","\n","    y_pred_train = pipe_reg.predict(X_train)\n","    mse_train = np.round(mean_squared_error(y_train, y_pred_train), 3)\n","    rmse_train = np.round(root_mean_squared_error(y_train, y_pred_train), 3)\n","    mae_train = np.round(mean_absolute_error(y_train, y_pred_train), 3)\n","    r2_train = np.round(r2_score(y_train, y_pred_train)*100, 1)\n","\n","    y_pred_test = pipe_reg.predict(X_test)\n","    mse_test = np.round(mean_squared_error(y_test, y_pred_test), 3)\n","    rmse_test = np.round(root_mean_squared_error(y_test, y_pred_test), 3)\n","    mae_test = np.round(mean_absolute_error(y_test, y_pred_test), 3)\n","    r2_test = np.round(r2_score(y_test, y_pred_test)*100, 1)\n","\n","    scores = [mse_train, mse_test, rmse_train, rmse_test, mae_train, mae_test, r2_train, r2_test]\n","\n","    return {nombre_modelo: scores}"],"metadata":{"id":"uFBHW9GOLvdn","executionInfo":{"status":"ok","timestamp":1757365078773,"user_tz":180,"elapsed":52,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["%%time\n","m_scv = compara_modelos_sin_cv(df, tipo_modelo='regresion')\n","m_scv['delta_r2'] = np.abs(m_scv['r2_test'] - m_scv['r2_train'])\n","# solo ver los modelos que arrojan R^2 positivo en train y test sets\n","m_scv[(m_scv.r2_test>0) & (m_scv.r2_test>0)].sort_values('delta_r2', ascending=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"8QIeRcHAoQT1","executionInfo":{"status":"ok","timestamp":1757365093657,"user_tz":180,"elapsed":14890,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"07912220-8b13-4371-81a3-50c2f0401a8c"},"execution_count":79,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion sin validación cruzada ... 185 modelos generados\n","\n","CPU times: user 12.9 s, sys: 40 ms, total: 13 s\n","Wall time: 14.7 s\n"]},{"output_type":"execute_result","data":{"text/plain":["                                                                                               mse_train  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']                           2.336348e+10   \n","Ridge_O ['Cambio_lluvias']                                                                  2.254368e+10   \n","Ridge_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                          1.867200e+10   \n","Ridge_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                           1.867200e+10   \n","RandomForestRegressor_OC ['Frecuencia_sequías']                                             5.836006e+09   \n","RandomForestRegressor_C ['Frecuencia_sequías']                                              5.836006e+09   \n","RandomForestRegressor_O ['Frecuencia_sequías']                                              5.836006e+09   \n","Ridge_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                           1.946096e+10   \n","LinearRegression_O ['Cambio_lluvias']                                                       2.235255e+10   \n","LinearRegression_O ['Cambio_lluvias', 'Frecuencia_sequías']                                 2.235252e+10   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    1.708738e+10   \n","Ridge_OC ['Cambio_lluvias']                                                                 1.969029e+10   \n","Ridge_O ['Cambio_lluvias', 'Frecuencia_sequías']                                            2.254926e+10   \n","LinearRegression_OC ['Temperatura_promedio']                                                4.706824e+10   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                     3.977647e+09   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias']                                          1.784301e+10   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                    4.035504e+09   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                      3.975094e+09   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                      3.880909e+09   \n","Ridge_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    2.015923e+10   \n","Ridge_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   2.015923e+10   \n","LinearRegression_OC ['Temperatura_promedio', 'Frecuencia_sequías']                          2.330574e+10   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                     3.903307e+09   \n","LinearRegression_OC ['Cambio_lluvias']                                                      1.950481e+10   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    3.204801e+10   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                      4.076719e+09   \n","Ridge_C ['Temperatura_promedio', 'Frecuencia_sequías']                                      3.335796e+10   \n","Ridge_OC ['Temperatura_promedio']                                                           4.715511e+10   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                     4.067198e+09   \n","LinearRegression_O ['Temperatura_promedio']                                                 4.711727e+10   \n","DecisionTreeRegressor_O ['Frecuencia_sequías']                                              4.535714e+09   \n","DecisionTreeRegressor_C ['Frecuencia_sequías']                                              4.535714e+09   \n","DecisionTreeRegressor_OC ['Frecuencia_sequías']                                             4.535714e+09   \n","Ridge_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                           2.057030e+10   \n","Ridge_B ['Cambio_lluvias', 'Frecuencia_sequías']                                            2.057030e+10   \n","Ridge_O ['Temperatura_promedio']                                                            4.719833e+10   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias']                                          5.530703e+10   \n","RandomForestRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                            2.858601e+09   \n","DecisionTreeRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                            0.000000e+00   \n","LinearRegression_B ['Temperatura_promedio', 'Frecuencia_sequías']                           2.526949e+10   \n","LinearRegression_CB ['Temperatura_promedio', 'Frecuencia_sequías']                          2.526949e+10   \n","RandomForestRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                            3.406826e+09   \n","Ridge_C ['Frecuencia_sequías']                                                              3.361420e+10   \n","RandomForestRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                           2.877124e+09   \n","Ridge_B ['Temperatura_promedio', 'Frecuencia_sequías']                                      3.175731e+10   \n","Ridge_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                     3.175731e+10   \n","LinearRegression_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                1.645281e+10   \n","LinearRegression_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 1.645281e+10   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                            0.000000e+00   \n","DecisionTreeRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                           0.000000e+00   \n","RandomForestRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                           3.199590e+09   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    3.842341e+09   \n","RandomForestRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                           2.575312e+09   \n","RandomForestRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                          3.057846e+09   \n","RandomForestRegressor_C ['Cambio_lluvias']                                                  7.888624e+09   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias']                               1.588470e+10   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         1.405867e+10   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']  4.144048e+09   \n","RandomForestRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                            2.844853e+09   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   1.340570e+10   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   3.827063e+09   \n","Ridge_C ['Cambio_lluvias', 'Frecuencia_sequías']                                            3.324157e+10   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   0.000000e+00   \n","DecisionTreeRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                           0.000000e+00   \n","Ridge_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                    3.002376e+10   \n","Ridge_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                     3.002376e+10   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   4.252920e+09   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    4.512756e+09   \n","Ridge_O ['Frecuencia_sequías']                                                              3.538047e+10   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    4.306355e+09   \n","Ridge_OC ['Frecuencia_sequías']                                                             2.955934e+10   \n","LinearRegression_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         2.539435e+10   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   4.154096e+09   \n","Ridge_C ['Cambio_lluvias']                                                                  5.972238e+10   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                          5.660944e+09   \n","LinearRegression_C ['Temperatura_promedio', 'Frecuencia_sequías']                           2.589172e+10   \n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']                                      3.711852e+10   \n","Ridge_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                     3.081415e+10   \n","RandomForestRegressor_O ['Temperatura_promedio']                                            1.058290e+10   \n","LinearRegression_C ['Cambio_lluvias']                                                       5.969933e+10   \n","RandomForestRegressor_OC ['Temperatura_promedio']                                           1.006193e+10   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                         6.506675e+09   \n","LinearRegression_C ['Frecuencia_sequías']                                                   2.612181e+10   \n","RandomForestRegressor_C ['Temperatura_promedio']                                            9.757449e+09   \n","LinearRegression_C ['Cambio_lluvias', 'Frecuencia_sequías']                                 2.601487e+10   \n","LinearRegression_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         2.175123e+10   \n","LinearRegression_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          2.175123e+10   \n","LinearRegression_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               1.562065e+10   \n","LinearRegression_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                1.562065e+10   \n","LinearRegression_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                1.562107e+10   \n","LinearRegression_OC ['Frecuencia_sequías']                                                  2.606214e+10   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                          5.508390e+09   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                         5.942953e+09   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                        5.753275e+09   \n","DecisionTreeRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                           0.000000e+00   \n","DecisionTreeRegressor_OC ['Cambio_lluvias']                                                 5.514286e+09   \n","DecisionTreeRegressor_C ['Cambio_lluvias']                                                  5.514286e+09   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                          6.647864e+09   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                         5.695254e+09   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias']                                         1.447453e+10   \n","RandomForestRegressor_OC ['Cambio_lluvias']                                                 7.951856e+09   \n","LinearRegression_O ['Frecuencia_sequías']                                                   2.862252e+10   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    0.000000e+00   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                          0.000000e+00   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    0.000000e+00   \n","DecisionTreeRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                          0.000000e+00   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   0.000000e+00   \n","DecisionTreeRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                            0.000000e+00   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    0.000000e+00   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                         0.000000e+00   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                  1.122266e+10   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   1.122266e+10   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                      0.000000e+00   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                         0.000000e+00   \n","RandomForestRegressor_O ['Cambio_lluvias']                                                  8.111468e+09   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   0.000000e+00   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']  0.000000e+00   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                         0.000000e+00   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                     0.000000e+00   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                     0.000000e+00   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                    0.000000e+00   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                      0.000000e+00   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                     0.000000e+00   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                      0.000000e+00   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                          0.000000e+00   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                          0.000000e+00   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                        1.292132e+10   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias']                                         1.292132e+10   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                        0.000000e+00   \n","\n","                                                                                                mse_test  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']                           1.387251e+10   \n","Ridge_O ['Cambio_lluvias']                                                                  1.308769e+10   \n","Ridge_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                          1.058926e+10   \n","Ridge_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                           1.058926e+10   \n","RandomForestRegressor_OC ['Frecuencia_sequías']                                             4.097502e+09   \n","RandomForestRegressor_C ['Frecuencia_sequías']                                              4.097502e+09   \n","RandomForestRegressor_O ['Frecuencia_sequías']                                              4.097502e+09   \n","Ridge_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                           1.065779e+10   \n","LinearRegression_O ['Cambio_lluvias']                                                       1.407645e+10   \n","LinearRegression_O ['Cambio_lluvias', 'Frecuencia_sequías']                                 1.411528e+10   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    1.096361e+10   \n","Ridge_OC ['Cambio_lluvias']                                                                 1.259903e+10   \n","Ridge_O ['Cambio_lluvias', 'Frecuencia_sequías']                                            1.209274e+10   \n","LinearRegression_OC ['Temperatura_promedio']                                                2.621142e+10   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                     4.015923e+09   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias']                                          1.240820e+10   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                    4.586837e+09   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                      4.635370e+09   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                      4.791423e+09   \n","Ridge_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    9.282409e+09   \n","Ridge_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   9.282409e+09   \n","LinearRegression_OC ['Temperatura_promedio', 'Frecuencia_sequías']                          1.104417e+10   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                     5.024968e+09   \n","LinearRegression_OC ['Cambio_lluvias']                                                      1.423341e+10   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    1.610367e+10   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                      5.316005e+09   \n","Ridge_C ['Temperatura_promedio', 'Frecuencia_sequías']                                      1.658197e+10   \n","Ridge_OC ['Temperatura_promedio']                                                           2.445901e+10   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                     6.025997e+09   \n","LinearRegression_O ['Temperatura_promedio']                                                 2.385065e+10   \n","DecisionTreeRegressor_O ['Frecuencia_sequías']                                              6.758333e+09   \n","DecisionTreeRegressor_C ['Frecuencia_sequías']                                              6.758333e+09   \n","DecisionTreeRegressor_OC ['Frecuencia_sequías']                                             6.758333e+09   \n","Ridge_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                           7.643210e+09   \n","Ridge_B ['Cambio_lluvias', 'Frecuencia_sequías']                                            7.643210e+09   \n","Ridge_O ['Temperatura_promedio']                                                            2.307741e+10   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias']                                          3.779119e+10   \n","RandomForestRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                            6.957100e+09   \n","DecisionTreeRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                            5.533333e+09   \n","LinearRegression_B ['Temperatura_promedio', 'Frecuencia_sequías']                           9.202698e+09   \n","LinearRegression_CB ['Temperatura_promedio', 'Frecuencia_sequías']                          9.202698e+09   \n","RandomForestRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                            7.757210e+09   \n","Ridge_C ['Frecuencia_sequías']                                                              1.394515e+10   \n","RandomForestRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                           7.738208e+09   \n","Ridge_B ['Temperatura_promedio', 'Frecuencia_sequías']                                      1.258223e+10   \n","Ridge_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                     1.258223e+10   \n","LinearRegression_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                1.607731e+10   \n","LinearRegression_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 1.607731e+10   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                            6.450000e+09   \n","DecisionTreeRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                           6.450000e+09   \n","RandomForestRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                           8.385533e+09   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    9.325637e+09   \n","RandomForestRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                           8.578882e+09   \n","RandomForestRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                          8.991660e+09   \n","RandomForestRegressor_C ['Cambio_lluvias']                                                  1.245642e+10   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias']                               1.732950e+10   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         1.630935e+10   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']  1.082674e+10   \n","RandomForestRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                            1.011488e+10   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   1.632637e+10   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   1.105835e+10   \n","Ridge_C ['Cambio_lluvias', 'Frecuencia_sequías']                                            1.082570e+10   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   8.850000e+09   \n","DecisionTreeRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                           8.850000e+09   \n","Ridge_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                    8.662611e+09   \n","Ridge_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                     8.662611e+09   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   1.168735e+10   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    1.185059e+10   \n","Ridge_O ['Frecuencia_sequías']                                                              1.154900e+10   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    1.192452e+10   \n","Ridge_OC ['Frecuencia_sequías']                                                             7.980171e+09   \n","LinearRegression_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         5.453783e+09   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   1.252900e+10   \n","Ridge_C ['Cambio_lluvias']                                                                  2.515484e+10   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                          1.344805e+10   \n","LinearRegression_C ['Temperatura_promedio', 'Frecuencia_sequías']                           5.111576e+09   \n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']                                      1.161719e+10   \n","Ridge_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                     7.794177e+09   \n","RandomForestRegressor_O ['Temperatura_promedio']                                            1.698956e+10   \n","LinearRegression_C ['Cambio_lluvias']                                                       2.444608e+10   \n","RandomForestRegressor_OC ['Temperatura_promedio']                                           1.697693e+10   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                         1.490743e+10   \n","LinearRegression_C ['Frecuencia_sequías']                                                   4.333147e+09   \n","RandomForestRegressor_C ['Temperatura_promedio']                                            1.696877e+10   \n","LinearRegression_C ['Cambio_lluvias', 'Frecuencia_sequías']                                 4.122598e+09   \n","LinearRegression_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         2.407205e+10   \n","LinearRegression_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          2.407205e+10   \n","LinearRegression_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               2.054483e+10   \n","LinearRegression_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                2.054483e+10   \n","LinearRegression_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                2.057352e+10   \n","LinearRegression_OC ['Frecuencia_sequías']                                                  3.904230e+09   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                          1.521258e+10   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                         1.560088e+10   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                        1.569806e+10   \n","DecisionTreeRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                           1.256667e+10   \n","DecisionTreeRegressor_OC ['Cambio_lluvias']                                                 1.641667e+10   \n","DecisionTreeRegressor_C ['Cambio_lluvias']                                                  1.641667e+10   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                          1.728499e+10   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                         1.673095e+10   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias']                                         2.193617e+10   \n","RandomForestRegressor_OC ['Cambio_lluvias']                                                 1.831007e+10   \n","LinearRegression_O ['Frecuencia_sequías']                                                   3.145725e+09   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    1.510000e+10   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                          1.520000e+10   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    1.553333e+10   \n","DecisionTreeRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                          1.556667e+10   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   1.585000e+10   \n","DecisionTreeRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                            1.625000e+10   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    1.645000e+10   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                         1.650000e+10   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                  2.333850e+10   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   2.333850e+10   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                      1.691667e+10   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                         1.741667e+10   \n","RandomForestRegressor_O ['Cambio_lluvias']                                                  2.434135e+10   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   1.960000e+10   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']  2.023333e+10   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                         2.101667e+10   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                     2.190000e+10   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                     2.190000e+10   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                    2.190000e+10   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                      2.191667e+10   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                     2.223333e+10   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                      2.223333e+10   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                          2.371667e+10   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                          2.431667e+10   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                        3.279524e+10   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias']                                         3.279524e+10   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                        2.520000e+10   \n","\n","                                                                                            rmse_train  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']                           152851.171   \n","Ridge_O ['Cambio_lluvias']                                                                  150145.529   \n","Ridge_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                          136645.532   \n","Ridge_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                           136645.532   \n","RandomForestRegressor_OC ['Frecuencia_sequías']                                              76393.754   \n","RandomForestRegressor_C ['Frecuencia_sequías']                                               76393.754   \n","RandomForestRegressor_O ['Frecuencia_sequías']                                               76393.754   \n","Ridge_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                           139502.530   \n","LinearRegression_O ['Cambio_lluvias']                                                       149507.687   \n","LinearRegression_O ['Cambio_lluvias', 'Frecuencia_sequías']                                 149507.581   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    130718.724   \n","Ridge_OC ['Cambio_lluvias']                                                                 140322.085   \n","Ridge_O ['Cambio_lluvias', 'Frecuencia_sequías']                                            150164.114   \n","LinearRegression_OC ['Temperatura_promedio']                                                216952.171   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                      63068.591   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias']                                          133577.735   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                     63525.614   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                       63048.343   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                       62296.939   \n","Ridge_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    141983.187   \n","Ridge_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   141983.187   \n","LinearRegression_OC ['Temperatura_promedio', 'Frecuencia_sequías']                          152662.186   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                      62476.453   \n","LinearRegression_OC ['Cambio_lluvias']                                                      139659.627   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    179019.567   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                       63849.192   \n","Ridge_C ['Temperatura_promedio', 'Frecuencia_sequías']                                      182641.613   \n","Ridge_OC ['Temperatura_promedio']                                                           217152.263   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                      63774.586   \n","LinearRegression_O ['Temperatura_promedio']                                                 217065.118   \n","DecisionTreeRegressor_O ['Frecuencia_sequías']                                               67347.712   \n","DecisionTreeRegressor_C ['Frecuencia_sequías']                                               67347.712   \n","DecisionTreeRegressor_OC ['Frecuencia_sequías']                                              67347.712   \n","Ridge_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                           143423.486   \n","Ridge_B ['Cambio_lluvias', 'Frecuencia_sequías']                                            143423.486   \n","Ridge_O ['Temperatura_promedio']                                                            217251.770   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias']                                          235174.457   \n","RandomForestRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                             53465.890   \n","DecisionTreeRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.000   \n","LinearRegression_B ['Temperatura_promedio', 'Frecuencia_sequías']                           158963.789   \n","LinearRegression_CB ['Temperatura_promedio', 'Frecuencia_sequías']                          158963.789   \n","RandomForestRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                             58368.026   \n","Ridge_C ['Frecuencia_sequías']                                                              183341.747   \n","RandomForestRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                            53638.825   \n","Ridge_B ['Temperatura_promedio', 'Frecuencia_sequías']                                      178205.797   \n","Ridge_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                     178205.797   \n","LinearRegression_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                128268.498   \n","LinearRegression_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 128268.498   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.000   \n","DecisionTreeRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                0.000   \n","RandomForestRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                            56564.918   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     61986.623   \n","RandomForestRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                            50747.533   \n","RandomForestRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                           55297.791   \n","RandomForestRegressor_C ['Cambio_lluvias']                                                   88817.927   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias']                               126034.513   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         118569.278   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   64374.279   \n","RandomForestRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                             53337.162   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   115782.979   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    61863.259   \n","Ridge_C ['Cambio_lluvias', 'Frecuencia_sequías']                                            182322.703   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.000   \n","DecisionTreeRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.000   \n","Ridge_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                    173273.649   \n","Ridge_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                     173273.649   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    65214.416   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     67177.053   \n","Ridge_O ['Frecuencia_sequías']                                                              188096.969   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     65622.824   \n","Ridge_OC ['Frecuencia_sequías']                                                             171928.303   \n","LinearRegression_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         159356.061   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    64452.280   \n","Ridge_C ['Cambio_lluvias']                                                                  244381.636   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                           75239.247   \n","LinearRegression_C ['Temperatura_promedio', 'Frecuencia_sequías']                           160909.039   \n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']                                      192661.679   \n","Ridge_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                     175539.589   \n","RandomForestRegressor_O ['Temperatura_promedio']                                            102873.209   \n","LinearRegression_C ['Cambio_lluvias']                                                       244334.472   \n","RandomForestRegressor_OC ['Temperatura_promedio']                                           100309.193   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                          80663.963   \n","LinearRegression_C ['Frecuencia_sequías']                                                   161622.431   \n","RandomForestRegressor_C ['Temperatura_promedio']                                             98779.802   \n","LinearRegression_C ['Cambio_lluvias', 'Frecuencia_sequías']                                 161291.252   \n","LinearRegression_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         147482.991   \n","LinearRegression_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          147482.991   \n","LinearRegression_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               124982.615   \n","LinearRegression_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                124982.615   \n","LinearRegression_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                124984.283   \n","LinearRegression_OC ['Frecuencia_sequías']                                                  161437.731   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                           74218.529   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                          77090.550   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                         75850.346   \n","DecisionTreeRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.000   \n","DecisionTreeRegressor_OC ['Cambio_lluvias']                                                  74258.237   \n","DecisionTreeRegressor_C ['Cambio_lluvias']                                                   74258.237   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                           81534.436   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                          75466.904   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias']                                         120310.127   \n","RandomForestRegressor_OC ['Cambio_lluvias']                                                  89173.181   \n","LinearRegression_O ['Frecuencia_sequías']                                                   169181.926   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.000   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                               0.000   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.000   \n","DecisionTreeRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               0.000   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.000   \n","DecisionTreeRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.000   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.000   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                              0.000   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                  105937.070   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   105937.070   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                           0.000   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                              0.000   \n","RandomForestRegressor_O ['Cambio_lluvias']                                                   90063.687   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.000   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       0.000   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                              0.000   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.000   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.000   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         0.000   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                           0.000   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                          0.000   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                           0.000   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                               0.000   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                               0.000   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                        113671.999   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias']                                         113671.999   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                             0.000   \n","\n","                                                                                             rmse_test  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']                           117781.632   \n","Ridge_O ['Cambio_lluvias']                                                                  114401.443   \n","Ridge_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                          102904.114   \n","Ridge_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                           102904.114   \n","RandomForestRegressor_OC ['Frecuencia_sequías']                                              64011.735   \n","RandomForestRegressor_C ['Frecuencia_sequías']                                               64011.735   \n","RandomForestRegressor_O ['Frecuencia_sequías']                                               64011.735   \n","Ridge_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                           103236.568   \n","LinearRegression_O ['Cambio_lluvias']                                                       118644.209   \n","LinearRegression_O ['Cambio_lluvias', 'Frecuencia_sequías']                                 118807.742   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    104707.281   \n","Ridge_OC ['Cambio_lluvias']                                                                 112245.388   \n","Ridge_O ['Cambio_lluvias', 'Frecuencia_sequías']                                            109967.010   \n","LinearRegression_OC ['Temperatura_promedio']                                                161899.402   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                      63371.313   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias']                                          111392.114   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                     67726.189   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                       68083.552   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                       69220.108   \n","Ridge_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                     96345.261   \n","Ridge_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    96345.261   \n","LinearRegression_OC ['Temperatura_promedio', 'Frecuencia_sequías']                          105091.254   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                      70887.011   \n","LinearRegression_OC ['Cambio_lluvias']                                                      119303.850   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    126900.249   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                       72910.939   \n","Ridge_C ['Temperatura_promedio', 'Frecuencia_sequías']                                      128770.996   \n","Ridge_OC ['Temperatura_promedio']                                                           156393.760   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                      77627.293   \n","LinearRegression_O ['Temperatura_promedio']                                                 154436.561   \n","DecisionTreeRegressor_O ['Frecuencia_sequías']                                               82209.083   \n","DecisionTreeRegressor_C ['Frecuencia_sequías']                                               82209.083   \n","DecisionTreeRegressor_OC ['Frecuencia_sequías']                                              82209.083   \n","Ridge_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                            87425.457   \n","Ridge_B ['Cambio_lluvias', 'Frecuencia_sequías']                                             87425.457   \n","Ridge_O ['Temperatura_promedio']                                                            151912.519   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias']                                          194399.563   \n","RandomForestRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                             83409.232   \n","DecisionTreeRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                             74386.379   \n","LinearRegression_B ['Temperatura_promedio', 'Frecuencia_sequías']                            95930.693   \n","LinearRegression_CB ['Temperatura_promedio', 'Frecuencia_sequías']                           95930.693   \n","RandomForestRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                             88075.025   \n","Ridge_C ['Frecuencia_sequías']                                                              118089.595   \n","RandomForestRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                            87967.087   \n","Ridge_B ['Temperatura_promedio', 'Frecuencia_sequías']                                      112170.557   \n","Ridge_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                     112170.557   \n","LinearRegression_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                126796.337   \n","LinearRegression_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 126796.337   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                             80311.892   \n","DecisionTreeRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                            80311.892   \n","RandomForestRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                            91572.558   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     96569.336   \n","RandomForestRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                            92622.253   \n","RandomForestRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                           94824.364   \n","RandomForestRegressor_C ['Cambio_lluvias']                                                  111608.341   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias']                               131641.559   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         127708.081   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']  104051.630   \n","RandomForestRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                            100572.751   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   127774.702   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   105158.705   \n","Ridge_C ['Cambio_lluvias', 'Frecuencia_sequías']                                            104046.628   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    94074.439   \n","DecisionTreeRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                            94074.439   \n","Ridge_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                     93073.151   \n","Ridge_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                      93073.151   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   108108.032   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    108860.423   \n","Ridge_O ['Frecuencia_sequías']                                                              107466.294   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    109199.428   \n","Ridge_OC ['Frecuencia_sequías']                                                              89331.805   \n","LinearRegression_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          73849.736   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   111933.023   \n","Ridge_C ['Cambio_lluvias']                                                                  158602.781   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                          115965.742   \n","LinearRegression_C ['Temperatura_promedio', 'Frecuencia_sequías']                            71495.287   \n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']                                      107783.083   \n","Ridge_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                      88284.636   \n","RandomForestRegressor_O ['Temperatura_promedio']                                            130344.026   \n","LinearRegression_C ['Cambio_lluvias']                                                       156352.432   \n","RandomForestRegressor_OC ['Temperatura_promedio']                                           130295.555   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                         122095.994   \n","LinearRegression_C ['Frecuencia_sequías']                                                    65826.640   \n","RandomForestRegressor_C ['Temperatura_promedio']                                            130264.238   \n","LinearRegression_C ['Cambio_lluvias', 'Frecuencia_sequías']                                  64207.459   \n","LinearRegression_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         155151.711   \n","LinearRegression_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          155151.711   \n","LinearRegression_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               143334.690   \n","LinearRegression_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                143334.690   \n","LinearRegression_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                143434.718   \n","LinearRegression_OC ['Frecuencia_sequías']                                                   62483.841   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                          123339.288   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                         124903.489   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                        125291.919   \n","DecisionTreeRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                           112101.145   \n","DecisionTreeRegressor_OC ['Cambio_lluvias']                                                 128127.541   \n","DecisionTreeRegressor_C ['Cambio_lluvias']                                                  128127.541   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                          131472.405   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                         129348.167   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias']                                         148108.642   \n","RandomForestRegressor_OC ['Cambio_lluvias']                                                 135314.711   \n","LinearRegression_O ['Frecuencia_sequías']                                                    56086.767   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    122882.057   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                          123288.280   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    124632.794   \n","DecisionTreeRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                          124766.448   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   125896.783   \n","DecisionTreeRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                            127475.488   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    128257.553   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                         128452.326   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                  152769.431   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   152769.431   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                      130064.087   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                         131972.219   \n","RandomForestRegressor_O ['Cambio_lluvias']                                                  156017.139   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   140000.000   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']  142243.922   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                         144971.262   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                     147986.486   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                     147986.486   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                    147986.486   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                      148042.787   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                     149108.462   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                      149108.462   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                          154002.164   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                          155938.022   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                        181094.574   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias']                                         181094.574   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                        158745.079   \n","\n","                                                                                             mae_train  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']                           116050.836   \n","Ridge_O ['Cambio_lluvias']                                                                  120984.368   \n","Ridge_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                          117683.486   \n","Ridge_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                           117683.486   \n","RandomForestRegressor_OC ['Frecuencia_sequías']                                              59701.190   \n","RandomForestRegressor_C ['Frecuencia_sequías']                                               59701.190   \n","RandomForestRegressor_O ['Frecuencia_sequías']                                               59701.190   \n","Ridge_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                           119087.319   \n","LinearRegression_O ['Cambio_lluvias']                                                       121054.680   \n","LinearRegression_O ['Cambio_lluvias', 'Frecuencia_sequías']                                 121051.087   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    100461.379   \n","Ridge_OC ['Cambio_lluvias']                                                                 119480.382   \n","Ridge_O ['Cambio_lluvias', 'Frecuencia_sequías']                                            121091.332   \n","LinearRegression_OC ['Temperatura_promedio']                                                177454.255   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                      45771.429   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias']                                          102622.039   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                     45092.857   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                       46635.714   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                       45485.714   \n","Ridge_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    113279.251   \n","Ridge_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   113279.251   \n","LinearRegression_OC ['Temperatura_promedio', 'Frecuencia_sequías']                          116302.172   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                      44742.857   \n","LinearRegression_OC ['Cambio_lluvias']                                                      119504.331   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    140097.491   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                       45521.429   \n","Ridge_C ['Temperatura_promedio', 'Frecuencia_sequías']                                      145900.928   \n","Ridge_OC ['Temperatura_promedio']                                                           176989.637   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                      45264.286   \n","LinearRegression_O ['Temperatura_promedio']                                                 178402.620   \n","DecisionTreeRegressor_O ['Frecuencia_sequías']                                               47142.857   \n","DecisionTreeRegressor_C ['Frecuencia_sequías']                                               47142.857   \n","DecisionTreeRegressor_OC ['Frecuencia_sequías']                                              47142.857   \n","Ridge_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                           115514.490   \n","Ridge_B ['Cambio_lluvias', 'Frecuencia_sequías']                                            115514.490   \n","Ridge_O ['Temperatura_promedio']                                                            177651.969   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias']                                          196865.424   \n","RandomForestRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                             40871.429   \n","DecisionTreeRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.000   \n","LinearRegression_B ['Temperatura_promedio', 'Frecuencia_sequías']                           122410.285   \n","LinearRegression_CB ['Temperatura_promedio', 'Frecuencia_sequías']                          122410.285   \n","RandomForestRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                             45735.714   \n","Ridge_C ['Frecuencia_sequías']                                                              151013.929   \n","RandomForestRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                            40835.714   \n","Ridge_B ['Temperatura_promedio', 'Frecuencia_sequías']                                      145623.166   \n","Ridge_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                     145623.166   \n","LinearRegression_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                112440.496   \n","LinearRegression_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 112440.496   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.000   \n","DecisionTreeRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                0.000   \n","RandomForestRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                            43685.714   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     45985.714   \n","RandomForestRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                            37421.429   \n","RandomForestRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                           42900.000   \n","RandomForestRegressor_C ['Cambio_lluvias']                                                   68601.020   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias']                                97488.681   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          88372.861   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   44478.571   \n","RandomForestRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                             37485.714   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    98600.968   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    44071.429   \n","Ridge_C ['Cambio_lluvias', 'Frecuencia_sequías']                                            154552.098   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.000   \n","DecisionTreeRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.000   \n","Ridge_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                    139735.232   \n","Ridge_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                     139735.232   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    45871.429   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     50178.571   \n","Ridge_O ['Frecuencia_sequías']                                                              148420.981   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     45735.714   \n","Ridge_OC ['Frecuencia_sequías']                                                             135470.854   \n","LinearRegression_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         125197.570   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    48007.143   \n","Ridge_C ['Cambio_lluvias']                                                                  219161.491   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                           57157.143   \n","LinearRegression_C ['Temperatura_promedio', 'Frecuencia_sequías']                           125021.280   \n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']                                      156669.735   \n","Ridge_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                     141278.784   \n","RandomForestRegressor_O ['Temperatura_promedio']                                             79000.000   \n","LinearRegression_C ['Cambio_lluvias']                                                       219006.923   \n","RandomForestRegressor_OC ['Temperatura_promedio']                                            76942.857   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                          58392.857   \n","LinearRegression_C ['Frecuencia_sequías']                                                   123041.919   \n","RandomForestRegressor_C ['Temperatura_promedio']                                             74207.143   \n","LinearRegression_C ['Cambio_lluvias', 'Frecuencia_sequías']                                 124319.546   \n","LinearRegression_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         107418.761   \n","LinearRegression_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          107418.761   \n","LinearRegression_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               109889.323   \n","LinearRegression_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                109889.323   \n","LinearRegression_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                109918.455   \n","LinearRegression_OC ['Frecuencia_sequías']                                                  123380.090   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                           59042.857   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                          59885.714   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                         58592.857   \n","DecisionTreeRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.000   \n","DecisionTreeRegressor_OC ['Cambio_lluvias']                                                  34285.714   \n","DecisionTreeRegressor_C ['Cambio_lluvias']                                                   34285.714   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                           58128.571   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                          57450.000   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias']                                         101091.444   \n","RandomForestRegressor_OC ['Cambio_lluvias']                                                  68877.211   \n","LinearRegression_O ['Frecuencia_sequías']                                                   132394.923   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.000   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                               0.000   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.000   \n","DecisionTreeRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               0.000   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.000   \n","DecisionTreeRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.000   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.000   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                              0.000   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   89136.228   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    89136.228   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                           0.000   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                              0.000   \n","RandomForestRegressor_O ['Cambio_lluvias']                                                   67441.497   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.000   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       0.000   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                              0.000   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.000   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.000   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         0.000   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                           0.000   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                          0.000   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                           0.000   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                               0.000   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                               0.000   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                         93968.226   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias']                                          93968.226   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                             0.000   \n","\n","                                                                                              mae_test  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']                            99450.967   \n","Ridge_O ['Cambio_lluvias']                                                                   94564.850   \n","Ridge_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                           82727.350   \n","Ridge_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                            82727.350   \n","RandomForestRegressor_OC ['Frecuencia_sequías']                                              53789.246   \n","RandomForestRegressor_C ['Frecuencia_sequías']                                               53789.246   \n","RandomForestRegressor_O ['Frecuencia_sequías']                                               53789.246   \n","Ridge_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                            82413.007   \n","LinearRegression_O ['Cambio_lluvias']                                                        97271.863   \n","LinearRegression_O ['Cambio_lluvias', 'Frecuencia_sequías']                                  97432.775   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                     87930.584   \n","Ridge_OC ['Cambio_lluvias']                                                                  89332.582   \n","Ridge_O ['Cambio_lluvias', 'Frecuencia_sequías']                                             90122.893   \n","LinearRegression_OC ['Temperatura_promedio']                                                138908.566   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                      56833.333   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias']                                           90247.864   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                     65100.000   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                       59900.000   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                       60900.000   \n","Ridge_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                     90234.202   \n","Ridge_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    90234.202   \n","LinearRegression_OC ['Temperatura_promedio', 'Frecuencia_sequías']                           89373.790   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                      68050.000   \n","LinearRegression_OC ['Cambio_lluvias']                                                       93073.840   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                    118726.000   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                       69950.000   \n","Ridge_C ['Temperatura_promedio', 'Frecuencia_sequías']                                      116159.218   \n","Ridge_OC ['Temperatura_promedio']                                                           133069.392   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                      68066.667   \n","LinearRegression_O ['Temperatura_promedio']                                                 130131.723   \n","DecisionTreeRegressor_O ['Frecuencia_sequías']                                               75000.000   \n","DecisionTreeRegressor_C ['Frecuencia_sequías']                                               75000.000   \n","DecisionTreeRegressor_OC ['Frecuencia_sequías']                                              75000.000   \n","Ridge_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                            75276.305   \n","Ridge_B ['Cambio_lluvias', 'Frecuencia_sequías']                                             75276.305   \n","Ridge_O ['Temperatura_promedio']                                                            127011.830   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias']                                          181927.734   \n","RandomForestRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                             72866.667   \n","DecisionTreeRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                             70000.000   \n","LinearRegression_B ['Temperatura_promedio', 'Frecuencia_sequías']                            85406.911   \n","LinearRegression_CB ['Temperatura_promedio', 'Frecuencia_sequías']                           85406.911   \n","RandomForestRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                             66866.667   \n","Ridge_C ['Frecuencia_sequías']                                                              108269.054   \n","RandomForestRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                            72983.333   \n","Ridge_B ['Temperatura_promedio', 'Frecuencia_sequías']                                      104384.755   \n","Ridge_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                     104384.755   \n","LinearRegression_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                103930.969   \n","LinearRegression_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 103930.969   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                             78333.333   \n","DecisionTreeRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                            78333.333   \n","RandomForestRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                            69266.667   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     76733.333   \n","RandomForestRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                            83216.667   \n","RandomForestRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                           72633.333   \n","RandomForestRegressor_C ['Cambio_lluvias']                                                   85465.873   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias']                               112223.226   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         111933.386   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   79183.333   \n","RandomForestRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                             88516.667   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   108808.671   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    80333.333   \n","Ridge_C ['Cambio_lluvias', 'Frecuencia_sequías']                                             97282.330   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    88333.333   \n","DecisionTreeRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                            88333.333   \n","Ridge_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                     89242.604   \n","Ridge_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                      89242.604   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    86933.333   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     80683.333   \n","Ridge_O ['Frecuencia_sequías']                                                              100118.079   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     86383.333   \n","Ridge_OC ['Frecuencia_sequías']                                                              85841.645   \n","LinearRegression_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          63661.606   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    85483.333   \n","Ridge_C ['Cambio_lluvias']                                                                  144506.100   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                           85333.333   \n","LinearRegression_C ['Temperatura_promedio', 'Frecuencia_sequías']                            62020.604   \n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']                                       97509.590   \n","Ridge_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                      85752.953   \n","RandomForestRegressor_O ['Temperatura_promedio']                                             96683.333   \n","LinearRegression_C ['Cambio_lluvias']                                                       142313.411   \n","RandomForestRegressor_OC ['Temperatura_promedio']                                            96650.000   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                          83116.667   \n","LinearRegression_C ['Frecuencia_sequías']                                                    62942.750   \n","RandomForestRegressor_C ['Temperatura_promedio']                                             96650.000   \n","LinearRegression_C ['Cambio_lluvias', 'Frecuencia_sequías']                                  60612.530   \n","LinearRegression_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         128131.427   \n","LinearRegression_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          128131.427   \n","LinearRegression_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               112347.668   \n","LinearRegression_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                112347.668   \n","LinearRegression_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                112621.179   \n","LinearRegression_OC ['Frecuencia_sequías']                                                   60111.824   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                           86166.667   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                          84650.000   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                         80883.333   \n","DecisionTreeRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                            93333.333   \n","DecisionTreeRegressor_OC ['Cambio_lluvias']                                                 108333.333   \n","DecisionTreeRegressor_C ['Cambio_lluvias']                                                  108333.333   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                           91266.667   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                          82816.667   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias']                                         122891.393   \n","RandomForestRegressor_OC ['Cambio_lluvias']                                                 100704.762   \n","LinearRegression_O ['Frecuencia_sequías']                                                    50136.910   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    113333.333   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                          103333.333   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    103333.333   \n","DecisionTreeRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                          110000.000   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   105000.000   \n","DecisionTreeRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                            108333.333   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    111666.667   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                         106666.667   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                  121839.585   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                   121839.585   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                      118333.333   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                         115000.000   \n","RandomForestRegressor_O ['Cambio_lluvias']                                                  112810.317   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   120000.000   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']  136666.667   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                         118333.333   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                     136666.667   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                     136666.667   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                    136666.667   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                      135000.000   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                     136666.667   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                      136666.667   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                          131666.667   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                          138333.333   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                        147397.634   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias']                                         147397.634   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                        136666.667   \n","\n","                                                                                            r2_train  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']                               64.3   \n","Ridge_O ['Cambio_lluvias']                                                                      65.5   \n","Ridge_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                              71.4   \n","Ridge_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                               71.4   \n","RandomForestRegressor_OC ['Frecuencia_sequías']                                                 91.1   \n","RandomForestRegressor_C ['Frecuencia_sequías']                                                  91.1   \n","RandomForestRegressor_O ['Frecuencia_sequías']                                                  91.1   \n","Ridge_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                               70.2   \n","LinearRegression_O ['Cambio_lluvias']                                                           65.8   \n","LinearRegression_O ['Cambio_lluvias', 'Frecuencia_sequías']                                     65.8   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                        73.9   \n","Ridge_OC ['Cambio_lluvias']                                                                     69.9   \n","Ridge_O ['Cambio_lluvias', 'Frecuencia_sequías']                                                65.5   \n","LinearRegression_OC ['Temperatura_promedio']                                                    28.0   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                         93.9   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias']                                              72.7   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                        93.8   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                          93.9   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                          94.1   \n","Ridge_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                        69.2   \n","Ridge_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       69.2   \n","LinearRegression_OC ['Temperatura_promedio', 'Frecuencia_sequías']                              64.3   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                         94.0   \n","LinearRegression_OC ['Cambio_lluvias']                                                          70.2   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                        51.0   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                          93.8   \n","Ridge_C ['Temperatura_promedio', 'Frecuencia_sequías']                                          49.0   \n","Ridge_OC ['Temperatura_promedio']                                                               27.9   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                         93.8   \n","LinearRegression_O ['Temperatura_promedio']                                                     27.9   \n","DecisionTreeRegressor_O ['Frecuencia_sequías']                                                  93.1   \n","DecisionTreeRegressor_C ['Frecuencia_sequías']                                                  93.1   \n","DecisionTreeRegressor_OC ['Frecuencia_sequías']                                                 93.1   \n","Ridge_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                               68.5   \n","Ridge_B ['Cambio_lluvias', 'Frecuencia_sequías']                                                68.5   \n","Ridge_O ['Temperatura_promedio']                                                                27.8   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias']                                              15.4   \n","RandomForestRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                                95.6   \n","DecisionTreeRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                               100.0   \n","LinearRegression_B ['Temperatura_promedio', 'Frecuencia_sequías']                               61.3   \n","LinearRegression_CB ['Temperatura_promedio', 'Frecuencia_sequías']                              61.3   \n","RandomForestRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                                94.8   \n","Ridge_C ['Frecuencia_sequías']                                                                  48.6   \n","RandomForestRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                               95.6   \n","Ridge_B ['Temperatura_promedio', 'Frecuencia_sequías']                                          51.4   \n","Ridge_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                         51.4   \n","LinearRegression_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                    74.8   \n","LinearRegression_B ['Cambio_lluvias', 'Frecuencia_sequías']                                     74.8   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                               100.0   \n","DecisionTreeRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                              100.0   \n","RandomForestRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                               95.1   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        94.1   \n","RandomForestRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                               96.1   \n","RandomForestRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                              95.3   \n","RandomForestRegressor_C ['Cambio_lluvias']                                                      87.9   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias']                                   75.7   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             78.5   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      93.7   \n","RandomForestRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                                95.6   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       79.5   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       94.1   \n","Ridge_C ['Cambio_lluvias', 'Frecuencia_sequías']                                                49.1   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      100.0   \n","DecisionTreeRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                              100.0   \n","Ridge_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                        54.1   \n","Ridge_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                         54.1   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       93.5   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        93.1   \n","Ridge_O ['Frecuencia_sequías']                                                                  45.9   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        93.4   \n","Ridge_OC ['Frecuencia_sequías']                                                                 54.8   \n","LinearRegression_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             61.1   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       93.6   \n","Ridge_C ['Cambio_lluvias']                                                                       8.6   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                              91.3   \n","LinearRegression_C ['Temperatura_promedio', 'Frecuencia_sequías']                               60.4   \n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']                                          43.2   \n","Ridge_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                         52.9   \n","RandomForestRegressor_O ['Temperatura_promedio']                                                83.8   \n","LinearRegression_C ['Cambio_lluvias']                                                            8.7   \n","RandomForestRegressor_OC ['Temperatura_promedio']                                               84.6   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                             90.0   \n","LinearRegression_C ['Frecuencia_sequías']                                                       60.0   \n","RandomForestRegressor_C ['Temperatura_promedio']                                                85.1   \n","LinearRegression_C ['Cambio_lluvias', 'Frecuencia_sequías']                                     60.2   \n","LinearRegression_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                             66.7   \n","LinearRegression_OB ['Temperatura_promedio', 'Frecuencia_sequías']                              66.7   \n","LinearRegression_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                   76.1   \n","LinearRegression_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                    76.1   \n","LinearRegression_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                    76.1   \n","LinearRegression_OC ['Frecuencia_sequías']                                                      60.1   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                              91.6   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                             90.9   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                            91.2   \n","DecisionTreeRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                              100.0   \n","DecisionTreeRegressor_OC ['Cambio_lluvias']                                                     91.6   \n","DecisionTreeRegressor_C ['Cambio_lluvias']                                                      91.6   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                              89.8   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                             91.3   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias']                                             77.9   \n","RandomForestRegressor_OC ['Cambio_lluvias']                                                     87.8   \n","LinearRegression_O ['Frecuencia_sequías']                                                       56.2   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       100.0   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                             100.0   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       100.0   \n","DecisionTreeRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                             100.0   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      100.0   \n","DecisionTreeRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                               100.0   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       100.0   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                            100.0   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      82.8   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       82.8   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                         100.0   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                            100.0   \n","RandomForestRegressor_O ['Cambio_lluvias']                                                      87.6   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      100.0   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     100.0   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                            100.0   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                        100.0   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                        100.0   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                       100.0   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                         100.0   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                        100.0   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                         100.0   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                             100.0   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                             100.0   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                            80.2   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias']                                             80.2   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                           100.0   \n","\n","                                                                                            r2_test  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']                              64.0   \n","Ridge_O ['Cambio_lluvias']                                                                     66.0   \n","Ridge_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                             72.5   \n","Ridge_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                              72.5   \n","RandomForestRegressor_OC ['Frecuencia_sequías']                                                89.4   \n","RandomForestRegressor_C ['Frecuencia_sequías']                                                 89.4   \n","RandomForestRegressor_O ['Frecuencia_sequías']                                                 89.4   \n","Ridge_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                              72.3   \n","LinearRegression_O ['Cambio_lluvias']                                                          63.5   \n","LinearRegression_O ['Cambio_lluvias', 'Frecuencia_sequías']                                    63.4   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       71.5   \n","Ridge_OC ['Cambio_lluvias']                                                                    67.3   \n","Ridge_O ['Cambio_lluvias', 'Frecuencia_sequías']                                               68.6   \n","LinearRegression_OC ['Temperatura_promedio']                                                   32.0   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                        89.6   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias']                                             67.8   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                       88.1   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                         88.0   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                         87.6   \n","Ridge_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       75.9   \n","Ridge_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      75.9   \n","LinearRegression_OC ['Temperatura_promedio', 'Frecuencia_sequías']                             71.3   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                        87.0   \n","LinearRegression_OC ['Cambio_lluvias']                                                         63.1   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       58.2   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                         86.2   \n","Ridge_C ['Temperatura_promedio', 'Frecuencia_sequías']                                         57.0   \n","Ridge_OC ['Temperatura_promedio']                                                              36.5   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                        84.4   \n","LinearRegression_O ['Temperatura_promedio']                                                    38.1   \n","DecisionTreeRegressor_O ['Frecuencia_sequías']                                                 82.5   \n","DecisionTreeRegressor_C ['Frecuencia_sequías']                                                 82.5   \n","DecisionTreeRegressor_OC ['Frecuencia_sequías']                                                82.5   \n","Ridge_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                              80.2   \n","Ridge_B ['Cambio_lluvias', 'Frecuencia_sequías']                                               80.2   \n","Ridge_O ['Temperatura_promedio']                                                               40.1   \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias']                                              1.9   \n","RandomForestRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                               81.9   \n","DecisionTreeRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                               85.6   \n","LinearRegression_B ['Temperatura_promedio', 'Frecuencia_sequías']                              76.1   \n","LinearRegression_CB ['Temperatura_promedio', 'Frecuencia_sequías']                             76.1   \n","RandomForestRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                               79.9   \n","Ridge_C ['Frecuencia_sequías']                                                                 63.8   \n","RandomForestRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                              79.9   \n","Ridge_B ['Temperatura_promedio', 'Frecuencia_sequías']                                         67.3   \n","Ridge_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                        67.3   \n","LinearRegression_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                   58.3   \n","LinearRegression_B ['Cambio_lluvias', 'Frecuencia_sequías']                                    58.3   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                               83.3   \n","DecisionTreeRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                              83.3   \n","RandomForestRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                              78.2   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       75.8   \n","RandomForestRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                              77.7   \n","RandomForestRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                             76.7   \n","RandomForestRegressor_C ['Cambio_lluvias']                                                     67.7   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias']                                  55.0   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            57.7   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     71.9   \n","RandomForestRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                               73.8   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      57.6   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      71.3   \n","Ridge_C ['Cambio_lluvias', 'Frecuencia_sequías']                                               71.9   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      77.0   \n","DecisionTreeRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                              77.0   \n","Ridge_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                       77.5   \n","Ridge_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                        77.5   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      69.7   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       69.2   \n","Ridge_O ['Frecuencia_sequías']                                                                 70.0   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       69.1   \n","Ridge_OC ['Frecuencia_sequías']                                                                79.3   \n","LinearRegression_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            85.8   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      67.5   \n","Ridge_C ['Cambio_lluvias']                                                                     34.7   \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                             65.1   \n","LinearRegression_C ['Temperatura_promedio', 'Frecuencia_sequías']                              86.7   \n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']                                         69.9   \n","Ridge_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                        79.8   \n","RandomForestRegressor_O ['Temperatura_promedio']                                               55.9   \n","LinearRegression_C ['Cambio_lluvias']                                                          36.6   \n","RandomForestRegressor_OC ['Temperatura_promedio']                                              55.9   \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                            61.3   \n","LinearRegression_C ['Frecuencia_sequías']                                                      88.8   \n","RandomForestRegressor_C ['Temperatura_promedio']                                               56.0   \n","LinearRegression_C ['Cambio_lluvias', 'Frecuencia_sequías']                                    89.3   \n","LinearRegression_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                            37.5   \n","LinearRegression_OB ['Temperatura_promedio', 'Frecuencia_sequías']                             37.5   \n","LinearRegression_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                  46.7   \n","LinearRegression_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                   46.7   \n","LinearRegression_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                   46.6   \n","LinearRegression_OC ['Frecuencia_sequías']                                                     89.9   \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                             60.5   \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                            59.5   \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                           59.3   \n","DecisionTreeRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                              67.4   \n","DecisionTreeRegressor_OC ['Cambio_lluvias']                                                    57.4   \n","DecisionTreeRegressor_C ['Cambio_lluvias']                                                     57.4   \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                             55.1   \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                            56.6   \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias']                                            43.1   \n","RandomForestRegressor_OC ['Cambio_lluvias']                                                    52.5   \n","LinearRegression_O ['Frecuencia_sequías']                                                      91.8   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       60.8   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                             60.6   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       59.7   \n","DecisionTreeRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                             59.6   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      58.9   \n","DecisionTreeRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                               57.8   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       57.3   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                            57.2   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                     39.4   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      39.4   \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                         56.1   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                            54.8   \n","RandomForestRegressor_O ['Cambio_lluvias']                                                     36.8   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      49.1   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     47.5   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                            45.5   \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                        43.2   \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                        43.2   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                       43.2   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                         43.1   \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                        42.3   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                         42.3   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                             38.5   \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                             36.9   \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                           14.9   \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias']                                            14.9   \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                           34.6   \n","\n","                                                                                            delta_r2  \n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']                                0.3  \n","Ridge_O ['Cambio_lluvias']                                                                       0.5  \n","Ridge_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                               1.1  \n","Ridge_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                                1.1  \n","RandomForestRegressor_OC ['Frecuencia_sequías']                                                  1.7  \n","RandomForestRegressor_C ['Frecuencia_sequías']                                                   1.7  \n","RandomForestRegressor_O ['Frecuencia_sequías']                                                   1.7  \n","Ridge_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                                2.1  \n","LinearRegression_O ['Cambio_lluvias']                                                            2.3  \n","LinearRegression_O ['Cambio_lluvias', 'Frecuencia_sequías']                                      2.4  \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         2.4  \n","Ridge_OC ['Cambio_lluvias']                                                                      2.6  \n","Ridge_O ['Cambio_lluvias', 'Frecuencia_sequías']                                                 3.1  \n","LinearRegression_OC ['Temperatura_promedio']                                                     4.0  \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          4.3  \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias']                                               4.9  \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         5.7  \n","RandomForestRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                           5.9  \n","RandomForestRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                           6.5  \n","Ridge_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         6.7  \n","Ridge_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                        6.7  \n","LinearRegression_OC ['Temperatura_promedio', 'Frecuencia_sequías']                               7.0  \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                          7.0  \n","LinearRegression_OC ['Cambio_lluvias']                                                           7.1  \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         7.2  \n","RandomForestRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                           7.6  \n","Ridge_C ['Temperatura_promedio', 'Frecuencia_sequías']                                           8.0  \n","Ridge_OC ['Temperatura_promedio']                                                                8.6  \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                          9.4  \n","LinearRegression_O ['Temperatura_promedio']                                                     10.2  \n","DecisionTreeRegressor_O ['Frecuencia_sequías']                                                  10.6  \n","DecisionTreeRegressor_C ['Frecuencia_sequías']                                                  10.6  \n","DecisionTreeRegressor_OC ['Frecuencia_sequías']                                                 10.6  \n","Ridge_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                               11.7  \n","Ridge_B ['Cambio_lluvias', 'Frecuencia_sequías']                                                11.7  \n","Ridge_O ['Temperatura_promedio']                                                                12.3  \n","Ridge_C ['Temperatura_promedio', 'Cambio_lluvias']                                              13.5  \n","RandomForestRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                                13.7  \n","DecisionTreeRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']                                14.4  \n","LinearRegression_B ['Temperatura_promedio', 'Frecuencia_sequías']                               14.8  \n","LinearRegression_CB ['Temperatura_promedio', 'Frecuencia_sequías']                              14.8  \n","RandomForestRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                                14.9  \n","Ridge_C ['Frecuencia_sequías']                                                                  15.2  \n","RandomForestRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                               15.7  \n","Ridge_B ['Temperatura_promedio', 'Frecuencia_sequías']                                          15.9  \n","Ridge_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                         15.9  \n","LinearRegression_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                    16.5  \n","LinearRegression_B ['Cambio_lluvias', 'Frecuencia_sequías']                                     16.5  \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                                16.7  \n","DecisionTreeRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                               16.7  \n","RandomForestRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                               16.9  \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        18.3  \n","RandomForestRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']                               18.4  \n","RandomForestRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                              18.6  \n","RandomForestRegressor_C ['Cambio_lluvias']                                                      20.2  \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias']                                   20.7  \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             20.8  \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      21.8  \n","RandomForestRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']                                21.8  \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       21.9  \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       22.8  \n","Ridge_C ['Cambio_lluvias', 'Frecuencia_sequías']                                                22.8  \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       23.0  \n","DecisionTreeRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']                               23.0  \n","Ridge_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                        23.4  \n","Ridge_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                         23.4  \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       23.8  \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        23.9  \n","Ridge_O ['Frecuencia_sequías']                                                                  24.1  \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        24.3  \n","Ridge_OC ['Frecuencia_sequías']                                                                 24.5  \n","LinearRegression_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             24.7  \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       26.1  \n","Ridge_C ['Cambio_lluvias']                                                                      26.1  \n","RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                              26.2  \n","LinearRegression_C ['Temperatura_promedio', 'Frecuencia_sequías']                               26.3  \n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']                                          26.7  \n","Ridge_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                         26.9  \n","RandomForestRegressor_O ['Temperatura_promedio']                                                27.9  \n","LinearRegression_C ['Cambio_lluvias']                                                           27.9  \n","RandomForestRegressor_OC ['Temperatura_promedio']                                               28.7  \n","RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                             28.7  \n","LinearRegression_C ['Frecuencia_sequías']                                                       28.8  \n","RandomForestRegressor_C ['Temperatura_promedio']                                                29.1  \n","LinearRegression_C ['Cambio_lluvias', 'Frecuencia_sequías']                                     29.1  \n","LinearRegression_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                             29.2  \n","LinearRegression_OB ['Temperatura_promedio', 'Frecuencia_sequías']                              29.2  \n","LinearRegression_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                   29.4  \n","LinearRegression_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                    29.4  \n","LinearRegression_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                    29.5  \n","LinearRegression_OC ['Frecuencia_sequías']                                                      29.8  \n","RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                              31.1  \n","RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                             31.4  \n","RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                            31.9  \n","DecisionTreeRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']                               32.6  \n","DecisionTreeRegressor_OC ['Cambio_lluvias']                                                     34.2  \n","DecisionTreeRegressor_C ['Cambio_lluvias']                                                      34.2  \n","RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                              34.7  \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                             34.7  \n","Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias']                                             34.8  \n","RandomForestRegressor_OC ['Cambio_lluvias']                                                     35.3  \n","LinearRegression_O ['Frecuencia_sequías']                                                       35.6  \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        39.2  \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']                              39.4  \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        40.3  \n","DecisionTreeRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                              40.4  \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       41.1  \n","DecisionTreeRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']                                42.2  \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        42.7  \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']                             42.8  \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      43.4  \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       43.4  \n","DecisionTreeRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']                          43.9  \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']                             45.2  \n","RandomForestRegressor_O ['Cambio_lluvias']                                                      50.8  \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       50.9  \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      52.5  \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']                             54.5  \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']                         56.8  \n","DecisionTreeRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']                         56.8  \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                        56.8  \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']                          56.9  \n","DecisionTreeRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']                         57.7  \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']                          57.7  \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']                              61.5  \n","DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']                              63.1  \n","Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                            65.3  \n","Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias']                                             65.3  \n","DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']                            65.4  "],"text/html":["\n","  <div id=\"df-f462c7b4-3709-42dd-978e-75fb4462cea8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_train</th>\n","      <th>mse_test</th>\n","      <th>rmse_train</th>\n","      <th>rmse_test</th>\n","      <th>mae_train</th>\n","      <th>mae_test</th>\n","      <th>r2_train</th>\n","      <th>r2_test</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>2.336348e+10</td>\n","      <td>1.387251e+10</td>\n","      <td>152851.171</td>\n","      <td>117781.632</td>\n","      <td>116050.836</td>\n","      <td>99450.967</td>\n","      <td>64.3</td>\n","      <td>64.0</td>\n","      <td>0.3</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_O ['Cambio_lluvias']</th>\n","      <td>2.254368e+10</td>\n","      <td>1.308769e+10</td>\n","      <td>150145.529</td>\n","      <td>114401.443</td>\n","      <td>120984.368</td>\n","      <td>94564.850</td>\n","      <td>65.5</td>\n","      <td>66.0</td>\n","      <td>0.5</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OCB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.867200e+10</td>\n","      <td>1.058926e+10</td>\n","      <td>136645.532</td>\n","      <td>102904.114</td>\n","      <td>117683.486</td>\n","      <td>82727.350</td>\n","      <td>71.4</td>\n","      <td>72.5</td>\n","      <td>1.1</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.867200e+10</td>\n","      <td>1.058926e+10</td>\n","      <td>136645.532</td>\n","      <td>102904.114</td>\n","      <td>117683.486</td>\n","      <td>82727.350</td>\n","      <td>71.4</td>\n","      <td>72.5</td>\n","      <td>1.1</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OC ['Frecuencia_sequías']</th>\n","      <td>5.836006e+09</td>\n","      <td>4.097502e+09</td>\n","      <td>76393.754</td>\n","      <td>64011.735</td>\n","      <td>59701.190</td>\n","      <td>53789.246</td>\n","      <td>91.1</td>\n","      <td>89.4</td>\n","      <td>1.7</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_C ['Frecuencia_sequías']</th>\n","      <td>5.836006e+09</td>\n","      <td>4.097502e+09</td>\n","      <td>76393.754</td>\n","      <td>64011.735</td>\n","      <td>59701.190</td>\n","      <td>53789.246</td>\n","      <td>91.1</td>\n","      <td>89.4</td>\n","      <td>1.7</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_O ['Frecuencia_sequías']</th>\n","      <td>5.836006e+09</td>\n","      <td>4.097502e+09</td>\n","      <td>76393.754</td>\n","      <td>64011.735</td>\n","      <td>59701.190</td>\n","      <td>53789.246</td>\n","      <td>91.1</td>\n","      <td>89.4</td>\n","      <td>1.7</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OC ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.946096e+10</td>\n","      <td>1.065779e+10</td>\n","      <td>139502.530</td>\n","      <td>103236.568</td>\n","      <td>119087.319</td>\n","      <td>82413.007</td>\n","      <td>70.2</td>\n","      <td>72.3</td>\n","      <td>2.1</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_O ['Cambio_lluvias']</th>\n","      <td>2.235255e+10</td>\n","      <td>1.407645e+10</td>\n","      <td>149507.687</td>\n","      <td>118644.209</td>\n","      <td>121054.680</td>\n","      <td>97271.863</td>\n","      <td>65.8</td>\n","      <td>63.5</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_O ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.235252e+10</td>\n","      <td>1.411528e+10</td>\n","      <td>149507.581</td>\n","      <td>118807.742</td>\n","      <td>121051.087</td>\n","      <td>97432.775</td>\n","      <td>65.8</td>\n","      <td>63.4</td>\n","      <td>2.4</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.708738e+10</td>\n","      <td>1.096361e+10</td>\n","      <td>130718.724</td>\n","      <td>104707.281</td>\n","      <td>100461.379</td>\n","      <td>87930.584</td>\n","      <td>73.9</td>\n","      <td>71.5</td>\n","      <td>2.4</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OC ['Cambio_lluvias']</th>\n","      <td>1.969029e+10</td>\n","      <td>1.259903e+10</td>\n","      <td>140322.085</td>\n","      <td>112245.388</td>\n","      <td>119480.382</td>\n","      <td>89332.582</td>\n","      <td>69.9</td>\n","      <td>67.3</td>\n","      <td>2.6</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_O ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.254926e+10</td>\n","      <td>1.209274e+10</td>\n","      <td>150164.114</td>\n","      <td>109967.010</td>\n","      <td>121091.332</td>\n","      <td>90122.893</td>\n","      <td>65.5</td>\n","      <td>68.6</td>\n","      <td>3.1</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_OC ['Temperatura_promedio']</th>\n","      <td>4.706824e+10</td>\n","      <td>2.621142e+10</td>\n","      <td>216952.171</td>\n","      <td>161899.402</td>\n","      <td>177454.255</td>\n","      <td>138908.566</td>\n","      <td>28.0</td>\n","      <td>32.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.977647e+09</td>\n","      <td>4.015923e+09</td>\n","      <td>63068.591</td>\n","      <td>63371.313</td>\n","      <td>45771.429</td>\n","      <td>56833.333</td>\n","      <td>93.9</td>\n","      <td>89.6</td>\n","      <td>4.3</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_O ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.784301e+10</td>\n","      <td>1.240820e+10</td>\n","      <td>133577.735</td>\n","      <td>111392.114</td>\n","      <td>102622.039</td>\n","      <td>90247.864</td>\n","      <td>72.7</td>\n","      <td>67.8</td>\n","      <td>4.9</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>4.035504e+09</td>\n","      <td>4.586837e+09</td>\n","      <td>63525.614</td>\n","      <td>67726.189</td>\n","      <td>45092.857</td>\n","      <td>65100.000</td>\n","      <td>93.8</td>\n","      <td>88.1</td>\n","      <td>5.7</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.975094e+09</td>\n","      <td>4.635370e+09</td>\n","      <td>63048.343</td>\n","      <td>68083.552</td>\n","      <td>46635.714</td>\n","      <td>59900.000</td>\n","      <td>93.9</td>\n","      <td>88.0</td>\n","      <td>5.9</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.880909e+09</td>\n","      <td>4.791423e+09</td>\n","      <td>62296.939</td>\n","      <td>69220.108</td>\n","      <td>45485.714</td>\n","      <td>60900.000</td>\n","      <td>94.1</td>\n","      <td>87.6</td>\n","      <td>6.5</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.015923e+10</td>\n","      <td>9.282409e+09</td>\n","      <td>141983.187</td>\n","      <td>96345.261</td>\n","      <td>113279.251</td>\n","      <td>90234.202</td>\n","      <td>69.2</td>\n","      <td>75.9</td>\n","      <td>6.7</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.015923e+10</td>\n","      <td>9.282409e+09</td>\n","      <td>141983.187</td>\n","      <td>96345.261</td>\n","      <td>113279.251</td>\n","      <td>90234.202</td>\n","      <td>69.2</td>\n","      <td>75.9</td>\n","      <td>6.7</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_OC ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>2.330574e+10</td>\n","      <td>1.104417e+10</td>\n","      <td>152662.186</td>\n","      <td>105091.254</td>\n","      <td>116302.172</td>\n","      <td>89373.790</td>\n","      <td>64.3</td>\n","      <td>71.3</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.903307e+09</td>\n","      <td>5.024968e+09</td>\n","      <td>62476.453</td>\n","      <td>70887.011</td>\n","      <td>44742.857</td>\n","      <td>68050.000</td>\n","      <td>94.0</td>\n","      <td>87.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_OC ['Cambio_lluvias']</th>\n","      <td>1.950481e+10</td>\n","      <td>1.423341e+10</td>\n","      <td>139659.627</td>\n","      <td>119303.850</td>\n","      <td>119504.331</td>\n","      <td>93073.840</td>\n","      <td>70.2</td>\n","      <td>63.1</td>\n","      <td>7.1</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>3.204801e+10</td>\n","      <td>1.610367e+10</td>\n","      <td>179019.567</td>\n","      <td>126900.249</td>\n","      <td>140097.491</td>\n","      <td>118726.000</td>\n","      <td>51.0</td>\n","      <td>58.2</td>\n","      <td>7.2</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>4.076719e+09</td>\n","      <td>5.316005e+09</td>\n","      <td>63849.192</td>\n","      <td>72910.939</td>\n","      <td>45521.429</td>\n","      <td>69950.000</td>\n","      <td>93.8</td>\n","      <td>86.2</td>\n","      <td>7.6</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_C ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.335796e+10</td>\n","      <td>1.658197e+10</td>\n","      <td>182641.613</td>\n","      <td>128770.996</td>\n","      <td>145900.928</td>\n","      <td>116159.218</td>\n","      <td>49.0</td>\n","      <td>57.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OC ['Temperatura_promedio']</th>\n","      <td>4.715511e+10</td>\n","      <td>2.445901e+10</td>\n","      <td>217152.263</td>\n","      <td>156393.760</td>\n","      <td>176989.637</td>\n","      <td>133069.392</td>\n","      <td>27.9</td>\n","      <td>36.5</td>\n","      <td>8.6</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>4.067198e+09</td>\n","      <td>6.025997e+09</td>\n","      <td>63774.586</td>\n","      <td>77627.293</td>\n","      <td>45264.286</td>\n","      <td>68066.667</td>\n","      <td>93.8</td>\n","      <td>84.4</td>\n","      <td>9.4</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_O ['Temperatura_promedio']</th>\n","      <td>4.711727e+10</td>\n","      <td>2.385065e+10</td>\n","      <td>217065.118</td>\n","      <td>154436.561</td>\n","      <td>178402.620</td>\n","      <td>130131.723</td>\n","      <td>27.9</td>\n","      <td>38.1</td>\n","      <td>10.2</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_O ['Frecuencia_sequías']</th>\n","      <td>4.535714e+09</td>\n","      <td>6.758333e+09</td>\n","      <td>67347.712</td>\n","      <td>82209.083</td>\n","      <td>47142.857</td>\n","      <td>75000.000</td>\n","      <td>93.1</td>\n","      <td>82.5</td>\n","      <td>10.6</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_C ['Frecuencia_sequías']</th>\n","      <td>4.535714e+09</td>\n","      <td>6.758333e+09</td>\n","      <td>67347.712</td>\n","      <td>82209.083</td>\n","      <td>47142.857</td>\n","      <td>75000.000</td>\n","      <td>93.1</td>\n","      <td>82.5</td>\n","      <td>10.6</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OC ['Frecuencia_sequías']</th>\n","      <td>4.535714e+09</td>\n","      <td>6.758333e+09</td>\n","      <td>67347.712</td>\n","      <td>82209.083</td>\n","      <td>47142.857</td>\n","      <td>75000.000</td>\n","      <td>93.1</td>\n","      <td>82.5</td>\n","      <td>10.6</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_CB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.057030e+10</td>\n","      <td>7.643210e+09</td>\n","      <td>143423.486</td>\n","      <td>87425.457</td>\n","      <td>115514.490</td>\n","      <td>75276.305</td>\n","      <td>68.5</td>\n","      <td>80.2</td>\n","      <td>11.7</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_B ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.057030e+10</td>\n","      <td>7.643210e+09</td>\n","      <td>143423.486</td>\n","      <td>87425.457</td>\n","      <td>115514.490</td>\n","      <td>75276.305</td>\n","      <td>68.5</td>\n","      <td>80.2</td>\n","      <td>11.7</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_O ['Temperatura_promedio']</th>\n","      <td>4.719833e+10</td>\n","      <td>2.307741e+10</td>\n","      <td>217251.770</td>\n","      <td>151912.519</td>\n","      <td>177651.969</td>\n","      <td>127011.830</td>\n","      <td>27.8</td>\n","      <td>40.1</td>\n","      <td>12.3</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_C ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>5.530703e+10</td>\n","      <td>3.779119e+10</td>\n","      <td>235174.457</td>\n","      <td>194399.563</td>\n","      <td>196865.424</td>\n","      <td>181927.734</td>\n","      <td>15.4</td>\n","      <td>1.9</td>\n","      <td>13.5</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.858601e+09</td>\n","      <td>6.957100e+09</td>\n","      <td>53465.890</td>\n","      <td>83409.232</td>\n","      <td>40871.429</td>\n","      <td>72866.667</td>\n","      <td>95.6</td>\n","      <td>81.9</td>\n","      <td>13.7</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_C ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>5.533333e+09</td>\n","      <td>0.000</td>\n","      <td>74386.379</td>\n","      <td>0.000</td>\n","      <td>70000.000</td>\n","      <td>100.0</td>\n","      <td>85.6</td>\n","      <td>14.4</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_B ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>2.526949e+10</td>\n","      <td>9.202698e+09</td>\n","      <td>158963.789</td>\n","      <td>95930.693</td>\n","      <td>122410.285</td>\n","      <td>85406.911</td>\n","      <td>61.3</td>\n","      <td>76.1</td>\n","      <td>14.8</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_CB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>2.526949e+10</td>\n","      <td>9.202698e+09</td>\n","      <td>158963.789</td>\n","      <td>95930.693</td>\n","      <td>122410.285</td>\n","      <td>85406.911</td>\n","      <td>61.3</td>\n","      <td>76.1</td>\n","      <td>14.8</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>3.406826e+09</td>\n","      <td>7.757210e+09</td>\n","      <td>58368.026</td>\n","      <td>88075.025</td>\n","      <td>45735.714</td>\n","      <td>66866.667</td>\n","      <td>94.8</td>\n","      <td>79.9</td>\n","      <td>14.9</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_C ['Frecuencia_sequías']</th>\n","      <td>3.361420e+10</td>\n","      <td>1.394515e+10</td>\n","      <td>183341.747</td>\n","      <td>118089.595</td>\n","      <td>151013.929</td>\n","      <td>108269.054</td>\n","      <td>48.6</td>\n","      <td>63.8</td>\n","      <td>15.2</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.877124e+09</td>\n","      <td>7.738208e+09</td>\n","      <td>53638.825</td>\n","      <td>87967.087</td>\n","      <td>40835.714</td>\n","      <td>72983.333</td>\n","      <td>95.6</td>\n","      <td>79.9</td>\n","      <td>15.7</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_B ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.175731e+10</td>\n","      <td>1.258223e+10</td>\n","      <td>178205.797</td>\n","      <td>112170.557</td>\n","      <td>145623.166</td>\n","      <td>104384.755</td>\n","      <td>51.4</td>\n","      <td>67.3</td>\n","      <td>15.9</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_CB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.175731e+10</td>\n","      <td>1.258223e+10</td>\n","      <td>178205.797</td>\n","      <td>112170.557</td>\n","      <td>145623.166</td>\n","      <td>104384.755</td>\n","      <td>51.4</td>\n","      <td>67.3</td>\n","      <td>15.9</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_CB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.645281e+10</td>\n","      <td>1.607731e+10</td>\n","      <td>128268.498</td>\n","      <td>126796.337</td>\n","      <td>112440.496</td>\n","      <td>103930.969</td>\n","      <td>74.8</td>\n","      <td>58.3</td>\n","      <td>16.5</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_B ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.645281e+10</td>\n","      <td>1.607731e+10</td>\n","      <td>128268.498</td>\n","      <td>126796.337</td>\n","      <td>112440.496</td>\n","      <td>103930.969</td>\n","      <td>74.8</td>\n","      <td>58.3</td>\n","      <td>16.5</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>6.450000e+09</td>\n","      <td>0.000</td>\n","      <td>80311.892</td>\n","      <td>0.000</td>\n","      <td>78333.333</td>\n","      <td>100.0</td>\n","      <td>83.3</td>\n","      <td>16.7</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>6.450000e+09</td>\n","      <td>0.000</td>\n","      <td>80311.892</td>\n","      <td>0.000</td>\n","      <td>78333.333</td>\n","      <td>100.0</td>\n","      <td>83.3</td>\n","      <td>16.7</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>3.199590e+09</td>\n","      <td>8.385533e+09</td>\n","      <td>56564.918</td>\n","      <td>91572.558</td>\n","      <td>43685.714</td>\n","      <td>69266.667</td>\n","      <td>95.1</td>\n","      <td>78.2</td>\n","      <td>16.9</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>3.842341e+09</td>\n","      <td>9.325637e+09</td>\n","      <td>61986.623</td>\n","      <td>96569.336</td>\n","      <td>45985.714</td>\n","      <td>76733.333</td>\n","      <td>94.1</td>\n","      <td>75.8</td>\n","      <td>18.3</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OC ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.575312e+09</td>\n","      <td>8.578882e+09</td>\n","      <td>50747.533</td>\n","      <td>92622.253</td>\n","      <td>37421.429</td>\n","      <td>83216.667</td>\n","      <td>96.1</td>\n","      <td>77.7</td>\n","      <td>18.4</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>3.057846e+09</td>\n","      <td>8.991660e+09</td>\n","      <td>55297.791</td>\n","      <td>94824.364</td>\n","      <td>42900.000</td>\n","      <td>72633.333</td>\n","      <td>95.3</td>\n","      <td>76.7</td>\n","      <td>18.6</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_C ['Cambio_lluvias']</th>\n","      <td>7.888624e+09</td>\n","      <td>1.245642e+10</td>\n","      <td>88817.927</td>\n","      <td>111608.341</td>\n","      <td>68601.020</td>\n","      <td>85465.873</td>\n","      <td>87.9</td>\n","      <td>67.7</td>\n","      <td>20.2</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.588470e+10</td>\n","      <td>1.732950e+10</td>\n","      <td>126034.513</td>\n","      <td>131641.559</td>\n","      <td>97488.681</td>\n","      <td>112223.226</td>\n","      <td>75.7</td>\n","      <td>55.0</td>\n","      <td>20.7</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.405867e+10</td>\n","      <td>1.630935e+10</td>\n","      <td>118569.278</td>\n","      <td>127708.081</td>\n","      <td>88372.861</td>\n","      <td>111933.386</td>\n","      <td>78.5</td>\n","      <td>57.7</td>\n","      <td>20.8</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>4.144048e+09</td>\n","      <td>1.082674e+10</td>\n","      <td>64374.279</td>\n","      <td>104051.630</td>\n","      <td>44478.571</td>\n","      <td>79183.333</td>\n","      <td>93.7</td>\n","      <td>71.9</td>\n","      <td>21.8</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.844853e+09</td>\n","      <td>1.011488e+10</td>\n","      <td>53337.162</td>\n","      <td>100572.751</td>\n","      <td>37485.714</td>\n","      <td>88516.667</td>\n","      <td>95.6</td>\n","      <td>73.8</td>\n","      <td>21.8</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.340570e+10</td>\n","      <td>1.632637e+10</td>\n","      <td>115782.979</td>\n","      <td>127774.702</td>\n","      <td>98600.968</td>\n","      <td>108808.671</td>\n","      <td>79.5</td>\n","      <td>57.6</td>\n","      <td>21.9</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>3.827063e+09</td>\n","      <td>1.105835e+10</td>\n","      <td>61863.259</td>\n","      <td>105158.705</td>\n","      <td>44071.429</td>\n","      <td>80333.333</td>\n","      <td>94.1</td>\n","      <td>71.3</td>\n","      <td>22.8</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_C ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>3.324157e+10</td>\n","      <td>1.082570e+10</td>\n","      <td>182322.703</td>\n","      <td>104046.628</td>\n","      <td>154552.098</td>\n","      <td>97282.330</td>\n","      <td>49.1</td>\n","      <td>71.9</td>\n","      <td>22.8</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>8.850000e+09</td>\n","      <td>0.000</td>\n","      <td>94074.439</td>\n","      <td>0.000</td>\n","      <td>88333.333</td>\n","      <td>100.0</td>\n","      <td>77.0</td>\n","      <td>23.0</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>8.850000e+09</td>\n","      <td>0.000</td>\n","      <td>94074.439</td>\n","      <td>0.000</td>\n","      <td>88333.333</td>\n","      <td>100.0</td>\n","      <td>77.0</td>\n","      <td>23.0</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OCB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.002376e+10</td>\n","      <td>8.662611e+09</td>\n","      <td>173273.649</td>\n","      <td>93073.151</td>\n","      <td>139735.232</td>\n","      <td>89242.604</td>\n","      <td>54.1</td>\n","      <td>77.5</td>\n","      <td>23.4</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.002376e+10</td>\n","      <td>8.662611e+09</td>\n","      <td>173273.649</td>\n","      <td>93073.151</td>\n","      <td>139735.232</td>\n","      <td>89242.604</td>\n","      <td>54.1</td>\n","      <td>77.5</td>\n","      <td>23.4</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>4.252920e+09</td>\n","      <td>1.168735e+10</td>\n","      <td>65214.416</td>\n","      <td>108108.032</td>\n","      <td>45871.429</td>\n","      <td>86933.333</td>\n","      <td>93.5</td>\n","      <td>69.7</td>\n","      <td>23.8</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>4.512756e+09</td>\n","      <td>1.185059e+10</td>\n","      <td>67177.053</td>\n","      <td>108860.423</td>\n","      <td>50178.571</td>\n","      <td>80683.333</td>\n","      <td>93.1</td>\n","      <td>69.2</td>\n","      <td>23.9</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_O ['Frecuencia_sequías']</th>\n","      <td>3.538047e+10</td>\n","      <td>1.154900e+10</td>\n","      <td>188096.969</td>\n","      <td>107466.294</td>\n","      <td>148420.981</td>\n","      <td>100118.079</td>\n","      <td>45.9</td>\n","      <td>70.0</td>\n","      <td>24.1</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>4.306355e+09</td>\n","      <td>1.192452e+10</td>\n","      <td>65622.824</td>\n","      <td>109199.428</td>\n","      <td>45735.714</td>\n","      <td>86383.333</td>\n","      <td>93.4</td>\n","      <td>69.1</td>\n","      <td>24.3</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OC ['Frecuencia_sequías']</th>\n","      <td>2.955934e+10</td>\n","      <td>7.980171e+09</td>\n","      <td>171928.303</td>\n","      <td>89331.805</td>\n","      <td>135470.854</td>\n","      <td>85841.645</td>\n","      <td>54.8</td>\n","      <td>79.3</td>\n","      <td>24.5</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.539435e+10</td>\n","      <td>5.453783e+09</td>\n","      <td>159356.061</td>\n","      <td>73849.736</td>\n","      <td>125197.570</td>\n","      <td>63661.606</td>\n","      <td>61.1</td>\n","      <td>85.8</td>\n","      <td>24.7</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>4.154096e+09</td>\n","      <td>1.252900e+10</td>\n","      <td>64452.280</td>\n","      <td>111933.023</td>\n","      <td>48007.143</td>\n","      <td>85483.333</td>\n","      <td>93.6</td>\n","      <td>67.5</td>\n","      <td>26.1</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_C ['Cambio_lluvias']</th>\n","      <td>5.972238e+10</td>\n","      <td>2.515484e+10</td>\n","      <td>244381.636</td>\n","      <td>158602.781</td>\n","      <td>219161.491</td>\n","      <td>144506.100</td>\n","      <td>8.6</td>\n","      <td>34.7</td>\n","      <td>26.1</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>5.660944e+09</td>\n","      <td>1.344805e+10</td>\n","      <td>75239.247</td>\n","      <td>115965.742</td>\n","      <td>57157.143</td>\n","      <td>85333.333</td>\n","      <td>91.3</td>\n","      <td>65.1</td>\n","      <td>26.2</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_C ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>2.589172e+10</td>\n","      <td>5.111576e+09</td>\n","      <td>160909.039</td>\n","      <td>71495.287</td>\n","      <td>125021.280</td>\n","      <td>62020.604</td>\n","      <td>60.4</td>\n","      <td>86.7</td>\n","      <td>26.3</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.711852e+10</td>\n","      <td>1.161719e+10</td>\n","      <td>192661.679</td>\n","      <td>107783.083</td>\n","      <td>156669.735</td>\n","      <td>97509.590</td>\n","      <td>43.2</td>\n","      <td>69.9</td>\n","      <td>26.7</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OC ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>3.081415e+10</td>\n","      <td>7.794177e+09</td>\n","      <td>175539.589</td>\n","      <td>88284.636</td>\n","      <td>141278.784</td>\n","      <td>85752.953</td>\n","      <td>52.9</td>\n","      <td>79.8</td>\n","      <td>26.9</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_O ['Temperatura_promedio']</th>\n","      <td>1.058290e+10</td>\n","      <td>1.698956e+10</td>\n","      <td>102873.209</td>\n","      <td>130344.026</td>\n","      <td>79000.000</td>\n","      <td>96683.333</td>\n","      <td>83.8</td>\n","      <td>55.9</td>\n","      <td>27.9</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_C ['Cambio_lluvias']</th>\n","      <td>5.969933e+10</td>\n","      <td>2.444608e+10</td>\n","      <td>244334.472</td>\n","      <td>156352.432</td>\n","      <td>219006.923</td>\n","      <td>142313.411</td>\n","      <td>8.7</td>\n","      <td>36.6</td>\n","      <td>27.9</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OC ['Temperatura_promedio']</th>\n","      <td>1.006193e+10</td>\n","      <td>1.697693e+10</td>\n","      <td>100309.193</td>\n","      <td>130295.555</td>\n","      <td>76942.857</td>\n","      <td>96650.000</td>\n","      <td>84.6</td>\n","      <td>55.9</td>\n","      <td>28.7</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>6.506675e+09</td>\n","      <td>1.490743e+10</td>\n","      <td>80663.963</td>\n","      <td>122095.994</td>\n","      <td>58392.857</td>\n","      <td>83116.667</td>\n","      <td>90.0</td>\n","      <td>61.3</td>\n","      <td>28.7</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_C ['Frecuencia_sequías']</th>\n","      <td>2.612181e+10</td>\n","      <td>4.333147e+09</td>\n","      <td>161622.431</td>\n","      <td>65826.640</td>\n","      <td>123041.919</td>\n","      <td>62942.750</td>\n","      <td>60.0</td>\n","      <td>88.8</td>\n","      <td>28.8</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_C ['Temperatura_promedio']</th>\n","      <td>9.757449e+09</td>\n","      <td>1.696877e+10</td>\n","      <td>98779.802</td>\n","      <td>130264.238</td>\n","      <td>74207.143</td>\n","      <td>96650.000</td>\n","      <td>85.1</td>\n","      <td>56.0</td>\n","      <td>29.1</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_C ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>2.601487e+10</td>\n","      <td>4.122598e+09</td>\n","      <td>161291.252</td>\n","      <td>64207.459</td>\n","      <td>124319.546</td>\n","      <td>60612.530</td>\n","      <td>60.2</td>\n","      <td>89.3</td>\n","      <td>29.1</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_OCB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>2.175123e+10</td>\n","      <td>2.407205e+10</td>\n","      <td>147482.991</td>\n","      <td>155151.711</td>\n","      <td>107418.761</td>\n","      <td>128131.427</td>\n","      <td>66.7</td>\n","      <td>37.5</td>\n","      <td>29.2</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_OB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>2.175123e+10</td>\n","      <td>2.407205e+10</td>\n","      <td>147482.991</td>\n","      <td>155151.711</td>\n","      <td>107418.761</td>\n","      <td>128131.427</td>\n","      <td>66.7</td>\n","      <td>37.5</td>\n","      <td>29.2</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_OCB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.562065e+10</td>\n","      <td>2.054483e+10</td>\n","      <td>124982.615</td>\n","      <td>143334.690</td>\n","      <td>109889.323</td>\n","      <td>112347.668</td>\n","      <td>76.1</td>\n","      <td>46.7</td>\n","      <td>29.4</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_OB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.562065e+10</td>\n","      <td>2.054483e+10</td>\n","      <td>124982.615</td>\n","      <td>143334.690</td>\n","      <td>109889.323</td>\n","      <td>112347.668</td>\n","      <td>76.1</td>\n","      <td>46.7</td>\n","      <td>29.4</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_OC ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.562107e+10</td>\n","      <td>2.057352e+10</td>\n","      <td>124984.283</td>\n","      <td>143434.718</td>\n","      <td>109918.455</td>\n","      <td>112621.179</td>\n","      <td>76.1</td>\n","      <td>46.6</td>\n","      <td>29.5</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_OC ['Frecuencia_sequías']</th>\n","      <td>2.606214e+10</td>\n","      <td>3.904230e+09</td>\n","      <td>161437.731</td>\n","      <td>62483.841</td>\n","      <td>123380.090</td>\n","      <td>60111.824</td>\n","      <td>60.1</td>\n","      <td>89.9</td>\n","      <td>29.8</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>5.508390e+09</td>\n","      <td>1.521258e+10</td>\n","      <td>74218.529</td>\n","      <td>123339.288</td>\n","      <td>59042.857</td>\n","      <td>86166.667</td>\n","      <td>91.6</td>\n","      <td>60.5</td>\n","      <td>31.1</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>5.942953e+09</td>\n","      <td>1.560088e+10</td>\n","      <td>77090.550</td>\n","      <td>124903.489</td>\n","      <td>59885.714</td>\n","      <td>84650.000</td>\n","      <td>90.9</td>\n","      <td>59.5</td>\n","      <td>31.4</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>5.753275e+09</td>\n","      <td>1.569806e+10</td>\n","      <td>75850.346</td>\n","      <td>125291.919</td>\n","      <td>58592.857</td>\n","      <td>80883.333</td>\n","      <td>91.2</td>\n","      <td>59.3</td>\n","      <td>31.9</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_CB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.256667e+10</td>\n","      <td>0.000</td>\n","      <td>112101.145</td>\n","      <td>0.000</td>\n","      <td>93333.333</td>\n","      <td>100.0</td>\n","      <td>67.4</td>\n","      <td>32.6</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OC ['Cambio_lluvias']</th>\n","      <td>5.514286e+09</td>\n","      <td>1.641667e+10</td>\n","      <td>74258.237</td>\n","      <td>128127.541</td>\n","      <td>34285.714</td>\n","      <td>108333.333</td>\n","      <td>91.6</td>\n","      <td>57.4</td>\n","      <td>34.2</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_C ['Cambio_lluvias']</th>\n","      <td>5.514286e+09</td>\n","      <td>1.641667e+10</td>\n","      <td>74258.237</td>\n","      <td>128127.541</td>\n","      <td>34285.714</td>\n","      <td>108333.333</td>\n","      <td>91.6</td>\n","      <td>57.4</td>\n","      <td>34.2</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>6.647864e+09</td>\n","      <td>1.728499e+10</td>\n","      <td>81534.436</td>\n","      <td>131472.405</td>\n","      <td>58128.571</td>\n","      <td>91266.667</td>\n","      <td>89.8</td>\n","      <td>55.1</td>\n","      <td>34.7</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>5.695254e+09</td>\n","      <td>1.673095e+10</td>\n","      <td>75466.904</td>\n","      <td>129348.167</td>\n","      <td>57450.000</td>\n","      <td>82816.667</td>\n","      <td>91.3</td>\n","      <td>56.6</td>\n","      <td>34.7</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OC ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.447453e+10</td>\n","      <td>2.193617e+10</td>\n","      <td>120310.127</td>\n","      <td>148108.642</td>\n","      <td>101091.444</td>\n","      <td>122891.393</td>\n","      <td>77.9</td>\n","      <td>43.1</td>\n","      <td>34.8</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_OC ['Cambio_lluvias']</th>\n","      <td>7.951856e+09</td>\n","      <td>1.831007e+10</td>\n","      <td>89173.181</td>\n","      <td>135314.711</td>\n","      <td>68877.211</td>\n","      <td>100704.762</td>\n","      <td>87.8</td>\n","      <td>52.5</td>\n","      <td>35.3</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_O ['Frecuencia_sequías']</th>\n","      <td>2.862252e+10</td>\n","      <td>3.145725e+09</td>\n","      <td>169181.926</td>\n","      <td>56086.767</td>\n","      <td>132394.923</td>\n","      <td>50136.910</td>\n","      <td>56.2</td>\n","      <td>91.8</td>\n","      <td>35.6</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.510000e+10</td>\n","      <td>0.000</td>\n","      <td>122882.057</td>\n","      <td>0.000</td>\n","      <td>113333.333</td>\n","      <td>100.0</td>\n","      <td>60.8</td>\n","      <td>39.2</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.520000e+10</td>\n","      <td>0.000</td>\n","      <td>123288.280</td>\n","      <td>0.000</td>\n","      <td>103333.333</td>\n","      <td>100.0</td>\n","      <td>60.6</td>\n","      <td>39.4</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.553333e+10</td>\n","      <td>0.000</td>\n","      <td>124632.794</td>\n","      <td>0.000</td>\n","      <td>103333.333</td>\n","      <td>100.0</td>\n","      <td>59.7</td>\n","      <td>40.3</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OCB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.556667e+10</td>\n","      <td>0.000</td>\n","      <td>124766.448</td>\n","      <td>0.000</td>\n","      <td>110000.000</td>\n","      <td>100.0</td>\n","      <td>59.6</td>\n","      <td>40.4</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.585000e+10</td>\n","      <td>0.000</td>\n","      <td>125896.783</td>\n","      <td>0.000</td>\n","      <td>105000.000</td>\n","      <td>100.0</td>\n","      <td>58.9</td>\n","      <td>41.1</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_B ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.625000e+10</td>\n","      <td>0.000</td>\n","      <td>127475.488</td>\n","      <td>0.000</td>\n","      <td>108333.333</td>\n","      <td>100.0</td>\n","      <td>57.8</td>\n","      <td>42.2</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.645000e+10</td>\n","      <td>0.000</td>\n","      <td>128257.553</td>\n","      <td>0.000</td>\n","      <td>111666.667</td>\n","      <td>100.0</td>\n","      <td>57.3</td>\n","      <td>42.7</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.650000e+10</td>\n","      <td>0.000</td>\n","      <td>128452.326</td>\n","      <td>0.000</td>\n","      <td>106666.667</td>\n","      <td>100.0</td>\n","      <td>57.2</td>\n","      <td>42.8</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.122266e+10</td>\n","      <td>2.333850e+10</td>\n","      <td>105937.070</td>\n","      <td>152769.431</td>\n","      <td>89136.228</td>\n","      <td>121839.585</td>\n","      <td>82.8</td>\n","      <td>39.4</td>\n","      <td>43.4</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.122266e+10</td>\n","      <td>2.333850e+10</td>\n","      <td>105937.070</td>\n","      <td>152769.431</td>\n","      <td>89136.228</td>\n","      <td>121839.585</td>\n","      <td>82.8</td>\n","      <td>39.4</td>\n","      <td>43.4</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_B ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.691667e+10</td>\n","      <td>0.000</td>\n","      <td>130064.087</td>\n","      <td>0.000</td>\n","      <td>118333.333</td>\n","      <td>100.0</td>\n","      <td>56.1</td>\n","      <td>43.9</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OC ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.741667e+10</td>\n","      <td>0.000</td>\n","      <td>131972.219</td>\n","      <td>0.000</td>\n","      <td>115000.000</td>\n","      <td>100.0</td>\n","      <td>54.8</td>\n","      <td>45.2</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_O ['Cambio_lluvias']</th>\n","      <td>8.111468e+09</td>\n","      <td>2.434135e+10</td>\n","      <td>90063.687</td>\n","      <td>156017.139</td>\n","      <td>67441.497</td>\n","      <td>112810.317</td>\n","      <td>87.6</td>\n","      <td>36.8</td>\n","      <td>50.8</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>1.960000e+10</td>\n","      <td>0.000</td>\n","      <td>140000.000</td>\n","      <td>0.000</td>\n","      <td>120000.000</td>\n","      <td>100.0</td>\n","      <td>49.1</td>\n","      <td>50.9</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.023333e+10</td>\n","      <td>0.000</td>\n","      <td>142243.922</td>\n","      <td>0.000</td>\n","      <td>136666.667</td>\n","      <td>100.0</td>\n","      <td>47.5</td>\n","      <td>52.5</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_CB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.101667e+10</td>\n","      <td>0.000</td>\n","      <td>144971.262</td>\n","      <td>0.000</td>\n","      <td>118333.333</td>\n","      <td>100.0</td>\n","      <td>45.5</td>\n","      <td>54.5</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.190000e+10</td>\n","      <td>0.000</td>\n","      <td>147986.486</td>\n","      <td>0.000</td>\n","      <td>136666.667</td>\n","      <td>100.0</td>\n","      <td>43.2</td>\n","      <td>56.8</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_CB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.190000e+10</td>\n","      <td>0.000</td>\n","      <td>147986.486</td>\n","      <td>0.000</td>\n","      <td>136666.667</td>\n","      <td>100.0</td>\n","      <td>43.2</td>\n","      <td>56.8</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.190000e+10</td>\n","      <td>0.000</td>\n","      <td>147986.486</td>\n","      <td>0.000</td>\n","      <td>136666.667</td>\n","      <td>100.0</td>\n","      <td>43.2</td>\n","      <td>56.8</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_C ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.191667e+10</td>\n","      <td>0.000</td>\n","      <td>148042.787</td>\n","      <td>0.000</td>\n","      <td>135000.000</td>\n","      <td>100.0</td>\n","      <td>43.1</td>\n","      <td>56.9</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OC ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.223333e+10</td>\n","      <td>0.000</td>\n","      <td>149108.462</td>\n","      <td>0.000</td>\n","      <td>136666.667</td>\n","      <td>100.0</td>\n","      <td>42.3</td>\n","      <td>57.7</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_O ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.223333e+10</td>\n","      <td>0.000</td>\n","      <td>149108.462</td>\n","      <td>0.000</td>\n","      <td>136666.667</td>\n","      <td>100.0</td>\n","      <td>42.3</td>\n","      <td>57.7</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.371667e+10</td>\n","      <td>0.000</td>\n","      <td>154002.164</td>\n","      <td>0.000</td>\n","      <td>131666.667</td>\n","      <td>100.0</td>\n","      <td>38.5</td>\n","      <td>61.5</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_C ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.431667e+10</td>\n","      <td>0.000</td>\n","      <td>155938.022</td>\n","      <td>0.000</td>\n","      <td>138333.333</td>\n","      <td>100.0</td>\n","      <td>36.9</td>\n","      <td>63.1</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OCB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.292132e+10</td>\n","      <td>3.279524e+10</td>\n","      <td>113671.999</td>\n","      <td>181094.574</td>\n","      <td>93968.226</td>\n","      <td>147397.634</td>\n","      <td>80.2</td>\n","      <td>14.9</td>\n","      <td>65.3</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_OB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.292132e+10</td>\n","      <td>3.279524e+10</td>\n","      <td>113671.999</td>\n","      <td>181094.574</td>\n","      <td>93968.226</td>\n","      <td>147397.634</td>\n","      <td>80.2</td>\n","      <td>14.9</td>\n","      <td>65.3</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_OCB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.000000e+00</td>\n","      <td>2.520000e+10</td>\n","      <td>0.000</td>\n","      <td>158745.079</td>\n","      <td>0.000</td>\n","      <td>136666.667</td>\n","      <td>100.0</td>\n","      <td>34.6</td>\n","      <td>65.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f462c7b4-3709-42dd-978e-75fb4462cea8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f462c7b4-3709-42dd-978e-75fb4462cea8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f462c7b4-3709-42dd-978e-75fb4462cea8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e90caab6-cb06-4aaf-b643-fd4bcd714bc9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e90caab6-cb06-4aaf-b643-fd4bcd714bc9')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e90caab6-cb06-4aaf-b643-fd4bcd714bc9 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 129,\n  \"fields\": [\n    {\n      \"column\": \"mse_train\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14096213354.271734,\n        \"min\": 0.0,\n        \"max\": 59722383776.859,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          5942952857.143,\n          23363480582.35,\n          21751232677.478\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mse_test\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6924572904.420813,\n        \"min\": 3145725402.465,\n        \"max\": 37791189968.908,\n        \"num_unique_values\": 108,\n        \"samples\": [\n          15600881666.667,\n          26211416332.757,\n          10657788912.15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_train\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 67591.95075719846,\n        \"min\": 0.0,\n        \"max\": 244381.636,\n        \"num_unique_values\": 86,\n        \"samples\": [\n          77090.55,\n          152851.171,\n          147482.991\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_test\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29570.163401609614,\n        \"min\": 56086.767,\n        \"max\": 194399.563,\n        \"num_unique_values\": 108,\n        \"samples\": [\n          124903.489,\n          161899.402,\n          103236.568\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_train\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 56227.04555367735,\n        \"min\": 0.0,\n        \"max\": 219161.491,\n        \"num_unique_values\": 85,\n        \"samples\": [\n          57450.0,\n          116050.836,\n          124319.546\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_test\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25083.35877532524,\n        \"min\": 50136.91,\n        \"max\": 181927.734,\n        \"num_unique_values\": 101,\n        \"samples\": [\n          50136.91,\n          100118.079,\n          142313.411\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_train\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.564615866303765,\n        \"min\": 8.6,\n        \"max\": 100.0,\n        \"num_unique_values\": 70,\n        \"samples\": [\n          95.6,\n          64.3,\n          52.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_test\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.97284864781991,\n        \"min\": 1.9,\n        \"max\": 91.8,\n        \"num_unique_values\": 102,\n        \"samples\": [\n          81.9,\n          37.5,\n          36.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"delta_r2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.957523919791768,\n        \"min\": 0.29999999999999716,\n        \"max\": 65.4,\n        \"num_unique_values\": 104,\n        \"samples\": [\n          14.400000000000006,\n          28.699999999999996,\n          27.900000000000002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":79}]},{"cell_type":"markdown","source":["**Análisis:**\n","\n","Primero que todo, comentar que  el test set no es representativo dado su tamaño tan pequeño (6 puntos), por lo que los resultados que acá se obtengan no son concluyentes respecto de la evaluación de las métricas.\n","\n","- Random Forest tiene el mejor desempeño en las métricas, dando el mismo resultado (r2_train / r2_test = 91.1 / 89.4 %), cuando los regresores son:\n","    - Frecuencia_sequías, o\n","    - Frecuencia_sequías^2, o\n","    - Frecuencia_sequías y Frecuencia_sequías^2\n","    - mse_train = 5.836006e+09, mse_test = 4.097502e+09\n","    - rmse_train = 76393.754, rmse_test = 64011.735\n","    - mae_train = 59701.190, mae_test = 53789.246\n","    - De acuerdo a los valores de r_2, levemente sobreajustado.\n","- La regresión lineal simple tiene el mejor desempeño para (r2_train / r2_test = 64.3 / 64.0 %) con los regresores \"Temperatura_promedio\" y \"Frecuencia_sequías\".\n","    - mse_train = 2.336348e+10, mse_test = 1.387251e+10\n","    - rmse_train = 152851.171, rmse_test = 117781.632\n","    - ma_train = 116050.836, mae_test = 99450.967\n","    - De acuerdo a los valores de r_2,  está  equilibrado (nisub ni sobreajustado).\n","- La regresión Ridge tiene el mejor desempeño para (r2_train / r2_test = 71.4 / 72.5 %) con los regresores:\n","    - Cambio_lluvias, Frecuencia_sequías y Cambio_lluvias * Frecuencia_sequías, o\n","    - Cambio_lluvias, Frecuencia_sequías, Cambio_lluvias^2, Frecuencia_sequías^2 y Cambio_lluvias * Frecuencia_sequías.\n","    - mse_train = 1.867200e+10, mse_test = 1.058926e+10\n","    - rmse_train = 136645.532, rmse_test = 102904.114\n","    - mae_train = 117683.486, mae_test = 82727.350\n","    - De acuerdo a los valores de r_2 obtenidos, el modelo está levemente subajustado.\n","- La regresión Lasso no generó resultados aceptables.\n","- Decision Tree tiene sus mejores resultados (r2_train / r2_test = 93.1 / 82.5 %) cuando los regresores son:\n","    - Frecuencia_sequías, o\n","    - Frecuencia_sequías^2, o\n","    - Frecuencia_sequías y Frecuencia_sequías^2\n","    - mse_train = 4.535714e+09, mse_test = 6.758333e+09\n","    - rmse_train = 67347.712, rmse_test = 82209.083\n","    - mae_train = 47142.857, mae_test =\t75000.000\n","    - De acuerdo a los valores de r_2 obtenidos, el modelo está sobreajustado.\n","\n","Concluyendo, en esta oportunidad Random Forest tiene el mejor desempeño: los mejores valores para r2, mse y mae en el test set."],"metadata":{"id":"nx0DmKb2EbGD"}},{"cell_type":"markdown","source":["###**Clasificación**"],"metadata":{"id":"GfiZT5O9DAEr"}},{"cell_type":"markdown","source":["Usaremos las etiquetas ['Alto', 'Medio', 'Bajo'] para dividir la producción de alimentos en tres categorías con pd.cut, lo cual sirve para clasificar los países por el impacto en la producción agrícola, donde una producción alta se asocia a un bajo impacto negativo, y viceversa.\n","\n","Importante señalar que esta definición se hace solo para efectos de poder efectuar la actividad, porque carece de todo sentido calificar el impacto climatico basándose en una observación en un instante puntual de tiempo, sin tener registros climáticos y de producción de décadas anteriores. Uno podría argumentar que la frecuencia de sequías es un indicador, pero como en todo, se requiere comparar con una línea base, y eso no está presente, es más, podrían deberse a fenómemos cíclicos como \"el niño\" y \"la niña\"."],"metadata":{"id":"fddWsS-nJGy8"}},{"cell_type":"code","source":["bins = df['Producción_alimentos'].quantile([0, 0.33, 0.66, 1]).values\n","bins[0] = - np.inf\n","bins[-1] = np.inf\n","print(f'bins = {bins}')\n","\n","df['impacto'] = pd.cut(df['Producción_alimentos'], bins=bins, labels=['3_Alto', '2_Medio', '1_Bajo'])\n","\n","display(df.impacto.value_counts().sort_index(ascending=False))\n","\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"XVx18fq_Wq7p","executionInfo":{"status":"ok","timestamp":1757365093667,"user_tz":180,"elapsed":58,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"f4877e2a-c0bf-47af-da9e-d89bd135675b"},"execution_count":80,"outputs":[{"output_type":"stream","name":"stdout","text":["bins = [   -inf 570800. 871600.     inf]\n"]},{"output_type":"display_data","data":{"text/plain":["impacto\n","1_Bajo     7\n","2_Medio    6\n","3_Alto     7\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>impacto</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1_Bajo</th>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2_Medio</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3_Alto</th>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["           Temperatura_promedio  Cambio_lluvias  Frecuencia_sequías  \\\n","País                                                                  \n","Alemania                   10.5              -5                   2   \n","Argentina                  17.8             -10                   5   \n","Australia                  22.3             -15                   8   \n","Brasil                     25.1              -8                   6   \n","Canadá                      6.2              -2                   1   \n","\n","           Producción_alimentos  impacto  \n","País                                      \n","Alemania                 950000   1_Bajo  \n","Argentina                650000  2_Medio  \n","Australia                400000   3_Alto  \n","Brasil                   900000   1_Bajo  \n","Canadá                   850000  2_Medio  "],"text/html":["\n","  <div id=\"df-76824b55-e106-4f2a-a69d-4f53e53e3320\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Temperatura_promedio</th>\n","      <th>Cambio_lluvias</th>\n","      <th>Frecuencia_sequías</th>\n","      <th>Producción_alimentos</th>\n","      <th>impacto</th>\n","    </tr>\n","    <tr>\n","      <th>País</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Alemania</th>\n","      <td>10.5</td>\n","      <td>-5</td>\n","      <td>2</td>\n","      <td>950000</td>\n","      <td>1_Bajo</td>\n","    </tr>\n","    <tr>\n","      <th>Argentina</th>\n","      <td>17.8</td>\n","      <td>-10</td>\n","      <td>5</td>\n","      <td>650000</td>\n","      <td>2_Medio</td>\n","    </tr>\n","    <tr>\n","      <th>Australia</th>\n","      <td>22.3</td>\n","      <td>-15</td>\n","      <td>8</td>\n","      <td>400000</td>\n","      <td>3_Alto</td>\n","    </tr>\n","    <tr>\n","      <th>Brasil</th>\n","      <td>25.1</td>\n","      <td>-8</td>\n","      <td>6</td>\n","      <td>900000</td>\n","      <td>1_Bajo</td>\n","    </tr>\n","    <tr>\n","      <th>Canadá</th>\n","      <td>6.2</td>\n","      <td>-2</td>\n","      <td>1</td>\n","      <td>850000</td>\n","      <td>2_Medio</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76824b55-e106-4f2a-a69d-4f53e53e3320')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-76824b55-e106-4f2a-a69d-4f53e53e3320 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-76824b55-e106-4f2a-a69d-4f53e53e3320');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ef77d74c-f7e8-4dd0-be95-5b50d4b4e51a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef77d74c-f7e8-4dd0-be95-5b50d4b4e51a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ef77d74c-f7e8-4dd0-be95-5b50d4b4e51a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"Pa\\u00eds\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Alemania\",\n          \"Tailandia\",\n          \"India\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperatura_promedio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.4706523709177235,\n        \"min\": 5.4,\n        \"max\": 28.0,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          10.5,\n          28.0,\n          26.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cambio_lluvias\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": -15,\n        \"max\": -1,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          -7,\n          -1,\n          -5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frecuencia_sequ\\u00edas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 9,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          4,\n          5,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Producci\\u00f3n_alimentos\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 245794,\n        \"min\": 300000,\n        \"max\": 1200000,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          950000,\n          650000,\n          980000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"impacto\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"1_Bajo\",\n          \"2_Medio\",\n          \"3_Alto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["def clasificacion_sin_cv(df, vars, modelo, orig, cuad, comb):\n","    '''\n","    Efectúa la clasificación sin validación cruzada.\n","    Params:\n","    - df: DataFrame con los datos\n","    - vars: lista de variables a usar\n","    - modelo: modelo de regresión a usar\n","    - orig: booleano que indica si se usan las variables originales\n","    - cuad: booleano que indica si se usan las variables cuadráticas\n","    - comb: booleano que indica si se usan las variables combinadas\n","\n","    Retorna un diccionario con las métricas del modelo.\n","    '''\n","\n","    # darle un nombre adecuado al modelo\n","    nombre_modelo = modelo.__class__.__name__ + '_'\n","    if orig: nombre_modelo = nombre_modelo + 'O'\n","    if cuad: nombre_modelo = nombre_modelo + 'C'\n","    if comb: nombre_modelo = nombre_modelo + 'B'\n","    nombre_modelo = nombre_modelo + ' ' + str(vars)\n","\n","    vars_std = [var for var in vars if var in var_cont]\n","    vars_mms = [var for var in vars if var in var_disc]\n","\n","    X_train, X_test, y_train, y_test = train_test_split(df[vars], df['impacto'], test_size=0.3, random_state=42, stratify=df['impacto'])\n","\n","    if 'KNeighborsClassifier' in nombre_modelo or 'SVC' in nombre_modelo:\n","\n","        preprocessor_sc = ColumnTransformer(\n","            transformers=[\n","                ('num_std', StandardScaler(), vars_std),\n","                ('num_mms', MinMaxScaler(), vars_mms)\n","            ],\n","            #remainder='passthrough',\n","            verbose_feature_names_out=False\n","        ).set_output(transform='pandas')\n","\n","        pipe_reg = Pipeline(steps=[\n","            ('preprocessor_sc', preprocessor_sc),\n","            ('poli', PolynomialFeatures(degree=2, include_bias=False, interaction_only=False)),\n","            ('selector', SeleccionarAtributos(vars, orig, cuad, comb)),\n","            ('modelo', modelo)\n","        ]).set_output(transform=\"pandas\")\n","\n","    else:\n","        pipe_reg = Pipeline(steps=[\n","            ('poli', PolynomialFeatures(degree=2, include_bias=False, interaction_only=False)),\n","            ('selector', SeleccionarAtributos(vars, orig, cuad, comb)),\n","            ('modelo', modelo)\n","        ]).set_output(transform=\"pandas\")\n","\n","\n","    pipe_reg.fit(X_train, y_train)\n","\n","    y_pred_train = pipe_reg.predict(X_train)\n","    y_pred_proba_train = pipe_reg.predict_proba(X_train)\n","    precision_train = precision_score(y_train, y_pred_train, average='weighted', zero_division=0.)\n","    recall_train = recall_score(y_train, y_pred_train, average='weighted', zero_division=0.)\n","    accuracy_train = accuracy_score(y_train, y_pred_train)\n","    confusion_train = confusion_matrix(y_train, y_pred_train)\n","    roc_auc_train = roc_auc_score(y_train, y_pred_proba_train, average='weighted', multi_class='ovr')\n","\n","    y_pred_test = pipe_reg.predict(X_test)\n","    y_pred_proba_test = pipe_reg.predict_proba(X_test)\n","    precision_test = precision_score(y_test, y_pred_test, average='weighted', zero_division=0.)\n","    recall_test = recall_score(y_test, y_pred_test, average='weighted', zero_division=0.)\n","    accuracy_test = accuracy_score(y_test, y_pred_test)\n","    confusion_test = confusion_matrix(y_test, y_pred_test)\n","    roc_auc_test = roc_auc_score(y_test, y_pred_proba_test, average='weighted', multi_class='ovr')\n","\n","    scores = [precision_train, precision_test, recall_train, recall_test, accuracy_train, accuracy_test, roc_auc_train, roc_auc_test, confusion_train, confusion_test]\n","    return {nombre_modelo: scores}"],"metadata":{"id":"CYy4ly9npdZJ","executionInfo":{"status":"ok","timestamp":1757365093673,"user_tz":180,"elapsed":19,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":81,"outputs":[]},{"cell_type":"code","source":["%%time\n","\n","# ver la matriz de confusión ideal para train y test sets\n","\n","_, _, y_train, y_test = train_test_split(df[var_num], df['impacto'], test_size=0.30, random_state=42, stratify=df['impacto'])\n","confusion_train_ideal = confusion_matrix(y_train, y_train)\n","confusion_test_ideal = confusion_matrix(y_test, y_test)\n","print(f'Matriz de confusión ideal para X_train:\\n{confusion_train_ideal}')\n","print(f'Matriz de confusión ideal para X_test:\\n{confusion_test_ideal}')\n","print()\n","\n","m_scv = compara_modelos_sin_cv(df, tipo_modelo='clasificacion')\n","# solo ver los modelos que arrojan accuracy estrictamente positivo en el test set\n","m_scv[m_scv.accuracy_test>0].sort_values('roc_auc_test', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"XnPUhbX2tYIY","executionInfo":{"status":"ok","timestamp":1757365100798,"user_tz":180,"elapsed":7116,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"f85c1701-714f-49e4-c7ef-395259cc1d06"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["Matriz de confusión ideal para X_train:\n","[[5 0 0]\n"," [0 4 0]\n"," [0 0 5]]\n","Matriz de confusión ideal para X_test:\n","[[2 0 0]\n"," [0 2 0]\n"," [0 0 2]]\n","\n","Comparación de modelos de clasificacion sin validación cruzada ... 111 modelos generados\n","\n","CPU times: user 6.91 s, sys: 8.36 ms, total: 6.92 s\n","Wall time: 6.94 s\n"]},{"output_type":"execute_result","data":{"text/plain":["                                                                                            precision_train  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']                                                         0.82619   \n","SVC_O ['Cambio_lluvias']                                                                           0.510204   \n","DecisionTreeClassifier_O ['Temperatura_promedio']                                                       1.0   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']                                                   0.510204   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                             0.510204   \n","DecisionTreeClassifier_OC ['Temperatura_promedio']                                                      1.0   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                            0.561224   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                             0.561224   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']                                                     0.510204   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                             0.561224   \n","DecisionTreeClassifier_OC ['Cambio_lluvias']                                                        0.82619   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                                    1.0   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           0.619048   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.619048   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                                  0.47619   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                 0.47619   \n","KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.619048   \n","SVC_C ['Frecuencia_sequías']                                                                       0.751701   \n","KNeighborsClassifier_O ['Cambio_lluvias']                                                          0.510204   \n","KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.683673   \n","SVC_O ['Frecuencia_sequías']                                                                       0.814286   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.683673   \n","KNeighborsClassifier_OC ['Cambio_lluvias']                                                         0.683673   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                                  0.47619   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                  0.452381   \n","SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                                    0.47619   \n","SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                                     0.47619   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            0.47619   \n","KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.535714   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                    0.535714   \n","KNeighborsClassifier_OC ['Frecuencia_sequías']                                                     0.751701   \n","KNeighborsClassifier_C ['Frecuencia_sequías']                                                      0.751701   \n","SVC_OC ['Frecuencia_sequías']                                                                      0.814286   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             0.27381   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                              0.477891   \n","KNeighborsClassifier_O ['Temperatura_promedio']                                                    0.277778   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            0.27381   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                    0.683673   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']               1.0   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                     1.0   \n","SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                              0.794643   \n","SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']                                               0.794643   \n","SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                                     0.47619   \n","SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.408163   \n","SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                              0.408163   \n","SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                              0.408163   \n","SVC_OC ['Cambio_lluvias']                                                                          0.493197   \n","KNeighborsClassifier_O ['Frecuencia_sequías']                                                      0.727891   \n","DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                     1.0   \n","DecisionTreeClassifier_C ['Frecuencia_sequías']                                                    0.802721   \n","DecisionTreeClassifier_O ['Frecuencia_sequías']                                                    0.802721   \n","DecisionTreeClassifier_C ['Cambio_lluvias']                                                         0.82619   \n","DecisionTreeClassifier_C ['Temperatura_promedio']                                                       1.0   \n","DecisionTreeClassifier_OC ['Frecuencia_sequías']                                                   0.802721   \n","SVC_O ['Temperatura_promedio']                                                                     0.357143   \n","KNeighborsClassifier_OC ['Temperatura_promedio']                                                   0.373016   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                                    1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                                 1.0   \n","SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']                                               0.408163   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            0.452381   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                1.0   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                               1.0   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                       1.0   \n","DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                      1.0   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                      1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                     1.0   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                                    1.0   \n","KNeighborsClassifier_C ['Temperatura_promedio']                                                    0.127551   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']                                                  0.510204   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']                                                  0.510204   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.510204   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                              0.519481   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                             0.46131   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                  0.369841   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                            0.510204   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             0.72619   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                  0.527778   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                                 0.369841   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.510204   \n","SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']                                               0.794643   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                             0.505952   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                              0.505952   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']               1.0   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                     1.0   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                                 1.0   \n","SVC_OC ['Temperatura_promedio']                                                                    0.357143   \n","DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                       1.0   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                       1.0   \n","DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                      1.0   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                                 1.0   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']              1.0   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']              1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']              1.0   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']               1.0   \n","KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                    0.225108   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias']                                                   0.794643   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']                                                  0.794643   \n","SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']                                                     0.484127   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                   1.0   \n","SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                                    0.484127   \n","SVC_C ['Cambio_lluvias']                                                                           0.408163   \n","KNeighborsClassifier_C ['Cambio_lluvias']                                                          0.229167   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias']                                                   0.866071   \n","SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']                                                     0.484127   \n","SVC_C ['Temperatura_promedio']                                                                     0.702381   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                             0.838435   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                            0.838435   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                             0.897959   \n","\n","                                                                                            precision_test  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']                                                       0.888889   \n","SVC_O ['Cambio_lluvias']                                                                          0.888889   \n","DecisionTreeClassifier_O ['Temperatura_promedio']                                                 0.888889   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']                                                  0.444444   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                            0.444444   \n","DecisionTreeClassifier_OC ['Temperatura_promedio']                                                0.888889   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                           0.888889   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                            0.888889   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']                                                    0.888889   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                            0.888889   \n","DecisionTreeClassifier_OC ['Cambio_lluvias']                                                      0.722222   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                              0.888889   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.888889   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.888889   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                                0.888889   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                               0.888889   \n","KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.888889   \n","SVC_C ['Frecuencia_sequías']                                                                      0.722222   \n","KNeighborsClassifier_O ['Cambio_lluvias']                                                         0.888889   \n","KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.888889   \n","SVC_O ['Frecuencia_sequías']                                                                      0.722222   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.888889   \n","KNeighborsClassifier_OC ['Cambio_lluvias']                                                        0.888889   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                                0.888889   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                 0.444444   \n","SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                                  0.722222   \n","SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.722222   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.444444   \n","KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.722222   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.722222   \n","KNeighborsClassifier_OC ['Frecuencia_sequías']                                                    0.722222   \n","KNeighborsClassifier_C ['Frecuencia_sequías']                                                     0.722222   \n","SVC_OC ['Frecuencia_sequías']                                                                     0.722222   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           0.833333   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                             0.444444   \n","KNeighborsClassifier_O ['Temperatura_promedio']                                                   0.444444   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.833333   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.888889   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.833333   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                               0.833333   \n","SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                                 0.25   \n","SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']                                                  0.25   \n","SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.333333   \n","SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                            0.466667   \n","SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.466667   \n","SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.333333   \n","SVC_OC ['Cambio_lluvias']                                                                         0.333333   \n","KNeighborsClassifier_O ['Frecuencia_sequías']                                                     0.388889   \n","DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               0.833333   \n","DecisionTreeClassifier_C ['Frecuencia_sequías']                                                        0.5   \n","DecisionTreeClassifier_O ['Frecuencia_sequías']                                                        0.5   \n","DecisionTreeClassifier_C ['Cambio_lluvias']                                                            0.5   \n","DecisionTreeClassifier_C ['Temperatura_promedio']                                                 0.833333   \n","DecisionTreeClassifier_OC ['Frecuencia_sequías']                                                       0.5   \n","SVC_O ['Temperatura_promedio']                                                                    0.444444   \n","KNeighborsClassifier_OC ['Temperatura_promedio']                                                       0.5   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                          0.833333   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                              0.666667   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                           0.833333   \n","SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']                                              0.444444   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           0.444444   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.833333   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.833333   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         0.833333   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.833333   \n","DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                0.833333   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.833333   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                               0.666667   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                              0.833333   \n","KNeighborsClassifier_C ['Temperatura_promedio']                                                   0.111111   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.466667   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.466667   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                                0.466667   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                             0.466667   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.466667   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                 0.333333   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.466667   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           0.333333   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                 0.333333   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                                0.333333   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                          0.466667   \n","SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']                                              0.466667   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                            0.466667   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                             0.466667   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.611111   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                               0.466667   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                           0.611111   \n","SVC_OC ['Temperatura_promedio']                                                                   0.466667   \n","DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.611111   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.611111   \n","DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.611111   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                           0.611111   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.611111   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.611111   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.611111   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       0.611111   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.611111   \n","KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.833333   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias']                                                      0.25   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']                                                     0.25   \n","SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']                                                    0.222222   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                 0.25   \n","SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.222222   \n","SVC_C ['Cambio_lluvias']                                                                              0.25   \n","KNeighborsClassifier_C ['Cambio_lluvias']                                                         0.222222   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias']                                                      0.25   \n","SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']                                                    0.466667   \n","SVC_C ['Temperatura_promedio']                                                                    0.466667   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                            0.466667   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.466667   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                            0.466667   \n","\n","                                                                                            recall_train  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']                                                     0.785714   \n","SVC_O ['Cambio_lluvias']                                                                        0.714286   \n","DecisionTreeClassifier_O ['Temperatura_promedio']                                                    1.0   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']                                                0.714286   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                          0.714286   \n","DecisionTreeClassifier_OC ['Temperatura_promedio']                                                   1.0   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                         0.571429   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                          0.571429   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']                                                  0.714286   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.571429   \n","DecisionTreeClassifier_OC ['Cambio_lluvias']                                                    0.785714   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                                 1.0   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.642857   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       0.642857   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                              0.571429   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                             0.571429   \n","KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                0.642857   \n","SVC_C ['Frecuencia_sequías']                                                                    0.714286   \n","KNeighborsClassifier_O ['Cambio_lluvias']                                                       0.714286   \n","KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               0.714286   \n","SVC_O ['Frecuencia_sequías']                                                                    0.785714   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.714286   \n","KNeighborsClassifier_OC ['Cambio_lluvias']                                                      0.714286   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                              0.571429   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                    0.5   \n","SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                                0.571429   \n","SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                                 0.571429   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.571429   \n","KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.571429   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.571429   \n","KNeighborsClassifier_OC ['Frecuencia_sequías']                                                  0.714286   \n","KNeighborsClassifier_C ['Frecuencia_sequías']                                                   0.714286   \n","SVC_OC ['Frecuencia_sequías']                                                                   0.785714   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.428571   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                                0.5   \n","KNeighborsClassifier_O ['Temperatura_promedio']                                                 0.357143   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.428571   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.714286   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            1.0   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                  1.0   \n","SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                           0.714286   \n","SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']                                            0.714286   \n","SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                                 0.571429   \n","SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                          0.571429   \n","SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                           0.571429   \n","SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                           0.571429   \n","SVC_OC ['Cambio_lluvias']                                                                       0.642857   \n","KNeighborsClassifier_O ['Frecuencia_sequías']                                                   0.642857   \n","DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                  1.0   \n","DecisionTreeClassifier_C ['Frecuencia_sequías']                                                 0.785714   \n","DecisionTreeClassifier_O ['Frecuencia_sequías']                                                 0.785714   \n","DecisionTreeClassifier_C ['Cambio_lluvias']                                                     0.785714   \n","DecisionTreeClassifier_C ['Temperatura_promedio']                                                    1.0   \n","DecisionTreeClassifier_OC ['Frecuencia_sequías']                                                0.785714   \n","SVC_O ['Temperatura_promedio']                                                                       0.5   \n","KNeighborsClassifier_OC ['Temperatura_promedio']                                                     0.5   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                             1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                                 1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                              1.0   \n","SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']                                            0.571429   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']              0.5   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                             1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                             1.0   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                            1.0   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                    1.0   \n","DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                   1.0   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                   1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                  1.0   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                                 1.0   \n","KNeighborsClassifier_C ['Temperatura_promedio']                                                 0.357143   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']                                               0.714286   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']                                               0.714286   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                              0.714286   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                           0.571429   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         0.642857   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                               0.571429   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         0.714286   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.571429   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                    0.5   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                              0.571429   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                        0.714286   \n","SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']                                            0.714286   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.428571   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                           0.428571   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            1.0   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                  1.0   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                              1.0   \n","SVC_OC ['Temperatura_promedio']                                                                      0.5   \n","DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                    1.0   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                    1.0   \n","DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                   1.0   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                              1.0   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           1.0   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           1.0   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            1.0   \n","KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.357143   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias']                                                0.714286   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']                                               0.714286   \n","SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']                                                  0.642857   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                1.0   \n","SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                                 0.642857   \n","SVC_C ['Cambio_lluvias']                                                                        0.571429   \n","KNeighborsClassifier_C ['Cambio_lluvias']                                                       0.357143   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias']                                                0.785714   \n","SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']                                                  0.642857   \n","SVC_C ['Temperatura_promedio']                                                                  0.571429   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                          0.785714   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         0.785714   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                          0.857143   \n","\n","                                                                                            recall_test  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']                                                    0.833333   \n","SVC_O ['Cambio_lluvias']                                                                       0.833333   \n","DecisionTreeClassifier_O ['Temperatura_promedio']                                              0.833333   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']                                               0.666667   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         0.666667   \n","DecisionTreeClassifier_OC ['Temperatura_promedio']                                             0.833333   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                        0.833333   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                         0.833333   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']                                                 0.833333   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                         0.833333   \n","DecisionTreeClassifier_OC ['Cambio_lluvias']                                                   0.666667   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                           0.833333   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       0.833333   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      0.833333   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                             0.833333   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                            0.833333   \n","KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                               0.833333   \n","SVC_C ['Frecuencia_sequías']                                                                   0.666667   \n","KNeighborsClassifier_O ['Cambio_lluvias']                                                      0.833333   \n","KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                              0.833333   \n","SVC_O ['Frecuencia_sequías']                                                                   0.666667   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                               0.833333   \n","KNeighborsClassifier_OC ['Cambio_lluvias']                                                     0.833333   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                             0.833333   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                              0.666667   \n","SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                               0.666667   \n","SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                                0.666667   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       0.666667   \n","KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                               0.666667   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                0.666667   \n","KNeighborsClassifier_OC ['Frecuencia_sequías']                                                 0.666667   \n","KNeighborsClassifier_C ['Frecuencia_sequías']                                                  0.666667   \n","SVC_OC ['Frecuencia_sequías']                                                                  0.666667   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.666667   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                          0.666667   \n","KNeighborsClassifier_O ['Temperatura_promedio']                                                0.666667   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       0.666667   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                0.833333   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      0.666667   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                            0.666667   \n","SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                          0.333333   \n","SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']                                           0.333333   \n","SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                                     0.5   \n","SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                              0.5   \n","SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                               0.5   \n","SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                               0.5   \n","SVC_OC ['Cambio_lluvias']                                                                           0.5   \n","KNeighborsClassifier_O ['Frecuencia_sequías']                                                       0.5   \n","DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                            0.666667   \n","DecisionTreeClassifier_C ['Frecuencia_sequías']                                                     0.5   \n","DecisionTreeClassifier_O ['Frecuencia_sequías']                                                     0.5   \n","DecisionTreeClassifier_C ['Cambio_lluvias']                                                         0.5   \n","DecisionTreeClassifier_C ['Temperatura_promedio']                                              0.666667   \n","DecisionTreeClassifier_OC ['Frecuencia_sequías']                                                    0.5   \n","SVC_O ['Temperatura_promedio']                                                                 0.666667   \n","KNeighborsClassifier_OC ['Temperatura_promedio']                                               0.666667   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                       0.666667   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                           0.666667   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                        0.666667   \n","SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']                                           0.666667   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.666667   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                       0.666667   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                       0.666667   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                      0.666667   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                              0.666667   \n","DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                             0.666667   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                             0.666667   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                            0.666667   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                           0.666667   \n","KNeighborsClassifier_C ['Temperatura_promedio']                                                0.333333   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']                                                   0.5   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']                                                   0.5   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                                  0.5   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                               0.5   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                             0.5   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                   0.5   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                             0.5   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             0.5   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                   0.5   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                                  0.5   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                            0.5   \n","SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']                                                0.5   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                              0.5   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                               0.5   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           0.5   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                 0.5   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                             0.5   \n","SVC_OC ['Temperatura_promedio']                                                                     0.5   \n","DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.5   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.5   \n","DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.5   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                             0.5   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.5   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.5   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.5   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.5   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           0.5   \n","KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                0.666667   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias']                                               0.333333   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']                                              0.333333   \n","SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']                                                 0.333333   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                          0.333333   \n","SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                                0.333333   \n","SVC_C ['Cambio_lluvias']                                                                       0.333333   \n","KNeighborsClassifier_C ['Cambio_lluvias']                                                      0.333333   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias']                                               0.333333   \n","SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']                                                      0.5   \n","SVC_C ['Temperatura_promedio']                                                                      0.5   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                              0.5   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                             0.5   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                              0.5   \n","\n","                                                                                            accuracy_train  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']                                                       0.785714   \n","SVC_O ['Cambio_lluvias']                                                                          0.714286   \n","DecisionTreeClassifier_O ['Temperatura_promedio']                                                      1.0   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']                                                  0.714286   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                            0.714286   \n","DecisionTreeClassifier_OC ['Temperatura_promedio']                                                     1.0   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                           0.571429   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                            0.571429   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']                                                    0.714286   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                            0.571429   \n","DecisionTreeClassifier_OC ['Cambio_lluvias']                                                      0.785714   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                                   1.0   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.642857   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.642857   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                                0.571429   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                               0.571429   \n","KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.642857   \n","SVC_C ['Frecuencia_sequías']                                                                      0.714286   \n","KNeighborsClassifier_O ['Cambio_lluvias']                                                         0.714286   \n","KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.714286   \n","SVC_O ['Frecuencia_sequías']                                                                      0.785714   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.714286   \n","KNeighborsClassifier_OC ['Cambio_lluvias']                                                        0.714286   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                                0.571429   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                      0.5   \n","SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                                  0.571429   \n","SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.571429   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.571429   \n","KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.571429   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.571429   \n","KNeighborsClassifier_OC ['Frecuencia_sequías']                                                    0.714286   \n","KNeighborsClassifier_C ['Frecuencia_sequías']                                                     0.714286   \n","SVC_OC ['Frecuencia_sequías']                                                                     0.785714   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           0.428571   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                                  0.5   \n","KNeighborsClassifier_O ['Temperatura_promedio']                                                   0.357143   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.428571   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.714286   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']              1.0   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                    1.0   \n","SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.714286   \n","SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']                                              0.714286   \n","SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.571429   \n","SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                            0.571429   \n","SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.571429   \n","SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.571429   \n","SVC_OC ['Cambio_lluvias']                                                                         0.642857   \n","KNeighborsClassifier_O ['Frecuencia_sequías']                                                     0.642857   \n","DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                    1.0   \n","DecisionTreeClassifier_C ['Frecuencia_sequías']                                                   0.785714   \n","DecisionTreeClassifier_O ['Frecuencia_sequías']                                                   0.785714   \n","DecisionTreeClassifier_C ['Cambio_lluvias']                                                       0.785714   \n","DecisionTreeClassifier_C ['Temperatura_promedio']                                                      1.0   \n","DecisionTreeClassifier_OC ['Frecuencia_sequías']                                                  0.785714   \n","SVC_O ['Temperatura_promedio']                                                                         0.5   \n","KNeighborsClassifier_OC ['Temperatura_promedio']                                                       0.5   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                               1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                                   1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                                1.0   \n","SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']                                              0.571429   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                0.5   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                               1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                               1.0   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                              1.0   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                      1.0   \n","DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                     1.0   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                     1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                    1.0   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                                   1.0   \n","KNeighborsClassifier_C ['Temperatura_promedio']                                                   0.357143   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.714286   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.714286   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                                0.714286   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                             0.571429   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.642857   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                 0.571429   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.714286   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           0.571429   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                      0.5   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                                0.571429   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                          0.714286   \n","SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']                                              0.714286   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                            0.428571   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                             0.428571   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']              1.0   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                    1.0   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                                1.0   \n","SVC_OC ['Temperatura_promedio']                                                                        0.5   \n","DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                      1.0   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                      1.0   \n","DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                     1.0   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                                1.0   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             1.0   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             1.0   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']              1.0   \n","KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.357143   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias']                                                  0.714286   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.714286   \n","SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']                                                    0.642857   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                  1.0   \n","SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.642857   \n","SVC_C ['Cambio_lluvias']                                                                          0.571429   \n","KNeighborsClassifier_C ['Cambio_lluvias']                                                         0.357143   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias']                                                  0.785714   \n","SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']                                                    0.642857   \n","SVC_C ['Temperatura_promedio']                                                                    0.571429   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                            0.785714   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.785714   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                            0.857143   \n","\n","                                                                                            accuracy_test  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']                                                      0.833333   \n","SVC_O ['Cambio_lluvias']                                                                         0.833333   \n","DecisionTreeClassifier_O ['Temperatura_promedio']                                                0.833333   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.666667   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.666667   \n","DecisionTreeClassifier_OC ['Temperatura_promedio']                                               0.833333   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.833333   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                           0.833333   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.833333   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                           0.833333   \n","DecisionTreeClassifier_OC ['Cambio_lluvias']                                                     0.666667   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                             0.833333   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.833333   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.833333   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                               0.833333   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                              0.833333   \n","KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.833333   \n","SVC_C ['Frecuencia_sequías']                                                                     0.666667   \n","KNeighborsClassifier_O ['Cambio_lluvias']                                                        0.833333   \n","KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.833333   \n","SVC_O ['Frecuencia_sequías']                                                                     0.666667   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.833333   \n","KNeighborsClassifier_OC ['Cambio_lluvias']                                                       0.833333   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                               0.833333   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                0.666667   \n","SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                                 0.666667   \n","SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                                  0.666667   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.666667   \n","KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.666667   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.666667   \n","KNeighborsClassifier_OC ['Frecuencia_sequías']                                                   0.666667   \n","KNeighborsClassifier_C ['Frecuencia_sequías']                                                    0.666667   \n","SVC_OC ['Frecuencia_sequías']                                                                    0.666667   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.666667   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                            0.666667   \n","KNeighborsClassifier_O ['Temperatura_promedio']                                                  0.666667   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.666667   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.833333   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.666667   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                              0.666667   \n","SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                            0.333333   \n","SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.333333   \n","SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                                       0.5   \n","SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                                0.5   \n","SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                                 0.5   \n","SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                                 0.5   \n","SVC_OC ['Cambio_lluvias']                                                                             0.5   \n","KNeighborsClassifier_O ['Frecuencia_sequías']                                                         0.5   \n","DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                              0.666667   \n","DecisionTreeClassifier_C ['Frecuencia_sequías']                                                       0.5   \n","DecisionTreeClassifier_O ['Frecuencia_sequías']                                                       0.5   \n","DecisionTreeClassifier_C ['Cambio_lluvias']                                                           0.5   \n","DecisionTreeClassifier_C ['Temperatura_promedio']                                                0.666667   \n","DecisionTreeClassifier_OC ['Frecuencia_sequías']                                                      0.5   \n","SVC_O ['Temperatura_promedio']                                                                   0.666667   \n","KNeighborsClassifier_OC ['Temperatura_promedio']                                                 0.666667   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                         0.666667   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                             0.666667   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                          0.666667   \n","SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.666667   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.666667   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                         0.666667   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                         0.666667   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                        0.666667   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                0.666667   \n","DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                               0.666667   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                               0.666667   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                              0.666667   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                             0.666667   \n","KNeighborsClassifier_C ['Temperatura_promedio']                                                  0.333333   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']                                                     0.5   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']                                                     0.5   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                                    0.5   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                                 0.5   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                               0.5   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                     0.5   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                               0.5   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']               0.5   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                     0.5   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                                    0.5   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                              0.5   \n","SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']                                                  0.5   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                0.5   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                                 0.5   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             0.5   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                   0.5   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                               0.5   \n","SVC_OC ['Temperatura_promedio']                                                                       0.5   \n","DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                     0.5   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                     0.5   \n","DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                    0.5   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                               0.5   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            0.5   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            0.5   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            0.5   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           0.5   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             0.5   \n","KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.666667   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.333333   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']                                                0.333333   \n","SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.333333   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                            0.333333   \n","SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                                  0.333333   \n","SVC_C ['Cambio_lluvias']                                                                         0.333333   \n","KNeighborsClassifier_C ['Cambio_lluvias']                                                        0.333333   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.333333   \n","SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']                                                        0.5   \n","SVC_C ['Temperatura_promedio']                                                                        0.5   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                                0.5   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                               0.5   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                                0.5   \n","\n","                                                                                            roc_auc_train  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']                                                      0.948016   \n","SVC_O ['Cambio_lluvias']                                                                         0.859127   \n","DecisionTreeClassifier_O ['Temperatura_promedio']                                                     1.0   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.889683   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.881746   \n","DecisionTreeClassifier_OC ['Temperatura_promedio']                                                    1.0   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.723016   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                           0.723016   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.865873   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                           0.723016   \n","DecisionTreeClassifier_OC ['Cambio_lluvias']                                                     0.948016   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                                  1.0   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.784127   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.784127   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                               0.753968   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                              0.753968   \n","KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.843651   \n","SVC_C ['Frecuencia_sequías']                                                                     0.823016   \n","KNeighborsClassifier_O ['Cambio_lluvias']                                                        0.778571   \n","KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.859524   \n","SVC_O ['Frecuencia_sequías']                                                                     0.862698   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.859524   \n","KNeighborsClassifier_OC ['Cambio_lluvias']                                                       0.859524   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                               0.753968   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                0.694444   \n","SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                                 0.866667   \n","SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                                  0.866667   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.772222   \n","KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.785714   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.785714   \n","KNeighborsClassifier_OC ['Frecuencia_sequías']                                                   0.859127   \n","KNeighborsClassifier_C ['Frecuencia_sequías']                                                    0.837698   \n","SVC_OC ['Frecuencia_sequías']                                                                    0.862698   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.745238   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                             0.70873   \n","KNeighborsClassifier_O ['Temperatura_promedio']                                                  0.647619   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.745238   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.803968   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             1.0   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                   1.0   \n","SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                            0.773016   \n","SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.773016   \n","SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                                  0.837302   \n","SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                                0.7   \n","SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                                 0.7   \n","SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                            0.752381   \n","SVC_OC ['Cambio_lluvias']                                                                        0.800397   \n","KNeighborsClassifier_O ['Frecuencia_sequías']                                                    0.798016   \n","DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                   1.0   \n","DecisionTreeClassifier_C ['Frecuencia_sequías']                                                  0.940476   \n","DecisionTreeClassifier_O ['Frecuencia_sequías']                                                  0.940476   \n","DecisionTreeClassifier_C ['Cambio_lluvias']                                                      0.948016   \n","DecisionTreeClassifier_C ['Temperatura_promedio']                                                     1.0   \n","DecisionTreeClassifier_OC ['Frecuencia_sequías']                                                 0.940476   \n","SVC_O ['Temperatura_promedio']                                                                    0.67619   \n","KNeighborsClassifier_OC ['Temperatura_promedio']                                                      0.7   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                              1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                                  1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                               1.0   \n","SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.766667   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.738889   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                              1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                              1.0   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                             1.0   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                     1.0   \n","DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                    1.0   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                    1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                   1.0   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                                  1.0   \n","KNeighborsClassifier_C ['Temperatura_promedio']                                                  0.727778   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.72381   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']                                                0.685714   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                               0.685714   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                            0.692063   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.71746   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                0.734127   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                          0.680952   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.829365   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                0.684921   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                               0.734127   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         0.680952   \n","SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']                                             0.897619   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                           0.663492   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                            0.663492   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             1.0   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                   1.0   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                               1.0   \n","SVC_OC ['Temperatura_promedio']                                                                  0.542063   \n","DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                     1.0   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                     1.0   \n","DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                    1.0   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                               1.0   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            1.0   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            1.0   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']            1.0   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           1.0   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             1.0   \n","KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.648413   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.122222   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']                                                0.122222   \n","SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.704762   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                 1.0   \n","SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                                  0.704762   \n","SVC_C ['Cambio_lluvias']                                                                         0.281349   \n","KNeighborsClassifier_C ['Cambio_lluvias']                                                        0.609524   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias']                                                 0.137302   \n","SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']                                                   0.211905   \n","SVC_C ['Temperatura_promedio']                                                                   0.579365   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.073016   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                          0.073016   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                           0.059524   \n","\n","                                                                                            roc_auc_test  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']                                                       0.9375   \n","SVC_O ['Cambio_lluvias']                                                                        0.916667   \n","DecisionTreeClassifier_O ['Temperatura_promedio']                                                  0.875   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']                                                   0.875   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                             0.875   \n","DecisionTreeClassifier_OC ['Temperatura_promedio']                                                 0.875   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                            0.875   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                             0.875   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']                                                     0.875   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                             0.875   \n","DecisionTreeClassifier_OC ['Cambio_lluvias']                                                       0.875   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                               0.875   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.854167   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']       0.854167   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                              0.854167   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                             0.854167   \n","KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                0.833333   \n","SVC_C ['Frecuencia_sequías']                                                                    0.833333   \n","KNeighborsClassifier_O ['Cambio_lluvias']                                                       0.833333   \n","KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                               0.833333   \n","SVC_O ['Frecuencia_sequías']                                                                    0.833333   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.833333   \n","KNeighborsClassifier_OC ['Cambio_lluvias']                                                        0.8125   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                                0.8125   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                 0.8125   \n","SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                                0.791667   \n","SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                                 0.791667   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.791667   \n","KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                0.791667   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.791667   \n","KNeighborsClassifier_OC ['Frecuencia_sequías']                                                  0.791667   \n","KNeighborsClassifier_C ['Frecuencia_sequías']                                                   0.791667   \n","SVC_OC ['Frecuencia_sequías']                                                                   0.791667   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.770833   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                           0.770833   \n","KNeighborsClassifier_O ['Temperatura_promedio']                                                 0.770833   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.770833   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.770833   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']           0.75   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                                 0.75   \n","SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                               0.75   \n","SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']                                                0.75   \n","SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                                     0.75   \n","SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                              0.75   \n","SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                               0.75   \n","SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                               0.75   \n","SVC_OC ['Cambio_lluvias']                                                                           0.75   \n","KNeighborsClassifier_O ['Frecuencia_sequías']                                                       0.75   \n","DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.75   \n","DecisionTreeClassifier_C ['Frecuencia_sequías']                                                     0.75   \n","DecisionTreeClassifier_O ['Frecuencia_sequías']                                                     0.75   \n","DecisionTreeClassifier_C ['Cambio_lluvias']                                                         0.75   \n","DecisionTreeClassifier_C ['Temperatura_promedio']                                                   0.75   \n","DecisionTreeClassifier_OC ['Frecuencia_sequías']                                                    0.75   \n","SVC_O ['Temperatura_promedio']                                                                      0.75   \n","KNeighborsClassifier_OC ['Temperatura_promedio']                                                    0.75   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                            0.75   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                                0.75   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                             0.75   \n","SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']                                                0.75   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']             0.75   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                            0.75   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                            0.75   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                           0.75   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                                   0.75   \n","DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.75   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.75   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                                 0.75   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                                0.75   \n","KNeighborsClassifier_C ['Temperatura_promedio']                                                 0.729167   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']                                               0.708333   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']                                               0.708333   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                              0.708333   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                             0.6875   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         0.666667   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                               0.666667   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         0.666667   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.666667   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                               0.666667   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                              0.666667   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                        0.666667   \n","SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']                                            0.666667   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                          0.645833   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                           0.645833   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.625   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                                0.625   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                            0.625   \n","SVC_OC ['Temperatura_promedio']                                                                    0.625   \n","DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.625   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                                  0.625   \n","DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.625   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                            0.625   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.625   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.625   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']         0.625   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']        0.625   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']          0.625   \n","KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                                 0.604167   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias']                                                0.541667   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']                                               0.541667   \n","SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']                                                       0.5   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                0.5   \n","SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                                      0.5   \n","SVC_C ['Cambio_lluvias']                                                                        0.458333   \n","KNeighborsClassifier_C ['Cambio_lluvias']                                                       0.395833   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias']                                                   0.375   \n","SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']                                                     0.375   \n","SVC_C ['Temperatura_promedio']                                                                  0.333333   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                          0.291667   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                         0.291667   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                          0.166667   \n","\n","                                                                                                               confusion_train  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']                                                  [[5, 0, 0], [1, 3, 0], [0, 2, 3]]   \n","SVC_O ['Cambio_lluvias']                                                                     [[5, 0, 0], [2, 0, 2], [0, 0, 5]]   \n","DecisionTreeClassifier_O ['Temperatura_promedio']                                            [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']                                             [[5, 0, 0], [2, 0, 2], [0, 0, 5]]   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       [[5, 0, 0], [2, 0, 2], [0, 0, 5]]   \n","DecisionTreeClassifier_OC ['Temperatura_promedio']                                           [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                      [[4, 0, 1], [2, 1, 1], [1, 1, 3]]   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                       [[4, 0, 1], [2, 1, 1], [1, 1, 3]]   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']                                               [[5, 0, 0], [2, 0, 2], [0, 0, 5]]   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                       [[4, 0, 1], [2, 1, 1], [1, 1, 3]]   \n","DecisionTreeClassifier_OC ['Cambio_lluvias']                                                 [[5, 0, 0], [1, 3, 0], [0, 2, 3]]   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                         [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     [[4, 1, 0], [2, 1, 1], [0, 1, 4]]   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    [[4, 1, 0], [2, 1, 1], [0, 1, 4]]   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                           [[4, 1, 0], [2, 0, 2], [0, 1, 4]]   \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                          [[4, 1, 0], [2, 0, 2], [0, 1, 4]]   \n","KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                             [[4, 1, 0], [2, 1, 1], [0, 1, 4]]   \n","SVC_C ['Frecuencia_sequías']                                                                 [[4, 1, 0], [2, 2, 0], [1, 0, 4]]   \n","KNeighborsClassifier_O ['Cambio_lluvias']                                                    [[5, 0, 0], [2, 0, 2], [0, 0, 5]]   \n","KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                            [[5, 0, 0], [2, 1, 1], [0, 1, 4]]   \n","SVC_O ['Frecuencia_sequías']                                                                 [[4, 1, 0], [1, 3, 0], [0, 1, 4]]   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                             [[5, 0, 0], [2, 1, 1], [0, 1, 4]]   \n","KNeighborsClassifier_OC ['Cambio_lluvias']                                                   [[5, 0, 0], [2, 1, 1], [0, 1, 4]]   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                           [[4, 1, 0], [2, 0, 2], [0, 1, 4]]   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                            [[4, 1, 0], [2, 0, 2], [0, 2, 3]]   \n","SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                             [[4, 1, 0], [2, 0, 2], [0, 1, 4]]   \n","SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                              [[4, 1, 0], [2, 0, 2], [0, 1, 4]]   \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     [[4, 1, 0], [2, 0, 2], [0, 1, 4]]   \n","KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                             [[5, 0, 0], [4, 0, 0], [1, 1, 3]]   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                              [[5, 0, 0], [4, 0, 0], [1, 1, 3]]   \n","KNeighborsClassifier_OC ['Frecuencia_sequías']                                               [[4, 1, 0], [2, 2, 0], [1, 0, 4]]   \n","KNeighborsClassifier_C ['Frecuencia_sequías']                                                [[4, 1, 0], [2, 2, 0], [1, 0, 4]]   \n","SVC_OC ['Frecuencia_sequías']                                                                [[4, 1, 0], [1, 3, 0], [0, 1, 4]]   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      [[4, 1, 0], [2, 2, 0], [2, 3, 0]]   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                        [[4, 0, 1], [2, 1, 1], [1, 2, 2]]   \n","KNeighborsClassifier_O ['Temperatura_promedio']                                              [[4, 0, 1], [3, 0, 1], [2, 2, 1]]   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     [[4, 1, 0], [2, 2, 0], [2, 3, 0]]   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                              [[5, 0, 0], [2, 1, 1], [0, 1, 4]]   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                          [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                        [[5, 0, 0], [2, 1, 1], [1, 0, 4]]   \n","SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']                                         [[5, 0, 0], [2, 1, 1], [1, 0, 4]]   \n","SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                              [[4, 1, 0], [2, 0, 2], [0, 1, 4]]   \n","SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                       [[4, 0, 1], [2, 0, 2], [1, 0, 4]]   \n","SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                        [[4, 0, 1], [2, 0, 2], [1, 0, 4]]   \n","SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                        [[4, 0, 1], [2, 0, 2], [1, 0, 4]]   \n","SVC_OC ['Cambio_lluvias']                                                                    [[4, 1, 0], [2, 0, 2], [0, 0, 5]]   \n","KNeighborsClassifier_O ['Frecuencia_sequías']                                                [[4, 0, 1], [2, 1, 1], [1, 0, 4]]   \n","DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                          [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_C ['Frecuencia_sequías']                                              [[5, 0, 0], [2, 2, 0], [0, 1, 4]]   \n","DecisionTreeClassifier_O ['Frecuencia_sequías']                                              [[5, 0, 0], [2, 2, 0], [0, 1, 4]]   \n","DecisionTreeClassifier_C ['Cambio_lluvias']                                                  [[5, 0, 0], [1, 3, 0], [0, 2, 3]]   \n","DecisionTreeClassifier_C ['Temperatura_promedio']                                            [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_OC ['Frecuencia_sequías']                                             [[5, 0, 0], [2, 2, 0], [0, 1, 4]]   \n","SVC_O ['Temperatura_promedio']                                                               [[4, 0, 1], [2, 0, 2], [2, 0, 3]]   \n","KNeighborsClassifier_OC ['Temperatura_promedio']                                             [[4, 0, 1], [3, 0, 1], [2, 0, 3]]   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                     [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                         [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                      [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']                                         [[4, 0, 1], [2, 0, 2], [1, 0, 4]]   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      [[4, 1, 0], [2, 0, 2], [0, 2, 3]]   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                     [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                     [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                    [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                            [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                           [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                           [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                          [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                         [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","KNeighborsClassifier_C ['Temperatura_promedio']                                              [[5, 0, 0], [4, 0, 0], [5, 0, 0]]   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']                                            [[5, 0, 0], [2, 0, 2], [0, 0, 5]]   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']                                            [[5, 0, 0], [2, 0, 2], [0, 0, 5]]   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                           [[5, 0, 0], [2, 0, 2], [0, 0, 5]]   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                        [[5, 0, 0], [4, 0, 0], [2, 0, 3]]   \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      [[4, 0, 1], [2, 0, 2], [0, 0, 5]]   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                            [[5, 0, 0], [1, 3, 0], [3, 2, 0]]   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      [[5, 0, 0], [2, 0, 2], [0, 0, 5]]   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      [[5, 0, 0], [2, 2, 0], [3, 1, 1]]   \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                            [[4, 0, 1], [2, 2, 0], [3, 1, 1]]   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                           [[5, 0, 0], [1, 3, 0], [3, 2, 0]]   \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                     [[5, 0, 0], [2, 0, 2], [0, 0, 5]]   \n","SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']                                         [[5, 0, 0], [2, 1, 1], [1, 0, 4]]   \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                       [[5, 0, 0], [4, 0, 0], [3, 1, 1]]   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                        [[5, 0, 0], [4, 0, 0], [3, 1, 1]]   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                          [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                      [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","SVC_OC ['Temperatura_promedio']                                                              [[4, 0, 1], [2, 0, 2], [2, 0, 3]]   \n","DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                            [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                            [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                           [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                      [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']  [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                              [[4, 1, 0], [3, 1, 0], [4, 1, 0]]   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias']                                             [[5, 0, 0], [2, 1, 1], [1, 0, 4]]   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']                                            [[5, 0, 0], [2, 1, 1], [1, 0, 4]]   \n","SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']                                               [[5, 0, 0], [3, 0, 1], [1, 0, 4]]   \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                        [[5, 0, 0], [0, 4, 0], [0, 0, 5]]   \n","SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                              [[5, 0, 0], [3, 0, 1], [1, 0, 4]]   \n","SVC_C ['Cambio_lluvias']                                                                     [[4, 0, 1], [2, 0, 2], [1, 0, 4]]   \n","KNeighborsClassifier_C ['Cambio_lluvias']                                                    [[3, 2, 0], [2, 2, 0], [3, 2, 0]]   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias']                                             [[4, 0, 1], [0, 2, 2], [0, 0, 5]]   \n","SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']                                               [[4, 0, 1], [1, 0, 3], [0, 0, 5]]   \n","SVC_C ['Temperatura_promedio']                                                               [[2, 0, 3], [1, 1, 2], [0, 0, 5]]   \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       [[5, 0, 0], [2, 1, 1], [0, 0, 5]]   \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      [[5, 0, 0], [2, 1, 1], [0, 0, 5]]   \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       [[5, 0, 0], [0, 2, 2], [0, 0, 5]]   \n","\n","                                                                                                                confusion_test  \n","DecisionTreeClassifier_O ['Cambio_lluvias']                                                  [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","SVC_O ['Cambio_lluvias']                                                                     [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","DecisionTreeClassifier_O ['Temperatura_promedio']                                            [[1, 1, 0], [0, 2, 0], [0, 0, 2]]  \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']                                             [[2, 0, 0], [1, 0, 1], [0, 0, 2]]  \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       [[2, 0, 0], [1, 0, 1], [0, 0, 2]]  \n","DecisionTreeClassifier_OC ['Temperatura_promedio']                                           [[1, 1, 0], [0, 2, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                      [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                       [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']                                               [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                       [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","DecisionTreeClassifier_OC ['Cambio_lluvias']                                                 [[2, 0, 0], [1, 1, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                         [[1, 1, 0], [0, 2, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']                           [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                          [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                             [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","SVC_C ['Frecuencia_sequías']                                                                 [[2, 0, 0], [1, 1, 0], [0, 1, 1]]  \n","KNeighborsClassifier_O ['Cambio_lluvias']                                                    [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                            [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","SVC_O ['Frecuencia_sequías']                                                                 [[2, 0, 0], [1, 1, 0], [0, 1, 1]]  \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                             [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OC ['Cambio_lluvias']                                                   [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                           [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                            [[2, 0, 0], [1, 0, 1], [0, 0, 2]]  \n","SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                                             [[1, 0, 1], [1, 1, 0], [0, 0, 2]]  \n","SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']                                              [[1, 0, 1], [1, 1, 0], [0, 0, 2]]  \n","KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     [[2, 0, 0], [1, 0, 1], [0, 0, 2]]  \n","KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                             [[2, 0, 0], [1, 1, 0], [0, 1, 1]]  \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                              [[2, 0, 0], [1, 1, 0], [0, 1, 1]]  \n","KNeighborsClassifier_OC ['Frecuencia_sequías']                                               [[2, 0, 0], [1, 1, 0], [0, 1, 1]]  \n","KNeighborsClassifier_C ['Frecuencia_sequías']                                                [[2, 0, 0], [1, 1, 0], [0, 1, 1]]  \n","SVC_OC ['Frecuencia_sequías']                                                                [[2, 0, 0], [1, 1, 0], [0, 1, 1]]  \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                        [[2, 0, 0], [1, 0, 1], [0, 0, 2]]  \n","KNeighborsClassifier_O ['Temperatura_promedio']                                              [[2, 0, 0], [1, 0, 1], [0, 0, 2]]  \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']     [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                              [[2, 0, 0], [1, 1, 0], [0, 0, 2]]  \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']                          [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']                                        [[1, 0, 1], [0, 0, 2], [1, 0, 1]]  \n","SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']                                         [[1, 0, 1], [0, 0, 2], [1, 0, 1]]  \n","SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']                                              [[1, 0, 1], [1, 0, 1], [0, 0, 2]]  \n","SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                                       [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']                                        [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']                                        [[1, 0, 1], [1, 0, 1], [0, 0, 2]]  \n","SVC_OC ['Cambio_lluvias']                                                                    [[1, 0, 1], [1, 0, 1], [0, 0, 2]]  \n","KNeighborsClassifier_O ['Frecuencia_sequías']                                                [[2, 0, 0], [1, 0, 1], [0, 1, 1]]  \n","DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']                          [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_C ['Frecuencia_sequías']                                              [[2, 0, 0], [2, 0, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_O ['Frecuencia_sequías']                                              [[2, 0, 0], [2, 0, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_C ['Cambio_lluvias']                                                  [[2, 0, 0], [2, 0, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_C ['Temperatura_promedio']                                            [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_OC ['Frecuencia_sequías']                                             [[2, 0, 0], [2, 0, 0], [0, 1, 1]]  \n","SVC_O ['Temperatura_promedio']                                                               [[2, 0, 0], [1, 0, 1], [0, 0, 2]]  \n","KNeighborsClassifier_OC ['Temperatura_promedio']                                             [[2, 0, 0], [2, 0, 0], [0, 0, 2]]  \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']                     [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                         [[1, 1, 0], [1, 1, 0], [0, 0, 2]]  \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                      [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']                                         [[2, 0, 0], [1, 0, 1], [0, 0, 2]]  \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      [[2, 0, 0], [1, 0, 1], [0, 0, 2]]  \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']                     [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                     [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']                    [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']                            [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']                           [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']                           [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                          [[1, 1, 0], [1, 1, 0], [0, 0, 2]]  \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']                         [[1, 1, 0], [0, 2, 0], [0, 1, 1]]  \n","KNeighborsClassifier_C ['Temperatura_promedio']                                              [[2, 0, 0], [2, 0, 0], [2, 0, 0]]  \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']                                            [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']                                            [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']                                           [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                        [[2, 0, 0], [2, 0, 0], [1, 0, 1]]  \n","SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']                            [[1, 1, 0], [0, 2, 0], [1, 1, 0]]  \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']      [[1, 1, 0], [0, 2, 0], [1, 1, 0]]  \n","KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                            [[1, 1, 0], [0, 2, 0], [1, 1, 0]]  \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']                           [[1, 1, 0], [0, 2, 0], [1, 1, 0]]  \n","SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                     [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']                                         [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']                       [[2, 0, 0], [2, 0, 0], [1, 0, 1]]  \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']                        [[2, 0, 0], [2, 0, 0], [1, 0, 1]]  \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    [[1, 1, 0], [1, 1, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']                          [[1, 1, 0], [0, 2, 0], [0, 2, 0]]  \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']                      [[1, 1, 0], [1, 1, 0], [0, 1, 1]]  \n","SVC_OC ['Temperatura_promedio']                                                              [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                            [[1, 1, 0], [1, 1, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']                            [[1, 1, 0], [1, 1, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']                           [[1, 1, 0], [1, 1, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']                      [[1, 1, 0], [1, 1, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   [[1, 1, 0], [1, 1, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   [[1, 1, 0], [0, 1, 1], [0, 1, 1]]  \n","DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']   [[1, 1, 0], [1, 1, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']  [[1, 1, 0], [1, 1, 0], [0, 1, 1]]  \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']    [[1, 1, 0], [1, 1, 0], [0, 1, 1]]  \n","KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']                              [[2, 0, 0], [1, 1, 0], [1, 0, 1]]  \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias']                                             [[1, 0, 1], [0, 0, 2], [1, 0, 1]]  \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']                                            [[1, 0, 1], [0, 0, 2], [1, 0, 1]]  \n","SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']                                               [[1, 0, 1], [1, 0, 1], [1, 0, 1]]  \n","DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']                        [[1, 1, 0], [1, 1, 0], [0, 2, 0]]  \n","SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']                                              [[1, 0, 1], [1, 0, 1], [1, 0, 1]]  \n","SVC_C ['Cambio_lluvias']                                                                     [[1, 0, 1], [0, 0, 2], [1, 0, 1]]  \n","KNeighborsClassifier_C ['Cambio_lluvias']                                                    [[1, 1, 0], [1, 1, 0], [1, 1, 0]]  \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias']                                             [[1, 0, 1], [0, 0, 2], [1, 0, 1]]  \n","SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']                                               [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","SVC_C ['Temperatura_promedio']                                                               [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                      [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  \n","SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']                       [[1, 0, 1], [0, 0, 2], [0, 0, 2]]  "],"text/html":["\n","  <div id=\"df-9c0b0f41-d60a-4a90-a50c-bf917d1486f8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>precision_train</th>\n","      <th>precision_test</th>\n","      <th>recall_train</th>\n","      <th>recall_test</th>\n","      <th>accuracy_train</th>\n","      <th>accuracy_test</th>\n","      <th>roc_auc_train</th>\n","      <th>roc_auc_test</th>\n","      <th>confusion_train</th>\n","      <th>confusion_test</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Cambio_lluvias']</th>\n","      <td>0.82619</td>\n","      <td>0.888889</td>\n","      <td>0.785714</td>\n","      <td>0.833333</td>\n","      <td>0.785714</td>\n","      <td>0.833333</td>\n","      <td>0.948016</td>\n","      <td>0.9375</td>\n","      <td>[[5, 0, 0], [1, 3, 0], [0, 2, 3]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Cambio_lluvias']</th>\n","      <td>0.510204</td>\n","      <td>0.888889</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.859127</td>\n","      <td>0.916667</td>\n","      <td>[[5, 0, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Temperatura_promedio']</th>\n","      <td>1.0</td>\n","      <td>0.888889</td>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.875</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.510204</td>\n","      <td>0.444444</td>\n","      <td>0.714286</td>\n","      <td>0.666667</td>\n","      <td>0.714286</td>\n","      <td>0.666667</td>\n","      <td>0.889683</td>\n","      <td>0.875</td>\n","      <td>[[5, 0, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.510204</td>\n","      <td>0.444444</td>\n","      <td>0.714286</td>\n","      <td>0.666667</td>\n","      <td>0.714286</td>\n","      <td>0.666667</td>\n","      <td>0.881746</td>\n","      <td>0.875</td>\n","      <td>[[5, 0, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OC ['Temperatura_promedio']</th>\n","      <td>1.0</td>\n","      <td>0.888889</td>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.875</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.561224</td>\n","      <td>0.888889</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.723016</td>\n","      <td>0.875</td>\n","      <td>[[4, 0, 1], [2, 1, 1], [1, 1, 3]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.561224</td>\n","      <td>0.888889</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.723016</td>\n","      <td>0.875</td>\n","      <td>[[4, 0, 1], [2, 1, 1], [1, 1, 3]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.510204</td>\n","      <td>0.888889</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.865873</td>\n","      <td>0.875</td>\n","      <td>[[5, 0, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.561224</td>\n","      <td>0.888889</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.723016</td>\n","      <td>0.875</td>\n","      <td>[[4, 0, 1], [2, 1, 1], [1, 1, 3]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OC ['Cambio_lluvias']</th>\n","      <td>0.82619</td>\n","      <td>0.722222</td>\n","      <td>0.785714</td>\n","      <td>0.666667</td>\n","      <td>0.785714</td>\n","      <td>0.666667</td>\n","      <td>0.948016</td>\n","      <td>0.875</td>\n","      <td>[[5, 0, 0], [1, 3, 0], [0, 2, 3]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.0</td>\n","      <td>0.888889</td>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.875</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.619048</td>\n","      <td>0.888889</td>\n","      <td>0.642857</td>\n","      <td>0.833333</td>\n","      <td>0.642857</td>\n","      <td>0.833333</td>\n","      <td>0.784127</td>\n","      <td>0.854167</td>\n","      <td>[[4, 1, 0], [2, 1, 1], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.619048</td>\n","      <td>0.888889</td>\n","      <td>0.642857</td>\n","      <td>0.833333</td>\n","      <td>0.642857</td>\n","      <td>0.833333</td>\n","      <td>0.784127</td>\n","      <td>0.854167</td>\n","      <td>[[4, 1, 0], [2, 1, 1], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.47619</td>\n","      <td>0.888889</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.753968</td>\n","      <td>0.854167</td>\n","      <td>[[4, 1, 0], [2, 0, 2], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.47619</td>\n","      <td>0.888889</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.753968</td>\n","      <td>0.854167</td>\n","      <td>[[4, 1, 0], [2, 0, 2], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.619048</td>\n","      <td>0.888889</td>\n","      <td>0.642857</td>\n","      <td>0.833333</td>\n","      <td>0.642857</td>\n","      <td>0.833333</td>\n","      <td>0.843651</td>\n","      <td>0.833333</td>\n","      <td>[[4, 1, 0], [2, 1, 1], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_C ['Frecuencia_sequías']</th>\n","      <td>0.751701</td>\n","      <td>0.722222</td>\n","      <td>0.714286</td>\n","      <td>0.666667</td>\n","      <td>0.714286</td>\n","      <td>0.666667</td>\n","      <td>0.823016</td>\n","      <td>0.833333</td>\n","      <td>[[4, 1, 0], [2, 2, 0], [1, 0, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Cambio_lluvias']</th>\n","      <td>0.510204</td>\n","      <td>0.888889</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.778571</td>\n","      <td>0.833333</td>\n","      <td>[[5, 0, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.683673</td>\n","      <td>0.888889</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.859524</td>\n","      <td>0.833333</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Frecuencia_sequías']</th>\n","      <td>0.814286</td>\n","      <td>0.722222</td>\n","      <td>0.785714</td>\n","      <td>0.666667</td>\n","      <td>0.785714</td>\n","      <td>0.666667</td>\n","      <td>0.862698</td>\n","      <td>0.833333</td>\n","      <td>[[4, 1, 0], [1, 3, 0], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.683673</td>\n","      <td>0.888889</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.859524</td>\n","      <td>0.833333</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OC ['Cambio_lluvias']</th>\n","      <td>0.683673</td>\n","      <td>0.888889</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.859524</td>\n","      <td>0.8125</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.47619</td>\n","      <td>0.888889</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.571429</td>\n","      <td>0.833333</td>\n","      <td>0.753968</td>\n","      <td>0.8125</td>\n","      <td>[[4, 1, 0], [2, 0, 2], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.452381</td>\n","      <td>0.444444</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.694444</td>\n","      <td>0.8125</td>\n","      <td>[[4, 1, 0], [2, 0, 2], [0, 2, 3]]</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OCB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.47619</td>\n","      <td>0.722222</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.866667</td>\n","      <td>0.791667</td>\n","      <td>[[4, 1, 0], [2, 0, 2], [0, 1, 4]]</td>\n","      <td>[[1, 0, 1], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.47619</td>\n","      <td>0.722222</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.866667</td>\n","      <td>0.791667</td>\n","      <td>[[4, 1, 0], [2, 0, 2], [0, 1, 4]]</td>\n","      <td>[[1, 0, 1], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.47619</td>\n","      <td>0.444444</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.772222</td>\n","      <td>0.791667</td>\n","      <td>[[4, 1, 0], [2, 0, 2], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.535714</td>\n","      <td>0.722222</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.785714</td>\n","      <td>0.791667</td>\n","      <td>[[5, 0, 0], [4, 0, 0], [1, 1, 3]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.535714</td>\n","      <td>0.722222</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.785714</td>\n","      <td>0.791667</td>\n","      <td>[[5, 0, 0], [4, 0, 0], [1, 1, 3]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OC ['Frecuencia_sequías']</th>\n","      <td>0.751701</td>\n","      <td>0.722222</td>\n","      <td>0.714286</td>\n","      <td>0.666667</td>\n","      <td>0.714286</td>\n","      <td>0.666667</td>\n","      <td>0.859127</td>\n","      <td>0.791667</td>\n","      <td>[[4, 1, 0], [2, 2, 0], [1, 0, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_C ['Frecuencia_sequías']</th>\n","      <td>0.751701</td>\n","      <td>0.722222</td>\n","      <td>0.714286</td>\n","      <td>0.666667</td>\n","      <td>0.714286</td>\n","      <td>0.666667</td>\n","      <td>0.837698</td>\n","      <td>0.791667</td>\n","      <td>[[4, 1, 0], [2, 2, 0], [1, 0, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OC ['Frecuencia_sequías']</th>\n","      <td>0.814286</td>\n","      <td>0.722222</td>\n","      <td>0.785714</td>\n","      <td>0.666667</td>\n","      <td>0.785714</td>\n","      <td>0.666667</td>\n","      <td>0.862698</td>\n","      <td>0.791667</td>\n","      <td>[[4, 1, 0], [1, 3, 0], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.27381</td>\n","      <td>0.833333</td>\n","      <td>0.428571</td>\n","      <td>0.666667</td>\n","      <td>0.428571</td>\n","      <td>0.666667</td>\n","      <td>0.745238</td>\n","      <td>0.770833</td>\n","      <td>[[4, 1, 0], [2, 2, 0], [2, 3, 0]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.477891</td>\n","      <td>0.444444</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.70873</td>\n","      <td>0.770833</td>\n","      <td>[[4, 0, 1], [2, 1, 1], [1, 2, 2]]</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Temperatura_promedio']</th>\n","      <td>0.277778</td>\n","      <td>0.444444</td>\n","      <td>0.357143</td>\n","      <td>0.666667</td>\n","      <td>0.357143</td>\n","      <td>0.666667</td>\n","      <td>0.647619</td>\n","      <td>0.770833</td>\n","      <td>[[4, 0, 1], [3, 0, 1], [2, 2, 1]]</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.27381</td>\n","      <td>0.833333</td>\n","      <td>0.428571</td>\n","      <td>0.666667</td>\n","      <td>0.428571</td>\n","      <td>0.666667</td>\n","      <td>0.745238</td>\n","      <td>0.770833</td>\n","      <td>[[4, 1, 0], [2, 2, 0], [2, 3, 0]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.683673</td>\n","      <td>0.888889</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.714286</td>\n","      <td>0.833333</td>\n","      <td>0.803968</td>\n","      <td>0.770833</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_CB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.794643</td>\n","      <td>0.25</td>\n","      <td>0.714286</td>\n","      <td>0.333333</td>\n","      <td>0.714286</td>\n","      <td>0.333333</td>\n","      <td>0.773016</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_B ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.794643</td>\n","      <td>0.25</td>\n","      <td>0.714286</td>\n","      <td>0.333333</td>\n","      <td>0.714286</td>\n","      <td>0.333333</td>\n","      <td>0.773016</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OC ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.47619</td>\n","      <td>0.333333</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.837302</td>\n","      <td>0.75</td>\n","      <td>[[4, 1, 0], [2, 0, 2], [0, 1, 4]]</td>\n","      <td>[[1, 0, 1], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OCB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.408163</td>\n","      <td>0.466667</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.7</td>\n","      <td>0.75</td>\n","      <td>[[4, 0, 1], [2, 0, 2], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.408163</td>\n","      <td>0.466667</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.7</td>\n","      <td>0.75</td>\n","      <td>[[4, 0, 1], [2, 0, 2], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OC ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.408163</td>\n","      <td>0.333333</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.752381</td>\n","      <td>0.75</td>\n","      <td>[[4, 0, 1], [2, 0, 2], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OC ['Cambio_lluvias']</th>\n","      <td>0.493197</td>\n","      <td>0.333333</td>\n","      <td>0.642857</td>\n","      <td>0.5</td>\n","      <td>0.642857</td>\n","      <td>0.5</td>\n","      <td>0.800397</td>\n","      <td>0.75</td>\n","      <td>[[4, 1, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Frecuencia_sequías']</th>\n","      <td>0.727891</td>\n","      <td>0.388889</td>\n","      <td>0.642857</td>\n","      <td>0.5</td>\n","      <td>0.642857</td>\n","      <td>0.5</td>\n","      <td>0.798016</td>\n","      <td>0.75</td>\n","      <td>[[4, 0, 1], [2, 1, 1], [1, 0, 4]]</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OCB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_C ['Frecuencia_sequías']</th>\n","      <td>0.802721</td>\n","      <td>0.5</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.940476</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [2, 2, 0], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Frecuencia_sequías']</th>\n","      <td>0.802721</td>\n","      <td>0.5</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.940476</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [2, 2, 0], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_C ['Cambio_lluvias']</th>\n","      <td>0.82619</td>\n","      <td>0.5</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.948016</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [1, 3, 0], [0, 2, 3]]</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_C ['Temperatura_promedio']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OC ['Frecuencia_sequías']</th>\n","      <td>0.802721</td>\n","      <td>0.5</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.940476</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [2, 2, 0], [0, 1, 4]]</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Temperatura_promedio']</th>\n","      <td>0.357143</td>\n","      <td>0.444444</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.67619</td>\n","      <td>0.75</td>\n","      <td>[[4, 0, 1], [2, 0, 2], [2, 0, 3]]</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OC ['Temperatura_promedio']</th>\n","      <td>0.373016</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.7</td>\n","      <td>0.75</td>\n","      <td>[[4, 0, 1], [3, 0, 1], [2, 0, 3]]</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OC ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.408163</td>\n","      <td>0.444444</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.571429</td>\n","      <td>0.666667</td>\n","      <td>0.766667</td>\n","      <td>0.75</td>\n","      <td>[[4, 0, 1], [2, 0, 2], [1, 0, 4]]</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.452381</td>\n","      <td>0.444444</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.738889</td>\n","      <td>0.75</td>\n","      <td>[[4, 1, 0], [2, 0, 2], [0, 2, 3]]</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OC ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.0</td>\n","      <td>0.833333</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.666667</td>\n","      <td>1.0</td>\n","      <td>0.75</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_C ['Temperatura_promedio']</th>\n","      <td>0.127551</td>\n","      <td>0.111111</td>\n","      <td>0.357143</td>\n","      <td>0.333333</td>\n","      <td>0.357143</td>\n","      <td>0.333333</td>\n","      <td>0.727778</td>\n","      <td>0.729167</td>\n","      <td>[[5, 0, 0], [4, 0, 0], [5, 0, 0]]</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [2, 0, 0]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OC ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.510204</td>\n","      <td>0.466667</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.72381</td>\n","      <td>0.708333</td>\n","      <td>[[5, 0, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.510204</td>\n","      <td>0.466667</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.685714</td>\n","      <td>0.708333</td>\n","      <td>[[5, 0, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.510204</td>\n","      <td>0.466667</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.685714</td>\n","      <td>0.708333</td>\n","      <td>[[5, 0, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.519481</td>\n","      <td>0.466667</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.692063</td>\n","      <td>0.6875</td>\n","      <td>[[5, 0, 0], [4, 0, 0], [2, 0, 3]]</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.46131</td>\n","      <td>0.466667</td>\n","      <td>0.642857</td>\n","      <td>0.5</td>\n","      <td>0.642857</td>\n","      <td>0.5</td>\n","      <td>0.71746</td>\n","      <td>0.666667</td>\n","      <td>[[4, 0, 1], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.369841</td>\n","      <td>0.333333</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.734127</td>\n","      <td>0.666667</td>\n","      <td>[[5, 0, 0], [1, 3, 0], [3, 2, 0]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [1, 1, 0]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.510204</td>\n","      <td>0.466667</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.680952</td>\n","      <td>0.666667</td>\n","      <td>[[5, 0, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.72619</td>\n","      <td>0.333333</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.829365</td>\n","      <td>0.666667</td>\n","      <td>[[5, 0, 0], [2, 2, 0], [3, 1, 1]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [1, 1, 0]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.527778</td>\n","      <td>0.333333</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.684921</td>\n","      <td>0.666667</td>\n","      <td>[[4, 0, 1], [2, 2, 0], [3, 1, 1]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [1, 1, 0]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.369841</td>\n","      <td>0.333333</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.734127</td>\n","      <td>0.666667</td>\n","      <td>[[5, 0, 0], [1, 3, 0], [3, 2, 0]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [1, 1, 0]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.510204</td>\n","      <td>0.466667</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.680952</td>\n","      <td>0.666667</td>\n","      <td>[[5, 0, 0], [2, 0, 2], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_C ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.794643</td>\n","      <td>0.466667</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.714286</td>\n","      <td>0.5</td>\n","      <td>0.897619</td>\n","      <td>0.666667</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_CB ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.505952</td>\n","      <td>0.466667</td>\n","      <td>0.428571</td>\n","      <td>0.5</td>\n","      <td>0.428571</td>\n","      <td>0.5</td>\n","      <td>0.663492</td>\n","      <td>0.645833</td>\n","      <td>[[5, 0, 0], [4, 0, 0], [3, 1, 1]]</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>0.505952</td>\n","      <td>0.466667</td>\n","      <td>0.428571</td>\n","      <td>0.5</td>\n","      <td>0.428571</td>\n","      <td>0.5</td>\n","      <td>0.663492</td>\n","      <td>0.645833</td>\n","      <td>[[5, 0, 0], [4, 0, 0], [3, 1, 1]]</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_C ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.0</td>\n","      <td>0.466667</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 2, 0]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OC ['Temperatura_promedio']</th>\n","      <td>0.357143</td>\n","      <td>0.466667</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.542063</td>\n","      <td>0.625</td>\n","      <td>[[4, 0, 1], [2, 0, 2], [2, 0, 3]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_CB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_C ['Temperatura_promedio', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OC ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [0, 1, 1], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>1.0</td>\n","      <td>0.611111</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>0.625</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 1, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_C ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.225108</td>\n","      <td>0.833333</td>\n","      <td>0.357143</td>\n","      <td>0.666667</td>\n","      <td>0.357143</td>\n","      <td>0.666667</td>\n","      <td>0.648413</td>\n","      <td>0.604167</td>\n","      <td>[[4, 1, 0], [3, 1, 0], [4, 1, 0]]</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_B ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.794643</td>\n","      <td>0.25</td>\n","      <td>0.714286</td>\n","      <td>0.333333</td>\n","      <td>0.714286</td>\n","      <td>0.333333</td>\n","      <td>0.122222</td>\n","      <td>0.541667</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_CB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.794643</td>\n","      <td>0.25</td>\n","      <td>0.714286</td>\n","      <td>0.333333</td>\n","      <td>0.714286</td>\n","      <td>0.333333</td>\n","      <td>0.122222</td>\n","      <td>0.541667</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_B ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.484127</td>\n","      <td>0.222222</td>\n","      <td>0.642857</td>\n","      <td>0.333333</td>\n","      <td>0.642857</td>\n","      <td>0.333333</td>\n","      <td>0.704762</td>\n","      <td>0.5</td>\n","      <td>[[5, 0, 0], [3, 0, 1], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [1, 0, 1], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OCB ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>1.0</td>\n","      <td>0.25</td>\n","      <td>1.0</td>\n","      <td>0.333333</td>\n","      <td>1.0</td>\n","      <td>0.333333</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>[[5, 0, 0], [0, 4, 0], [0, 0, 5]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 2, 0]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_CB ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.484127</td>\n","      <td>0.222222</td>\n","      <td>0.642857</td>\n","      <td>0.333333</td>\n","      <td>0.642857</td>\n","      <td>0.333333</td>\n","      <td>0.704762</td>\n","      <td>0.5</td>\n","      <td>[[5, 0, 0], [3, 0, 1], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [1, 0, 1], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_C ['Cambio_lluvias']</th>\n","      <td>0.408163</td>\n","      <td>0.25</td>\n","      <td>0.571429</td>\n","      <td>0.333333</td>\n","      <td>0.571429</td>\n","      <td>0.333333</td>\n","      <td>0.281349</td>\n","      <td>0.458333</td>\n","      <td>[[4, 0, 1], [2, 0, 2], [1, 0, 4]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_C ['Cambio_lluvias']</th>\n","      <td>0.229167</td>\n","      <td>0.222222</td>\n","      <td>0.357143</td>\n","      <td>0.333333</td>\n","      <td>0.357143</td>\n","      <td>0.333333</td>\n","      <td>0.609524</td>\n","      <td>0.395833</td>\n","      <td>[[3, 2, 0], [2, 2, 0], [3, 2, 0]]</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [1, 1, 0]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_C ['Temperatura_promedio', 'Cambio_lluvias']</th>\n","      <td>0.866071</td>\n","      <td>0.25</td>\n","      <td>0.785714</td>\n","      <td>0.333333</td>\n","      <td>0.785714</td>\n","      <td>0.333333</td>\n","      <td>0.137302</td>\n","      <td>0.375</td>\n","      <td>[[4, 0, 1], [0, 2, 2], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [1, 0, 1]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_C ['Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.484127</td>\n","      <td>0.466667</td>\n","      <td>0.642857</td>\n","      <td>0.5</td>\n","      <td>0.642857</td>\n","      <td>0.5</td>\n","      <td>0.211905</td>\n","      <td>0.375</td>\n","      <td>[[4, 0, 1], [1, 0, 3], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_C ['Temperatura_promedio']</th>\n","      <td>0.702381</td>\n","      <td>0.466667</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.571429</td>\n","      <td>0.5</td>\n","      <td>0.579365</td>\n","      <td>0.333333</td>\n","      <td>[[2, 0, 3], [1, 1, 2], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_B ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.838435</td>\n","      <td>0.466667</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.073016</td>\n","      <td>0.291667</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_CB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.838435</td>\n","      <td>0.466667</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.785714</td>\n","      <td>0.5</td>\n","      <td>0.073016</td>\n","      <td>0.291667</td>\n","      <td>[[5, 0, 0], [2, 1, 1], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_C ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']</th>\n","      <td>0.897959</td>\n","      <td>0.466667</td>\n","      <td>0.857143</td>\n","      <td>0.5</td>\n","      <td>0.857143</td>\n","      <td>0.5</td>\n","      <td>0.059524</td>\n","      <td>0.166667</td>\n","      <td>[[5, 0, 0], [0, 2, 2], [0, 0, 5]]</td>\n","      <td>[[1, 0, 1], [0, 0, 2], [0, 0, 2]]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c0b0f41-d60a-4a90-a50c-bf917d1486f8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9c0b0f41-d60a-4a90-a50c-bf917d1486f8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9c0b0f41-d60a-4a90-a50c-bf917d1486f8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-59c58a54-63e0-405f-accc-b65ef04c048b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-59c58a54-63e0-405f-accc-b65ef04c048b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-59c58a54-63e0-405f-accc-b65ef04c048b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 111,\n  \"fields\": [\n    {\n      \"column\": \"precision_train\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.12755102040816327,\n        \"max\": 1.0,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          0.5277777777777778,\n          0.2777777777777778,\n          0.3698412698412698\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"precision_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.1111111111111111,\n        \"max\": 0.8888888888888888,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          0.611111111111111,\n          0.6666666666666666,\n          0.8888888888888888\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_train\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.35714285714285715,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.35714285714285715,\n          0.7142857142857143,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.3333333333333333,\n        \"max\": 0.8333333333333334,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.6666666666666666,\n          0.5,\n          0.8333333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_train\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.35714285714285715,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.35714285714285715,\n          0.7142857142857143,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.3333333333333333,\n        \"max\": 0.8333333333333334,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.6666666666666666,\n          0.5,\n          0.8333333333333334\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_train\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.059523809523809534,\n        \"max\": 1.0,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          0.7666666666666667,\n          0.723015873015873,\n          0.7388888888888889\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.16666666666666666,\n        \"max\": 0.9375,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          0.75,\n          0.5416666666666666,\n          0.9375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confusion_train\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confusion_test\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":82}]},{"cell_type":"markdown","source":["**Análisis:**\n","\n","Primero que todo, comentar que  el test set no es representativo dado su tamaño tan pequeño (6 puntos), por lo que los resultados que acá se obtengan no son concluyentes respecto de la evaluación de las métricas.\n","\n","- Decision Tree: observando los valores de accuracies y de roc-auc's, el mejor modelo se tiene para (acc_train / acc_test = 0.785714 / 0.833333) y (roc-auc_train / roc_auc_test = 0.948016 / 0.9375). La única variable involucrada es \"Cambio_lluvias\".\n","    - La matriz de confusión para el test set es [[2, 0, 0], [1, 1, 0], [0, 0, 2]], falló en predecir una instancia de impacto medio.\n","    - los valores de recall son idénticos a los de accuracy, para ambos sets.\n","- K-Nearest Neighbors: observando los valores de accuracies y de roc-auc's, el mejor modelo se tiene para (acc_train / acc_test = 0.714286 / 0.833333) y (roc-auc_train / roc_auc_test = 0.859524 / 0.833333). Esos valores se obtienen para dos combinaciones de atributos:\n","    -  Cambio_lluvias, Frecuencia_sequías y Cambio_lluvias * Frecuencia_sequías, 0\n","    -  Cambio_lluvias, Frecuencia_sequías, Cambio_lluvias^2, Frecuencia_sequías^2 y Cambio_lluvias * Frecuencia_sequías, 0\n","    - La matriz de confusión para el test set es [[2, 0, 0], [1, 1, 0], [0, 0, 2]], falló en predecir una instancia de impacto medio.\n","    - los valores de recall son idénticos a los de accuracy, para ambos sets.\n","- Support Vector Machine:  observando los valores de accuracies y de roc-auc's, el mejor modelo se tiene para (acc_train / acc_test = 0.714286 / 0.833333) y (roc-auc_train / roc_auc_test = 0.859127 / 0.916667). La única variable involucrada es \"Cambio_lluvias\".\n","    - La matriz de confusión para el test set es [[2, 0, 0], [1, 1, 0], [0, 0, 2]], falló en predecir una instancia de impacto medio.\n","    - los valores de recall son idénticos a los de accuracy, para ambos sets.\n","\n","Concluyendo, en esta oportunidad los tres modelos obtienen el mismo resultado en la predidicción para el test set, pero Decision Tree predice mejor en el train set (está un poco menos subajustado comparado con los otros dos métodos)."],"metadata":{"id":"ungpspgPinqS"}},{"cell_type":"markdown","source":["##**4. Optimización de modelos (2 puntos)**\n","* Ajusta hiperparámetros utilizando validación cruzada y búsqueda en grilla.\n","- Aplica técnicas de regularización y analiza su impacto en los modelos."],"metadata":{"id":"o7C91t8zHpyS"}},{"cell_type":"markdown","source":["Como ya se dijo, los resultados obtenidos en la parte anterior son engañosos para el test set debido a su pequeño tamaño, por lo que para obtener una evaluación más realista y elegir el mejor modelo de regresión o clasificación, vamos al siguiente paso que es usar validación cruzada.\n","\n","La optimización de los modelos considera como métrica de evaluación a:\n","- r2 para regresión, y\n","- roc_auc_ovr_weighted para clasificación."],"metadata":{"id":"vedpfdDIules"}},{"cell_type":"markdown","source":["###**Función auxiliar comunes a Regresión y Clasificación**"],"metadata":{"id":"tWPymj7JY3HH"}},{"cell_type":"code","source":["def compara_modelos_con_cv(df, tipo_modelo, modelo, param_grid, num_folds):\n","    '''\n","    Compara modelos de regresión o clasificación con validación cruzada.\n","    Params:\n","    - df: DataFrame con los datos\n","    - tipo_modelo: 'regresion' o 'clasificacion'\n","    - modelo: modelo de regresión o clasificación a usar\n","    - param_grid: diccionario con los parámetros a ajustar\n","    - num_folds: número de folds para la validación cruzada\n","\n","    Retorna un DataFrame con los resultados de cada modelo.\n","    '''\n","\n","    print(f'Comparación de modelos de {tipo_modelo}: \"{modelo.__class__.__name__}\" con validación cruzada ({num_folds} folds)', end=' ... ')\n","\n","    if tipo_modelo not in ['regresion', 'clasificacion']:\n","        raise ValueError('tipo_modelo debe ser \"regresion\" o \"clasificacion\"')\n","\n","    opciones = ['orig', 'cuad', 'comb'] if modelo == 'regresion' else ['orig', 'comb']\n","    combinaciones = []\n","    for combo in itertools.combinations(opciones, 1):\n","        combinaciones.append(list(combo))\n","    for combo in itertools.combinations(opciones, 2):\n","        combinaciones.append(list(combo))\n","    if modelo == 'regresion':\n","        for combo in itertools.combinations(opciones, 3):\n","            combinaciones.append(list(combo))\n","\n","    opciones = ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']\n","    combinaciones_var = []\n","    for combo in itertools.combinations(opciones, 1):\n","        combinaciones_var.append(list(combo))\n","    for combo in itertools.combinations(opciones, 2):\n","        combinaciones_var.append(list(combo))\n","    for combo in itertools.combinations(opciones, 3):\n","        combinaciones_var.append(list(combo))\n","\n","    resultados = dict()\n","    for combinacion_var in combinaciones_var:\n","        for combinacion in combinaciones:\n","            orig = True if 'orig' in combinacion else False\n","            cuad = True if 'cuad' in combinacion else False\n","            comb = True if ('comb' in combinacion and len(combinacion_var)>1) else False\n","            if orig or cuad or comb:\n","                if tipo_modelo == 'regresion':\n","                    resultado = regresion_con_cv(df, combinacion_var, modelo, orig, cuad, comb, param_grid=param_grid, num_folds=num_folds)\n","                else:\n","                    resultado = clasificacion_con_cv(df, combinacion_var, modelo, orig, cuad, comb, param_grid=param_grid, num_folds=num_folds)\n","                resultados.update(resultado)\n","\n","    print(f'{len(resultados)} modelos analizados por cada combinación de hiperparámetros\\n')\n","\n","    if tipo_modelo == 'regresion':\n","        scores = ['mse_oof', 'mse_test', 'rmse_oof', 'rmse_test', 'mae_oof', 'mae_test', 'r2_oof', 'r2_test', 'params']\n","        return pd.DataFrame(resultados, index=scores).T.sort_values(['r2_test', 'r2_oof'], ascending=False)\n","\n","    scores = ['precision_oof', 'precision_test', 'recall_oof', 'recall_test', 'accuracy_oof', 'accuracy_test', 'roc_auc_oof', 'roc_auc_test', 'confusion_test', 'params']\n","    return pd.DataFrame(resultados, index=scores).T.sort_values(['accuracy_test', 'accuracy_oof'], ascending=False)"],"metadata":{"id":"9iW3aVczYtxK","executionInfo":{"status":"ok","timestamp":1757365100809,"user_tz":180,"elapsed":2,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":83,"outputs":[]},{"cell_type":"markdown","source":["###**Ajuste Hiperparámetros Regresión**"],"metadata":{"id":"2b8-hxR9NEMq"}},{"cell_type":"code","source":["def regresion_con_cv(df, vars, modelo, orig, cuad, comb, param_grid, num_folds):\n","    '''\n","    Efectúa la regresión con validación cruzada.\n","    Params:\n","    - df: DataFrame con los datos\n","    - vars: lista de variables a usar\n","    - modelo: modelo de regresión a usar\n","    - orig: booleano que indica si se usan las variables originales\n","    - cuad: booleano que indica si se usan las variables cuadráticas\n","    - comb: booleano que indica si se usan las variables combinadas\n","\n","    Retorna un diccionario con las métricas del modelo.\n","    '''\n","\n","    if num_folds < 2:\n","        print('num_folds debe ser mayor o igual a 2')\n","        return\n","\n","    nombre_modelo = modelo.__class__.__name__  + '_'\n","    if orig: nombre_modelo = nombre_modelo + 'O'\n","    if cuad: nombre_modelo = nombre_modelo + 'C'\n","    if comb: nombre_modelo = nombre_modelo + 'B'\n","    nombre_modelo = nombre_modelo + ' ' + str(vars) + '_cv_' + str(num_folds)\n","\n","    vars_std = [var for var in vars if var in var_cont]\n","    vars_mms = [var for var in vars if var in var_disc]\n","\n","    X_train, X_test, y_train, y_test = train_test_split(df[vars], df[target], test_size=0.3, random_state=42)\n","\n","    if 'Linear' in nombre_modelo or 'Ridge' in nombre_modelo or 'Lasso' in nombre_modelo:\n","\n","        preprocessor_sc = ColumnTransformer(\n","            transformers=[\n","                ('num_std', StandardScaler(), vars_std),\n","                ('num_mms', MinMaxScaler(), vars_mms)\n","            ],\n","            verbose_feature_names_out=False\n","        ).set_output(transform='pandas')\n","\n","        pipe_reg = Pipeline(steps=[\n","            ('preprocessor_sc', preprocessor_sc),\n","            ('poli', PolynomialFeatures(degree=2, include_bias=False, interaction_only=False)),\n","            ('selector', SeleccionarAtributos(vars, orig, cuad, comb)),\n","            ('modelo', TransformedTargetRegressor(regressor=modelo, func=lambda x:x/10E6, inverse_func=lambda x:x*10E6)), # tuve que escalarlo para evitar un convergence warning en los modelos lineales\n","        ]).set_output(transform=\"pandas\")\n","\n","    else:\n","        pipe_reg = Pipeline(steps=[\n","            ('poli', PolynomialFeatures(degree=2, include_bias=False, interaction_only=False)),\n","            ('selector', SeleccionarAtributos(vars, orig, cuad, comb)),\n","            ('modelo', modelo)\n","        ]).set_output(transform=\"pandas\")\n","\n","    kf = KFold(n_splits=num_folds, shuffle=True, random_state=42)\n","    scoring = {\n","        'mse': 'neg_mean_squared_error',\n","        'rmse': 'neg_root_mean_squared_error',\n","        'mae': 'neg_mean_absolute_error',\n","        'r2': 'r2'\n","    }\n","    refit = 'r2'\n","\n","    gs_reg = GridSearchCV(pipe_reg, param_grid=param_grid, cv=kf, scoring=scoring, n_jobs=-1, refit=refit)\n","    gs_reg.fit(X_train, y_train)\n","\n","    # obtener mejores parámetros\n","    best_params = gs_reg.best_params_\n","    results = gs_reg.cv_results_\n","    best_index = gs_reg.best_index_\n","\n","    # obtener las métricas oof\n","\n","    r2_oof = np.round(gs_reg.best_score_*100, 2) #gs_reg.cv_results_['mean_test_r2'][0]\n","    #r2_std_oof = np.round(results['std_test_r2'][best_index] * 100, 2)\n","\n","    mse_oof = -np.round(results['mean_test_mse'][best_index], 2)\n","    #mse_std_oof = np.round(results['std_test_mse'][best_index], 2)\n","\n","    rmse_oof = -np.round(results['mean_test_rmse'][best_index], 2)\n","    #rmse_std_oof = np.round(results['std_test_rmse'][best_index], 2)\n","\n","    mae_oof = -np.round(results['mean_test_mae'][best_index], 2)\n","    #mae_std_oof = np.round(results['std_test_mae'][best_index], 2)\n","\n","    # calcular las métricas para la predicción del test set\n","    y_pred_test = gs_reg.predict(X_test)\n","\n","    r2_test   = np.round(r2_score(y_test, y_pred_test)*100, 2)\n","    mse_test = np.round(mean_squared_error(y_test, y_pred_test), 3)\n","    rmse_test = np.round(root_mean_squared_error(y_test, y_pred_test), 3)\n","    mae_test  = np.round(mean_absolute_error(y_test, y_pred_test), 3)\n","\n","    if 'LinearRegression' in nombre_modelo:\n","        best_params = {}\n","\n","    #print('Mejores parámetros:\\n', best_params)\n","    #print(f'MSE oof: {mse_oof} ± {mse_std_oof} - test: {mse_test}')\n","    #print(f'RMSE oof: {rmse_oof} ± {rmse_std_oof} - test: {rmse_test}')\n","    #print(f'MAE oof: {mae_oof} ± {mae_std_oof}- test:{mae_test}')\n","    #print(f'R2 oof (%): {r2_oof} ± {r2_std_oof} - test: {r2_test}')\n","\n","    if False:\n","        sns.scatterplot(x=y_pred_test, y=y_test)\n","        plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], linestyle='--', color='red')\n","        plt.xlabel('y_pred_test')\n","        plt.ylabel('y_test')\n","        plt.title('y_test vs y_pred_test')\n","        plt.show()\n","\n","    scores = [mse_oof, mse_test, rmse_oof, rmse_test, mae_oof, mae_test, r2_oof, r2_test, best_params]\n","\n","    return {nombre_modelo: scores}"],"metadata":{"id":"e5QLm_QJ5HYH","executionInfo":{"status":"ok","timestamp":1757365100822,"user_tz":180,"elapsed":9,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":84,"outputs":[]},{"cell_type":"code","source":["# inicializar dataframe con los resultados de la regresión\n","# lo hago diferente a como lo hice en el punto anterior porque voy a ajustar hiperparámetros por modelo\n","# y quiero ir viendo los resultados\n","\n","resultados_regresion_cv = pd.DataFrame(data=None)\n","\n","def actualizar_resultados_regresion_cv(df1, df2):\n","    '''\n","    Actualiza el dataframe con los resultados de la regresión.\n","    Params:\n","    - df1: DataFrame con los resultados históricos de la regresión\n","    - df2: DataFrame con los resultados de la nueva regresión\n","\n","    Retorna el dataframe actualizado, que cumple con los siguientes requerimientos:\n","    - r2_test >= 60\n","    - r2_oof >= 60\n","    - delta_r2 <= 60\n","    '''\n","    k = 50\n","    d = 10\n","    df2_ = df2.copy()\n","    df2_['delta_r2'] = np.abs(df2_['r2_test'] - df2_['r2_oof'])\n","    df2_ = df2_[(df2_.r2_test>=k) & (df2_.r2_oof>=k) & (df2_.delta_r2<=d)]\n","    print('Mostrando los mejores resultados:')\n","    display(df2_)\n","\n","    df = pd.concat([df1, df2]).sort_values(['r2_test', 'r2_oof'], ascending=False)\n","    df['delta_r2'] = np.abs(df['r2_test'] - df['r2_oof'])\n","    df = df[(df.r2_test>=k) & (df.r2_oof>=k) & (df.delta_r2<=d)]\n","\n","    return df"],"metadata":{"id":"kH-Sxj4MdjYV","executionInfo":{"status":"ok","timestamp":1757365100824,"user_tz":180,"elapsed":4,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":85,"outputs":[]},{"cell_type":"markdown","source":["####**Regresión Lineal**"],"metadata":{"id":"DF8p8N4HjX2U"}},{"cell_type":"code","source":["%%time\n","\n","modelo = LinearRegression()\n","params = {}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='regresion', modelo=modelo, param_grid=params, num_folds=2)\n","resultados_regresion_cv = actualizar_resultados_regresion_cv(resultados_regresion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":168},"id":"adUN-1BbZFT9","executionInfo":{"status":"ok","timestamp":1757365104708,"user_tz":180,"elapsed":3882,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"b0d0a65b-257d-4b6b-b1a7-36f64e0f9f69"},"execution_count":86,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion: \"LinearRegression\" con validación cruzada (2 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                               mse_oof  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  27107845056.52   \n","\n","                                                                               mse_test  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  13872512929.382   \n","\n","                                                                         rmse_oof  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  161064.19   \n","\n","                                                                         rmse_test  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  117781.632   \n","\n","                                                                          mae_oof  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  139695.13   \n","\n","                                                                         mae_test  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  99450.967   \n","\n","                                                                       r2_oof  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  58.86   \n","\n","                                                                       r2_test  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2    64.0   \n","\n","                                                                       params  \\\n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2     {}   \n","\n","                                                                       delta_r2  \n","LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2     5.14  "],"text/html":["\n","  <div id=\"df-8e871032-e435-46a2-8846-34d7714c9cc3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>LinearRegression_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2</th>\n","      <td>27107845056.52</td>\n","      <td>13872512929.382</td>\n","      <td>161064.19</td>\n","      <td>117781.632</td>\n","      <td>139695.13</td>\n","      <td>99450.967</td>\n","      <td>58.86</td>\n","      <td>64.0</td>\n","      <td>{}</td>\n","      <td>5.14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e871032-e435-46a2-8846-34d7714c9cc3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8e871032-e435-46a2-8846-34d7714c9cc3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8e871032-e435-46a2-8846-34d7714c9cc3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"mse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 27107845056.52,\n        \"max\": 27107845056.52,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          27107845056.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 13872512929.382,\n        \"max\": 13872512929.382,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          13872512929.382\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 161064.19,\n        \"max\": 161064.19,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          161064.19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 117781.632,\n        \"max\": 117781.632,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          117781.632\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 139695.13,\n        \"max\": 139695.13,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          139695.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 99450.967,\n        \"max\": 99450.967,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          99450.967\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 58.86,\n        \"max\": 58.86,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          58.86\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 64.0,\n        \"max\": 64.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          64.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"delta_r2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 5.140000000000001,\n        \"max\": 5.140000000000001,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          5.140000000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 693 ms, sys: 12.1 ms, total: 705 ms\n","Wall time: 3.9 s\n"]}]},{"cell_type":"code","source":["%%time\n","\n","modelo = LinearRegression()\n","params = {}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='regresion', modelo=modelo, param_grid=params, num_folds=3)\n","resultados_regresion_cv = actualizar_resultados_regresion_cv(resultados_regresion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":199},"id":"P82DQsb2fNiD","executionInfo":{"status":"ok","timestamp":1757365107290,"user_tz":180,"elapsed":2549,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"79bfa588-89a4-4379-ef6a-886601b5ccc5"},"execution_count":87,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion: \"LinearRegression\" con validación cruzada (3 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                                                     mse_oof  \\\n","LinearRegression_O ['Cambio_lluvias']_cv_3                                                26837409471.470001   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  27196461496.619999   \n","\n","                                                                                                    mse_test  \\\n","LinearRegression_O ['Cambio_lluvias']_cv_3                                                14076448351.408001   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  16309354067.351999   \n","\n","                                                                                           rmse_oof  \\\n","LinearRegression_O ['Cambio_lluvias']_cv_3                                                162806.11   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  159631.32   \n","\n","                                                                                           rmse_test  \\\n","LinearRegression_O ['Cambio_lluvias']_cv_3                                                118644.209   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  127708.081   \n","\n","                                                                                            mae_oof  \\\n","LinearRegression_O ['Cambio_lluvias']_cv_3                                                 130852.4   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  140205.87   \n","\n","                                                                                            mae_test  \\\n","LinearRegression_O ['Cambio_lluvias']_cv_3                                                 97271.863   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  111933.386   \n","\n","                                                                                         r2_oof  \\\n","LinearRegression_O ['Cambio_lluvias']_cv_3                                                59.36   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  60.04   \n","\n","                                                                                         r2_test  \\\n","LinearRegression_O ['Cambio_lluvias']_cv_3                                                 63.47   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3   57.67   \n","\n","                                                                                         params  \\\n","LinearRegression_O ['Cambio_lluvias']_cv_3                                                   {}   \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3     {}   \n","\n","                                                                                         delta_r2  \n","LinearRegression_O ['Cambio_lluvias']_cv_3                                                   4.11  \n","LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3     2.37  "],"text/html":["\n","  <div id=\"df-e15e016f-3c9e-4716-892d-96d00eb84f84\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>LinearRegression_O ['Cambio_lluvias']_cv_3</th>\n","      <td>26837409471.470001</td>\n","      <td>14076448351.408001</td>\n","      <td>162806.11</td>\n","      <td>118644.209</td>\n","      <td>130852.4</td>\n","      <td>97271.863</td>\n","      <td>59.36</td>\n","      <td>63.47</td>\n","      <td>{}</td>\n","      <td>4.11</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>27196461496.619999</td>\n","      <td>16309354067.351999</td>\n","      <td>159631.32</td>\n","      <td>127708.081</td>\n","      <td>140205.87</td>\n","      <td>111933.386</td>\n","      <td>60.04</td>\n","      <td>57.67</td>\n","      <td>{}</td>\n","      <td>2.37</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e15e016f-3c9e-4716-892d-96d00eb84f84')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e15e016f-3c9e-4716-892d-96d00eb84f84 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e15e016f-3c9e-4716-892d-96d00eb84f84');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-71f56323-79df-424c-98dc-a6d42b8a5a1a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71f56323-79df-424c-98dc-a6d42b8a5a1a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-71f56323-79df-424c-98dc-a6d42b8a5a1a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"mse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 26837409471.47,\n        \"max\": 27196461496.62,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          27196461496.62,\n          26837409471.47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 14076448351.408,\n        \"max\": 16309354067.352,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          16309354067.352,\n          14076448351.408\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 159631.32,\n        \"max\": 162806.11,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          159631.32,\n          162806.11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 118644.209,\n        \"max\": 127708.081,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          127708.081,\n          118644.209\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 130852.4,\n        \"max\": 140205.87,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          140205.87,\n          130852.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 97271.863,\n        \"max\": 111933.386,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          111933.386,\n          97271.863\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 59.36,\n        \"max\": 60.04,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          60.04,\n          59.36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 57.67,\n        \"max\": 63.47,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          57.67,\n          63.47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"delta_r2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 2.3699999999999974,\n        \"max\": 4.109999999999999,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2.3699999999999974,\n          4.109999999999999\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 845 ms, sys: 13.1 ms, total: 858 ms\n","Wall time: 2.56 s\n"]}]},{"cell_type":"markdown","source":["**Análisis Regresión Lineal Simple**\n","___\n","\n","Considerando:\n","1. que delta_r2 igual al valor absoluto de la diferencia entre los r2 scores del oof y test sets,\n","2. que los resultados mostrados solo son aquellos para los cuales los r2 scores (oof y test) son mayores a 55% y delta_r2 es menor o igual a 10%,  y\n","3. que la idea en esta parte de regresión (para todos los modelos, no solo el lineal), será encontrar el modelo que tenga sobre 60% para los r2 de oof y test sets y el menor delta_r2 posible.\n","\n","Tenemos que:\n","- Para 2 folds: no hay resultados aceptables.\n","- Para 3 folds: no hay resultados aceptables.\n","\n","Concluimos que la regresión lineal simple no logra capturar bien el patrón de los datos en validación cruzada."],"metadata":{"id":"R51I0XwvlmP5"}},{"cell_type":"markdown","source":["####**Ridge**"],"metadata":{"id":"3BNneSzDjgxM"}},{"cell_type":"code","source":["%%time\n","\n","modelo = Ridge(random_state=42)\n","param_grid = {\n","    'modelo__regressor__alpha': [0.001, 0.01, 0.1, 0.15, 2, 5, 10, 50]\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='regresion', modelo=modelo, param_grid=param_grid, num_folds=2)\n","resultados_regresion_cv = actualizar_resultados_regresion_cv(resultados_regresion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":168},"id":"xqYXoLlhiecp","executionInfo":{"status":"ok","timestamp":1757365114043,"user_tz":180,"elapsed":6711,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"81003d05-84e0-4b88-b2c9-56c58918886a"},"execution_count":88,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion: \"Ridge\" con validación cruzada (2 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                    mse_oof  \\\n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  26485011514.32   \n","\n","                                                                    mse_test  \\\n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  12416472212.163   \n","\n","                                                              rmse_oof  \\\n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  159305.21   \n","\n","                                                              rmse_test  \\\n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  111429.225   \n","\n","                                                              mae_oof  \\\n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  136164.3   \n","\n","                                                              mae_test r2_oof  \\\n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  94758.766  59.77   \n","\n","                                                            r2_test  \\\n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2   67.78   \n","\n","                                                                                         params  \\\n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2  {'modelo__regressor__alpha': 0.01}   \n","\n","                                                            delta_r2  \n","Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2     8.01  "],"text/html":["\n","  <div id=\"df-a8b681d6-4826-4b39-891b-0b5b5fe6079d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Ridge_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2</th>\n","      <td>26485011514.32</td>\n","      <td>12416472212.163</td>\n","      <td>159305.21</td>\n","      <td>111429.225</td>\n","      <td>136164.3</td>\n","      <td>94758.766</td>\n","      <td>59.77</td>\n","      <td>67.78</td>\n","      <td>{'modelo__regressor__alpha': 0.01}</td>\n","      <td>8.01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8b681d6-4826-4b39-891b-0b5b5fe6079d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8b681d6-4826-4b39-891b-0b5b5fe6079d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8b681d6-4826-4b39-891b-0b5b5fe6079d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"mse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 26485011514.32,\n        \"max\": 26485011514.32,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          26485011514.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 12416472212.163,\n        \"max\": 12416472212.163,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          12416472212.163\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 159305.21,\n        \"max\": 159305.21,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          159305.21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 111429.225,\n        \"max\": 111429.225,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          111429.225\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 136164.3,\n        \"max\": 136164.3,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          136164.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 94758.766,\n        \"max\": 94758.766,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          94758.766\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 59.77,\n        \"max\": 59.77,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          59.77\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 67.78,\n        \"max\": 67.78,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          67.78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"delta_r2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 8.009999999999998,\n        \"max\": 8.009999999999998,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          8.009999999999998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 1.29 s, sys: 25.1 ms, total: 1.32 s\n","Wall time: 6.72 s\n"]}]},{"cell_type":"code","source":["%%time\n","\n","modelo = Ridge(random_state=42)\n","param_grid = {\n","    'modelo__regressor__alpha': [0.001, 0.01, 0.1, 0.15, 2, 5, 10, 50]\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='regresion', modelo=modelo, param_grid=param_grid, num_folds=3)\n","resultados_regresion_cv = actualizar_resultados_regresion_cv(resultados_regresion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":199},"id":"VEvWW9YSlSW_","executionInfo":{"status":"ok","timestamp":1757365130324,"user_tz":180,"elapsed":16283,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"9b314e98-f2ca-498b-e481-6a3dc2f582ec"},"execution_count":89,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion: \"Ridge\" con validación cruzada (3 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                                          mse_oof  \\\n","Ridge_O ['Cambio_lluvias']_cv_3                                                26291571203.029999   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  20836036976.139999   \n","\n","                                                                                      mse_test  \\\n","Ridge_O ['Cambio_lluvias']_cv_3                                                12532591420.715   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  14099871274.198   \n","\n","                                                                                rmse_oof  \\\n","Ridge_O ['Cambio_lluvias']_cv_3                                                161491.53   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  139530.35   \n","\n","                                                                                rmse_test  \\\n","Ridge_O ['Cambio_lluvias']_cv_3                                                111949.057   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  118742.879   \n","\n","                                                                                 mae_oof  \\\n","Ridge_O ['Cambio_lluvias']_cv_3                                                 129312.7   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  114290.44   \n","\n","                                                                                 mae_test  \\\n","Ridge_O ['Cambio_lluvias']_cv_3                                                 92196.214   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  101094.616   \n","\n","                                                                              r2_oof  \\\n","Ridge_O ['Cambio_lluvias']_cv_3                                                59.93   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  69.59   \n","\n","                                                                              r2_test  \\\n","Ridge_O ['Cambio_lluvias']_cv_3                                                 67.48   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3   63.41   \n","\n","                                                                                                           params  \\\n","Ridge_O ['Cambio_lluvias']_cv_3                                                   {'modelo__regressor__alpha': 2}   \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  {'modelo__regressor__alpha': 0.15}   \n","\n","                                                                              delta_r2  \n","Ridge_O ['Cambio_lluvias']_cv_3                                                   7.55  \n","Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3     6.18  "],"text/html":["\n","  <div id=\"df-67fbcfe3-b2a4-4578-998d-fe91b8aa9bd6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Ridge_O ['Cambio_lluvias']_cv_3</th>\n","      <td>26291571203.029999</td>\n","      <td>12532591420.715</td>\n","      <td>161491.53</td>\n","      <td>111949.057</td>\n","      <td>129312.7</td>\n","      <td>92196.214</td>\n","      <td>59.93</td>\n","      <td>67.48</td>\n","      <td>{'modelo__regressor__alpha': 2}</td>\n","      <td>7.55</td>\n","    </tr>\n","    <tr>\n","      <th>Ridge_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>20836036976.139999</td>\n","      <td>14099871274.198</td>\n","      <td>139530.35</td>\n","      <td>118742.879</td>\n","      <td>114290.44</td>\n","      <td>101094.616</td>\n","      <td>69.59</td>\n","      <td>63.41</td>\n","      <td>{'modelo__regressor__alpha': 0.15}</td>\n","      <td>6.18</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-67fbcfe3-b2a4-4578-998d-fe91b8aa9bd6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-67fbcfe3-b2a4-4578-998d-fe91b8aa9bd6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-67fbcfe3-b2a4-4578-998d-fe91b8aa9bd6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-f549374a-22fd-4a06-a15d-9b4de590c1db\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f549374a-22fd-4a06-a15d-9b4de590c1db')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-f549374a-22fd-4a06-a15d-9b4de590c1db button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"mse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 20836036976.14,\n        \"max\": 26291571203.03,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          20836036976.14,\n          26291571203.03\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 12532591420.715,\n        \"max\": 14099871274.198,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          14099871274.198,\n          12532591420.715\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 139530.35,\n        \"max\": 161491.53,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          139530.35,\n          161491.53\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 111949.057,\n        \"max\": 118742.879,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          118742.879,\n          111949.057\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 114290.44,\n        \"max\": 129312.7,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          114290.44,\n          129312.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 92196.214,\n        \"max\": 101094.616,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          101094.616,\n          92196.214\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 59.93,\n        \"max\": 69.59,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          69.59,\n          59.93\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 63.41,\n        \"max\": 67.48,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          63.41,\n          67.48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"delta_r2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 6.180000000000007,\n        \"max\": 7.550000000000004,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          6.180000000000007,\n          7.550000000000004\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 1.72 s, sys: 31.9 ms, total: 1.75 s\n","Wall time: 16.3 s\n"]}]},{"cell_type":"markdown","source":["**Análisis Regresión Ridge**\n","___\n","Tenemos que:\n","- Para 2 folds: no hay resultados aceptables.\n","- Para 3 folds: hay un resultado aceptable, con un delta_r2 moderado:\n","    - r2_oof / r2_test = 69.59 / 63.41, con el coeficiente alfa = 0.15 y los regresores \"Temperatura_promedio\", \"Cambio_lluvias\" y \"Frecuencia_sequías\".\n","    - hay un leve sobreajuste.\n","\n","Concluimos que la regresión ridge con validación cruzada para 3 folds entrega un modelo aceptable."],"metadata":{"id":"bwe5FngbWhl2"}},{"cell_type":"markdown","source":["####**Lasso**"],"metadata":{"id":"tDutDAkjnPcv"}},{"cell_type":"code","source":["%%time\n","\n","modelo = Lasso(random_state=42)\n","param_grid = {\n","    'modelo__regressor__alpha': [0.001, 0.01, 0.1, 0.15, 2, 5, 10, 50]\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='regresion', modelo=modelo, param_grid=param_grid, num_folds=2)\n","resultados_regresion_cv = actualizar_resultados_regresion_cv(resultados_regresion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":140},"id":"FeW5vUqXnRTD","executionInfo":{"status":"ok","timestamp":1757365142024,"user_tz":180,"elapsed":11696,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"bb990cfb-eef7-4965-b117-bc6fe4c311e8"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion: \"Lasso\" con validación cruzada (2 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["Empty DataFrame\n","Columns: [mse_oof, mse_test, rmse_oof, rmse_test, mae_oof, mae_test, r2_oof, r2_test, params, delta_r2]\n","Index: []"],"text/html":["\n","  <div id=\"df-3dadce8d-e209-493e-bc84-e8944c9b7e4a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3dadce8d-e209-493e-bc84-e8944c9b7e4a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3dadce8d-e209-493e-bc84-e8944c9b7e4a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3dadce8d-e209-493e-bc84-e8944c9b7e4a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 1.44 s, sys: 30.4 ms, total: 1.47 s\n","Wall time: 11.6 s\n"]}]},{"cell_type":"code","source":["%%time\n","\n","modelo = Lasso(random_state=42)\n","param_grid = {\n","    'modelo__regressor__alpha': [0.001, 0.01, 0.1, 0.15, 2, 5, 10, 50]\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='regresion', modelo=modelo, param_grid=param_grid, num_folds=3)\n","resultados_regresion_cv = actualizar_resultados_regresion_cv(resultados_regresion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":262},"id":"pFB-2HFjnrSR","executionInfo":{"status":"ok","timestamp":1757365152841,"user_tz":180,"elapsed":10821,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"68879aa8-4b8d-4ca8-aa83-2c3ee82c93dc"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion: \"Lasso\" con validación cruzada (3 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                                          mse_oof  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        23108488333.540001   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  23108488333.540001   \n","Lasso_O ['Cambio_lluvias']_cv_3                                                26419742552.740002   \n","Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          26419742552.740002   \n","\n","                                                                                      mse_test  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                         12858287303.84   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3   12858287303.84   \n","Lasso_O ['Cambio_lluvias']_cv_3                                                13323432222.968   \n","Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          13323432222.968   \n","\n","                                                                                rmse_oof  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        150900.95   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  150900.95   \n","Lasso_O ['Cambio_lluvias']_cv_3                                                 161762.8   \n","Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                           161762.8   \n","\n","                                                                                rmse_test  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        113394.388   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  113394.388   \n","Lasso_O ['Cambio_lluvias']_cv_3                                                115427.173   \n","Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          115427.173   \n","\n","                                                                                 mae_oof  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        118241.65   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  118241.65   \n","Lasso_O ['Cambio_lluvias']_cv_3                                                130591.66   \n","Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          130591.66   \n","\n","                                                                                mae_test  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        94462.611   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  94462.611   \n","Lasso_O ['Cambio_lluvias']_cv_3                                                95313.811   \n","Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          95313.811   \n","\n","                                                                              r2_oof  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        65.14   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  65.14   \n","Lasso_O ['Cambio_lluvias']_cv_3                                                59.93   \n","Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          59.93   \n","\n","                                                                              r2_test  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                         66.63   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3   66.63   \n","Lasso_O ['Cambio_lluvias']_cv_3                                                 65.42   \n","Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                           65.42   \n","\n","                                                                                                            params  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        {'modelo__regressor__alpha': 0.001}   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  {'modelo__regressor__alpha': 0.001}   \n","Lasso_O ['Cambio_lluvias']_cv_3                                                {'modelo__regressor__alpha': 0.001}   \n","Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          {'modelo__regressor__alpha': 0.001}   \n","\n","                                                                              delta_r2  \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                           1.49  \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3     1.49  \n","Lasso_O ['Cambio_lluvias']_cv_3                                                   5.49  \n","Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                             5.49  "],"text/html":["\n","  <div id=\"df-dd450d5d-00b4-4c75-b40d-4e7e0f807fdf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3</th>\n","      <td>23108488333.540001</td>\n","      <td>12858287303.84</td>\n","      <td>150900.95</td>\n","      <td>113394.388</td>\n","      <td>118241.65</td>\n","      <td>94462.611</td>\n","      <td>65.14</td>\n","      <td>66.63</td>\n","      <td>{'modelo__regressor__alpha': 0.001}</td>\n","      <td>1.49</td>\n","    </tr>\n","    <tr>\n","      <th>Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>23108488333.540001</td>\n","      <td>12858287303.84</td>\n","      <td>150900.95</td>\n","      <td>113394.388</td>\n","      <td>118241.65</td>\n","      <td>94462.611</td>\n","      <td>65.14</td>\n","      <td>66.63</td>\n","      <td>{'modelo__regressor__alpha': 0.001}</td>\n","      <td>1.49</td>\n","    </tr>\n","    <tr>\n","      <th>Lasso_O ['Cambio_lluvias']_cv_3</th>\n","      <td>26419742552.740002</td>\n","      <td>13323432222.968</td>\n","      <td>161762.8</td>\n","      <td>115427.173</td>\n","      <td>130591.66</td>\n","      <td>95313.811</td>\n","      <td>59.93</td>\n","      <td>65.42</td>\n","      <td>{'modelo__regressor__alpha': 0.001}</td>\n","      <td>5.49</td>\n","    </tr>\n","    <tr>\n","      <th>Lasso_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>26419742552.740002</td>\n","      <td>13323432222.968</td>\n","      <td>161762.8</td>\n","      <td>115427.173</td>\n","      <td>130591.66</td>\n","      <td>95313.811</td>\n","      <td>59.93</td>\n","      <td>65.42</td>\n","      <td>{'modelo__regressor__alpha': 0.001}</td>\n","      <td>5.49</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd450d5d-00b4-4c75-b40d-4e7e0f807fdf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dd450d5d-00b4-4c75-b40d-4e7e0f807fdf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dd450d5d-00b4-4c75-b40d-4e7e0f807fdf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-bd57feb8-78c7-4541-ae0a-62e9db2f1732\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd57feb8-78c7-4541-ae0a-62e9db2f1732')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-bd57feb8-78c7-4541-ae0a-62e9db2f1732 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"mse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 23108488333.54,\n        \"max\": 26419742552.74,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          26419742552.74,\n          23108488333.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 12858287303.84,\n        \"max\": 13323432222.968,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          13323432222.968,\n          12858287303.84\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 150900.95,\n        \"max\": 161762.8,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          161762.8,\n          150900.95\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 113394.388,\n        \"max\": 115427.173,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          115427.173,\n          113394.388\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 118241.65,\n        \"max\": 130591.66,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          130591.66,\n          118241.65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 94462.611,\n        \"max\": 95313.811,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          95313.811,\n          94462.611\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 59.93,\n        \"max\": 65.14,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          59.93,\n          65.14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 65.42,\n        \"max\": 66.63,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          65.42,\n          66.63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"delta_r2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 1.4899999999999949,\n        \"max\": 5.490000000000002,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          5.490000000000002,\n          1.4899999999999949\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 1.6 s, sys: 33.7 ms, total: 1.63 s\n","Wall time: 10.9 s\n"]}]},{"cell_type":"markdown","source":["**Análisis Regresión Lasso**\n","___\n","Tenemos que:\n","- Para 2 folds: no hay resultados aceptables.\n","- Para 3 folds: hay dos resultados aceptables, con un delta_r2 pequeño (para que no haya ni sub ni sobreajuste), que tienen los mismos valores de r2_oof / r2_test = 65.14 / 66.63, ambos con coeficiente alfa = 0.001 y con la siguiente alternativa para los regresores:\n","    - Temperatura_promedio y Cambio_lluvias.\n","    - Temperatura_promedio, Cambio_lluvias y Frecuencia_sequías'.\n","\n","Concluimos que la regresión laso con validación cruzada para 3 folds entrega un modelo aceptable, mejor que la regresión ridge porque no hay sobreajuste y el valor de r2 en el test es es superior."],"metadata":{"id":"Uzyu859wbDMX"}},{"cell_type":"markdown","source":["####**Decision Tree**"],"metadata":{"id":"iBqo84RaofvU"}},{"cell_type":"code","source":["%%time\n","\n","modelo = DecisionTreeRegressor(random_state=42)\n","param_grid = {\n","    'modelo__max_depth': [None, 1, 2, 3], # None por defecto\n","    #'modelo__min_samples_split': [2, 4, 5, 6], # 2 por defecto\n","    #'modelo__min_samples_leaf': [1, 2, 3, 4, 5], # 1 por defecto\n","    'modelo__max_features': [None, 'sqrt'] # None por defecto\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='regresion', modelo=modelo, param_grid=param_grid, num_folds=2)\n","resultados_regresion_cv = actualizar_resultados_regresion_cv(resultados_regresion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"BWrUGtIaojkX","executionInfo":{"status":"ok","timestamp":1757365156532,"user_tz":180,"elapsed":3688,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"7ab1247d-87cb-4620-b410-f36076701936"},"execution_count":92,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion: \"DecisionTreeRegressor\" con validación cruzada (2 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                                                      mse_oof  \\\n","DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2                                                19425003968.25   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          19425003968.25   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  19425003968.25   \n","\n","                                                                                                         mse_test  \\\n","DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2                                                14162962962.962999   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          14162962962.962999   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  14162962962.962999   \n","\n","                                                                                                rmse_oof  \\\n","DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2                                                133957.64   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          133957.64   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  133957.64   \n","\n","                                                                                                rmse_test  \\\n","DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2                                                119008.247   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          119008.247   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  119008.247   \n","\n","                                                                                                 mae_oof  \\\n","DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2                                                119071.43   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          119071.43   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  119071.43   \n","\n","                                                                                                mae_test  \\\n","DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2                                                85555.556   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          85555.556   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  85555.556   \n","\n","                                                                                              r2_oof  \\\n","DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2                                                71.01   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          71.01   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  71.01   \n","\n","                                                                                              r2_test  \\\n","DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2                                                 63.24   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                           63.24   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2   63.24   \n","\n","                                                                                                                                               params  \\\n","DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2                                                {'modelo__max_depth': 1, 'modelo__max_features': None}   \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          {'modelo__max_depth': 1, 'modelo__max_features': None}   \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  {'modelo__max_depth': 1, 'modelo__max_features': None}   \n","\n","                                                                                              delta_r2  \n","DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2                                                   7.77  \n","DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                             7.77  \n","DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2     7.77  "],"text/html":["\n","  <div id=\"df-15815df2-da56-4a99-b45b-7e3681240f72\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>DecisionTreeRegressor_O ['Cambio_lluvias']_cv_2</th>\n","      <td>19425003968.25</td>\n","      <td>14162962962.962999</td>\n","      <td>133957.64</td>\n","      <td>119008.247</td>\n","      <td>119071.43</td>\n","      <td>85555.556</td>\n","      <td>71.01</td>\n","      <td>63.24</td>\n","      <td>{'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","      <td>7.77</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>19425003968.25</td>\n","      <td>14162962962.962999</td>\n","      <td>133957.64</td>\n","      <td>119008.247</td>\n","      <td>119071.43</td>\n","      <td>85555.556</td>\n","      <td>71.01</td>\n","      <td>63.24</td>\n","      <td>{'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","      <td>7.77</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeRegressor_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>19425003968.25</td>\n","      <td>14162962962.962999</td>\n","      <td>133957.64</td>\n","      <td>119008.247</td>\n","      <td>119071.43</td>\n","      <td>85555.556</td>\n","      <td>71.01</td>\n","      <td>63.24</td>\n","      <td>{'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","      <td>7.77</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-15815df2-da56-4a99-b45b-7e3681240f72')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-15815df2-da56-4a99-b45b-7e3681240f72 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-15815df2-da56-4a99-b45b-7e3681240f72');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-95af6ce5-3553-489a-b23a-8a09e51f1a46\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-95af6ce5-3553-489a-b23a-8a09e51f1a46')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-95af6ce5-3553-489a-b23a-8a09e51f1a46 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"mse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 19425003968.25,\n        \"max\": 19425003968.25,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          19425003968.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 14162962962.963,\n        \"max\": 14162962962.963,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          14162962962.963\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 133957.64,\n        \"max\": 133957.64,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          133957.64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 119008.247,\n        \"max\": 119008.247,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          119008.247\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 119071.43,\n        \"max\": 119071.43,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          119071.43\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 85555.556,\n        \"max\": 85555.556,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          85555.556\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 71.01,\n        \"max\": 71.01,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          71.01\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 63.24,\n        \"max\": 63.24,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          63.24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"delta_r2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 7.770000000000003,\n        \"max\": 7.770000000000003,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          7.770000000000003\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 912 ms, sys: 23 ms, total: 935 ms\n","Wall time: 3.67 s\n"]}]},{"cell_type":"code","source":["%%time\n","\n","modelo = DecisionTreeRegressor(random_state=42)\n","param_grid = {\n","    'modelo__max_depth': [None, 1, 2, 3], # None por defecto\n","    #'modelo__min_samples_split': [2, 4, 5, 6], # 2 por defecto\n","    #'modelo__min_samples_leaf': [1, 2, 3, 4, 5], # 1 por defecto\n","    'modelo__max_features': [None, 'sqrt'] # None por defecto\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='regresion', modelo=modelo, param_grid=param_grid, num_folds=3)\n","resultados_regresion_cv = actualizar_resultados_regresion_cv(resultados_regresion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":185},"id":"1pUj9l-RrhzZ","executionInfo":{"status":"ok","timestamp":1757365161538,"user_tz":180,"elapsed":5003,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"df1dff3d-4aa8-4d1b-8bb9-1c8ecaaace6c"},"execution_count":93,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion: \"DecisionTreeRegressor\" con validación cruzada (3 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                                                           mse_oof  \\\n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  19851666666.669998   \n","\n","                                                                                                       mse_test  \\\n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  14183333333.333   \n","\n","                                                                                                 rmse_oof  \\\n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  136745.61   \n","\n","                                                                                                 rmse_test  \\\n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  119093.801   \n","\n","                                                                                                  mae_oof  \\\n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  113166.67   \n","\n","                                                                                                mae_test  \\\n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  105000.0   \n","\n","                                                                                               r2_oof  \\\n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  70.16   \n","\n","                                                                                               r2_test  \\\n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3   63.19   \n","\n","                                                                                                                                                     params  \\\n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  {'modelo__max_depth': None, 'modelo__max_features': 'sqrt'}   \n","\n","                                                                                               delta_r2  \n","DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3     6.97  "],"text/html":["\n","  <div id=\"df-213daee0-b60f-4a93-85bb-d9c25f9e5581\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>DecisionTreeRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>19851666666.669998</td>\n","      <td>14183333333.333</td>\n","      <td>136745.61</td>\n","      <td>119093.801</td>\n","      <td>113166.67</td>\n","      <td>105000.0</td>\n","      <td>70.16</td>\n","      <td>63.19</td>\n","      <td>{'modelo__max_depth': None, 'modelo__max_features': 'sqrt'}</td>\n","      <td>6.97</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-213daee0-b60f-4a93-85bb-d9c25f9e5581')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-213daee0-b60f-4a93-85bb-d9c25f9e5581 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-213daee0-b60f-4a93-85bb-d9c25f9e5581');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"mse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 19851666666.67,\n        \"max\": 19851666666.67,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          19851666666.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 14183333333.333,\n        \"max\": 14183333333.333,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          14183333333.333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 136745.61,\n        \"max\": 136745.61,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          136745.61\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 119093.801,\n        \"max\": 119093.801,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          119093.801\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 113166.67,\n        \"max\": 113166.67,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          113166.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 105000.0,\n        \"max\": 105000.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          105000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 70.16,\n        \"max\": 70.16,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          70.16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 63.19,\n        \"max\": 63.19,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          63.19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"delta_r2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 6.969999999999999,\n        \"max\": 6.969999999999999,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          6.969999999999999\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 1.08 s, sys: 28.4 ms, total: 1.11 s\n","Wall time: 5.02 s\n"]}]},{"cell_type":"markdown","source":["**Análisis Regresión con Árboles de Decisión**\n","___\n","Tenemos que:\n","- Para 2 folds: hay varios resultados aceptables para varias combinaciones de regresores, todos con los mismos valores r2_oof / r2_test = 71.01 / 63.24, con el parámetro max_depth = 1 (resto de parámetros por defecto), y con un delta_r2 moderado (sobreajuste leve). El modelo más simple contempla a \"Cambio_lluvias\" como único regresor.\n","- Para 3 folds: un un único resultado aceptable con r2_oof / r2_test = 70.16 / 63.19, parámetro max_features = 'sqrt' (resto de parámetros por defecto) y regresores \"Temperatura_promedio\", \"Cambio_lluvias\", \"Frecuencia_sequías\", \"Temperatura_promedio * Cambio_lluvias\",  \"Cambio_lluvias * Frecuencia_sequías\", y \"Temperatura_promedio * Frecuencia_sequías\". También tiene un leve sobreajuste.\n","\n","Concluimos que la regresión con árboles de decisión y validación cruzada para 2 y 3 folds entregan modelos aceptables, algo sobreajustados."],"metadata":{"id":"ht4puMW2iTkk"}},{"cell_type":"markdown","source":["####**Random Forest**"],"metadata":{"id":"676Xrcuirvhw"}},{"cell_type":"code","source":["%%time\n","\n","modelo = RandomForestRegressor(random_state=42)\n","param_grid = {\n","    'modelo__n_estimators': [50, 100, 150],     # 100 por defecto\n","    'modelo__max_depth': [None, 2, 3, 4],  # None por defecto\n","    #'modelo__min_samples_split': [2, 3, 4, 5],  # 2 por defecto\n","    #'modelo__min_samples_leaf': [1, 2, 3],   # 1 por defecto\n","    'modelo__max_features': [None, 'sqrt']  # sqrt por defecto\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='regresion', modelo=modelo, param_grid=param_grid, num_folds=2)\n","resultados_regresion_cv = actualizar_resultados_regresion_cv(resultados_regresion_cv, m_ccv)"],"metadata":{"id":"awMzcm0kM58A","executionInfo":{"status":"ok","timestamp":1757365287894,"user_tz":180,"elapsed":126362,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"colab":{"base_uri":"https://localhost:8080/","height":140},"outputId":"8bef81cd-257e-420d-c4d3-1291c1cf9819"},"execution_count":94,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion: \"RandomForestRegressor\" con validación cruzada (2 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["Empty DataFrame\n","Columns: [mse_oof, mse_test, rmse_oof, rmse_test, mae_oof, mae_test, r2_oof, r2_test, params, delta_r2]\n","Index: []"],"text/html":["\n","  <div id=\"df-6eec6c81-b73e-4537-92ba-0f7e54b58345\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6eec6c81-b73e-4537-92ba-0f7e54b58345')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6eec6c81-b73e-4537-92ba-0f7e54b58345 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6eec6c81-b73e-4537-92ba-0f7e54b58345');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 4.44 s, sys: 150 ms, total: 4.58 s\n","Wall time: 2min 6s\n"]}]},{"cell_type":"code","source":["%%time\n","\n","modelo = RandomForestRegressor(random_state=42)\n","param_grid = {\n","    'modelo__n_estimators': [50, 100, 150],     # 100 por defecto\n","    'modelo__max_depth': [None, 2, 3, 4],  # None por defecto\n","    #'modelo__min_samples_split': [2, 3, 4, 5],  # 2 por defecto\n","    #'modelo__min_samples_leaf': [1, 2, 3],   # 1 por defecto\n","    'modelo__max_features': [None, 'sqrt']  # sqrt por defecto\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='regresion', modelo=modelo, param_grid=param_grid, num_folds=3)\n","resultados_regresion_cv = actualizar_resultados_regresion_cv(resultados_regresion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":234},"id":"SOUlE3sZyIta","executionInfo":{"status":"ok","timestamp":1757365476861,"user_tz":180,"elapsed":188972,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"1f48819b-8e4d-45e0-c635-a185c8b80ed0"},"execution_count":95,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de regresion: \"RandomForestRegressor\" con validación cruzada (3 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                                     mse_oof  \\\n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3  32231346604.990002   \n","RandomForestRegressor_O ['Cambio_lluvias']_cv_3                           32702102820.639999   \n","\n","                                                                                    mse_test  \\\n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3     15679081563.504   \n","RandomForestRegressor_O ['Cambio_lluvias']_cv_3                           19203468520.118999   \n","\n","                                                                           rmse_oof  \\\n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3  176148.31   \n","RandomForestRegressor_O ['Cambio_lluvias']_cv_3                            178128.0   \n","\n","                                                                           rmse_test  \\\n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3  125216.139   \n","RandomForestRegressor_O ['Cambio_lluvias']_cv_3                            138576.58   \n","\n","                                                                            mae_oof  \\\n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3  146729.56   \n","RandomForestRegressor_O ['Cambio_lluvias']_cv_3                           152661.72   \n","\n","                                                                            mae_test  \\\n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3   89029.616   \n","RandomForestRegressor_O ['Cambio_lluvias']_cv_3                           102259.978   \n","\n","                                                                         r2_oof  \\\n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3  50.46   \n","RandomForestRegressor_O ['Cambio_lluvias']_cv_3                           50.43   \n","\n","                                                                         r2_test  \\\n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3   59.31   \n","RandomForestRegressor_O ['Cambio_lluvias']_cv_3                            50.16   \n","\n","                                                                                                                                                       params  \\\n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3   {'modelo__max_depth': 2, 'modelo__max_features': None, 'modelo__n_estimators': 50}   \n","RandomForestRegressor_O ['Cambio_lluvias']_cv_3                           {'modelo__max_depth': 2, 'modelo__max_features': None, 'modelo__n_estimators': 150}   \n","\n","                                                                         delta_r2  \n","RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3     8.85  \n","RandomForestRegressor_O ['Cambio_lluvias']_cv_3                              0.27  "],"text/html":["\n","  <div id=\"df-9805f020-1922-4ee6-a38e-927d38a94c6a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>RandomForestRegressor_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3</th>\n","      <td>32231346604.990002</td>\n","      <td>15679081563.504</td>\n","      <td>176148.31</td>\n","      <td>125216.139</td>\n","      <td>146729.56</td>\n","      <td>89029.616</td>\n","      <td>50.46</td>\n","      <td>59.31</td>\n","      <td>{'modelo__max_depth': 2, 'modelo__max_features': None, 'modelo__n_estimators': 50}</td>\n","      <td>8.85</td>\n","    </tr>\n","    <tr>\n","      <th>RandomForestRegressor_O ['Cambio_lluvias']_cv_3</th>\n","      <td>32702102820.639999</td>\n","      <td>19203468520.118999</td>\n","      <td>178128.0</td>\n","      <td>138576.58</td>\n","      <td>152661.72</td>\n","      <td>102259.978</td>\n","      <td>50.43</td>\n","      <td>50.16</td>\n","      <td>{'modelo__max_depth': 2, 'modelo__max_features': None, 'modelo__n_estimators': 150}</td>\n","      <td>0.27</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9805f020-1922-4ee6-a38e-927d38a94c6a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9805f020-1922-4ee6-a38e-927d38a94c6a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9805f020-1922-4ee6-a38e-927d38a94c6a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-d546cd73-97aa-45af-af90-d2cf94eb2d7b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d546cd73-97aa-45af-af90-d2cf94eb2d7b')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-d546cd73-97aa-45af-af90-d2cf94eb2d7b button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"mse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 32231346604.99,\n        \"max\": 32702102820.64,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          32702102820.64,\n          32231346604.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 15679081563.504,\n        \"max\": 19203468520.119,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          19203468520.119,\n          15679081563.504\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 176148.31,\n        \"max\": 178128.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          178128.0,\n          176148.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 125216.139,\n        \"max\": 138576.58,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          138576.58,\n          125216.139\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 146729.56,\n        \"max\": 152661.72,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          152661.72,\n          146729.56\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 89029.616,\n        \"max\": 102259.978,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          102259.978,\n          89029.616\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 50.43,\n        \"max\": 50.46,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          50.43,\n          50.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 50.16,\n        \"max\": 59.31,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          50.16,\n          59.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"delta_r2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.2700000000000031,\n        \"max\": 8.850000000000001,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.2700000000000031,\n          8.850000000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 6.68 s, sys: 212 ms, total: 6.89 s\n","Wall time: 3min 8s\n"]}]},{"cell_type":"markdown","source":["**Análisis Regresión con Random Forest**\n","___\n","Tenemos que:\n","- Para 2 folds: no hay resultados aceptables.\n","- Para 3 folds: no hay resultados aceptables.\n","\n","En este caso, Random Forest no entrega resultados aceptables."],"metadata":{"id":"Wz8cvzpgmn9R"}},{"cell_type":"markdown","source":["####**Conclusión**"],"metadata":{"id":"mP79yiNBy0Tl"}},{"cell_type":"code","source":["k = 65\n","d = 5\n","criterio = (resultados_regresion_cv.r2_oof>k) & (resultados_regresion_cv.r2_test>=k) & (resultados_regresion_cv.delta_r2<=d)\n","\n","print(f'Mejores resultados cuando r2_oof y r2_test son superiores o iguales a {k}% y delta_r2 es inferior o igual a {d}%\\n')\n","resultados_regresion_cv[criterio].sort_values('r2_test', ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"nSlCffgPj5hB","executionInfo":{"status":"ok","timestamp":1757365476921,"user_tz":180,"elapsed":58,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"d8829cf8-8ee6-4e66-ced4-2f6a3f1bf89f"},"execution_count":96,"outputs":[{"output_type":"stream","name":"stdout","text":["Mejores resultados cuando r2_oof y r2_test son superiores o iguales a 65% y delta_r2 es inferior o igual a 5%\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["                                                                                          mse_oof  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        23108488333.540001   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  23108488333.540001   \n","\n","                                                                                     mse_test  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        12858287303.84   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  12858287303.84   \n","\n","                                                                                rmse_oof  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        150900.95   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  150900.95   \n","\n","                                                                                rmse_test  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        113394.388   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  113394.388   \n","\n","                                                                                 mae_oof  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        118241.65   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  118241.65   \n","\n","                                                                                mae_test  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        94462.611   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  94462.611   \n","\n","                                                                              r2_oof  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        65.14   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  65.14   \n","\n","                                                                              r2_test  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                         66.63   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3   66.63   \n","\n","                                                                                                            params  \\\n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        {'modelo__regressor__alpha': 0.001}   \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  {'modelo__regressor__alpha': 0.001}   \n","\n","                                                                              delta_r2  \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                           1.49  \n","Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3     1.49  "],"text/html":["\n","  <div id=\"df-ee64233f-b37a-4bcd-be44-5a86a7460b50\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mse_oof</th>\n","      <th>mse_test</th>\n","      <th>rmse_oof</th>\n","      <th>rmse_test</th>\n","      <th>mae_oof</th>\n","      <th>mae_test</th>\n","      <th>r2_oof</th>\n","      <th>r2_test</th>\n","      <th>params</th>\n","      <th>delta_r2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Lasso_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3</th>\n","      <td>23108488333.540001</td>\n","      <td>12858287303.84</td>\n","      <td>150900.95</td>\n","      <td>113394.388</td>\n","      <td>118241.65</td>\n","      <td>94462.611</td>\n","      <td>65.14</td>\n","      <td>66.63</td>\n","      <td>{'modelo__regressor__alpha': 0.001}</td>\n","      <td>1.49</td>\n","    </tr>\n","    <tr>\n","      <th>Lasso_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>23108488333.540001</td>\n","      <td>12858287303.84</td>\n","      <td>150900.95</td>\n","      <td>113394.388</td>\n","      <td>118241.65</td>\n","      <td>94462.611</td>\n","      <td>65.14</td>\n","      <td>66.63</td>\n","      <td>{'modelo__regressor__alpha': 0.001}</td>\n","      <td>1.49</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee64233f-b37a-4bcd-be44-5a86a7460b50')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ee64233f-b37a-4bcd-be44-5a86a7460b50 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ee64233f-b37a-4bcd-be44-5a86a7460b50');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7327a099-996a-4af6-9010-5dfbf1d81960\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7327a099-996a-4af6-9010-5dfbf1d81960')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7327a099-996a-4af6-9010-5dfbf1d81960 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"resultados_regresion_cv[criterio]\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"mse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 23108488333.54,\n        \"max\": 23108488333.54,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          23108488333.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 12858287303.84,\n        \"max\": 12858287303.84,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          12858287303.84\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 150900.95,\n        \"max\": 150900.95,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          150900.95\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rmse_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 113394.388,\n        \"max\": 113394.388,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          113394.388\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 118241.65,\n        \"max\": 118241.65,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          118241.65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mae_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 94462.611,\n        \"max\": 94462.611,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          94462.611\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 65.14,\n        \"max\": 65.14,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          65.14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"r2_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 66.63,\n        \"max\": 66.63,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          66.63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"delta_r2\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 1.4899999999999949,\n        \"max\": 1.4899999999999949,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.4899999999999949\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":96}]},{"cell_type":"markdown","source":["Como conclusión, para la tarea de predicción de la producción de alimentos con este dataset, la regresión Lasso, optimizada mediante validación cruzada para 3 folds y ajuste de hiperparámetro alfa a 0.001, ofrece un rendimiento superior en comparación al resto de los modelos analizados, aunque el tamaño del dataset sigue siendo una limitación general para generalizar el resultado. El modelo más simple contempla como regresores a \"Temperatura_promedio\" y \"Cambio_lluvias\", y deja de lado a \"Frecuencia_sequías\" evitando multicolinealidad."],"metadata":{"id":"g5hKgz72rzzP"}},{"cell_type":"code","source":["# calculo de la correlación de \"Temperatura_promedio\" con \"Cambio_lluvias\" y \"Frecuencia_sequías\"\n","corr_sequias = df[['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']].corr().iloc[2,:-1]\n","corr_sequias.name = 'Correlación con \"Frecuencia_sequías\"'\n","\n","corr_sequias"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"wk3YwUOf3N3M","executionInfo":{"status":"ok","timestamp":1757365477012,"user_tz":180,"elapsed":87,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"f9910028-c648-4cd6-b943-e75ae4efbd09"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Temperatura_promedio    0.834994\n","Cambio_lluvias         -0.924394\n","Name: Correlación con \"Frecuencia_sequías\", dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Correlación con \"Frecuencia_sequías\"</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Temperatura_promedio</th>\n","      <td>0.834994</td>\n","    </tr>\n","    <tr>\n","      <th>Cambio_lluvias</th>\n","      <td>-0.924394</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":97}]},{"cell_type":"markdown","source":["###**Ajuste Hiperparámetros Clasificación**"],"metadata":{"id":"5T9McfxxNWuc"}},{"cell_type":"code","source":["def clasificacion_con_cv(df, vars, modelo, orig, cuad, comb, param_grid, num_folds):\n","    '''\n","    Efectúa la clasificación con validación cruzada.\n","    Params:\n","    - df: DataFrame con los datos\n","    - vars: lista de variables a usar\n","    - modelo: modelo de regresión a usar\n","    - orig: booleano que indica si se usan las variables originales\n","    - cuad: booleano que indica si se usan las variables cuadráticas\n","    - comb: booleano que indica si se usan las variables combinadas\n","    - param_grid: diccionario con los parámetros a ajustar\n","    - num_folds: número de folds para la validación cruzada\n","\n","    Retorna un diccionario con las métricas del modelo.\n","    '''\n","\n","    if num_folds < 2:\n","        print('num_folds debe ser mayor o igual a 2')\n","        return\n","\n","    nombre_modelo = modelo.__class__.__name__ + '_'\n","    if orig: nombre_modelo = nombre_modelo + 'O'\n","    if cuad: nombre_modelo = nombre_modelo + 'C'\n","    if comb: nombre_modelo = nombre_modelo + 'B'\n","    nombre_modelo = nombre_modelo + ' ' + str(vars) + '_cv_' + str(num_folds)\n","\n","    vars_std = [var for var in vars if var in var_cont]\n","    vars_mms = [var for var in vars if var in var_disc]\n","\n","    X_train, X_test, y_train, y_test = train_test_split(df[vars], df['impacto'], test_size=0.3, random_state=42, stratify=df['impacto'])\n","\n","    #print(f'Dimensión del train set = {X_train.shape}')\n","    #print(f'Dimensión del test set  = {X_test.shape}')\n","\n","    if 'KNeighborsClassifier' in nombre_modelo or 'SVC' in nombre_modelo:\n","\n","        preprocessor_sc = ColumnTransformer(\n","            transformers=[\n","                ('num_std', StandardScaler(), vars_std),\n","                ('num_mms', MinMaxScaler(), vars_mms)\n","            ],\n","            verbose_feature_names_out=False\n","        ).set_output(transform='pandas')\n","\n","        pipe_reg = Pipeline(steps=[\n","            ('preprocessor_sc', preprocessor_sc),\n","            ('poli', PolynomialFeatures(degree=2, include_bias=False, interaction_only=False)),\n","            ('selector', SeleccionarAtributos(vars, orig, cuad, comb)),\n","            ('modelo', modelo)\n","        ]).set_output(transform=\"pandas\")\n","\n","    else:\n","        pipe_reg = Pipeline(steps=[\n","            ('poli', PolynomialFeatures(degree=2, include_bias=False, interaction_only=False)),\n","            ('selector', SeleccionarAtributos(vars, orig, cuad, comb)),\n","            ('modelo', modelo)\n","        ]).set_output(transform=\"pandas\")\n","\n","\n","    skf = StratifiedKFold(n_splits=num_folds, shuffle=True, random_state=42)\n","\n","    scoring = {\n","        'precision': 'precision_weighted',\n","        'recall': 'recall_weighted',\n","        'accuracy': 'accuracy',\n","        'roc_auc': 'roc_auc_ovr',\n","    }\n","    refit = 'roc_auc'\n","\n","    gs_cls = GridSearchCV(pipe_reg, param_grid=param_grid, cv=skf, scoring=scoring, n_jobs=-1, refit=refit)\n","    gs_cls.fit(X_train, y_train)\n","\n","    # obtener mejores parámetros\n","    best_params = gs_cls.best_params_\n","    results = gs_cls.cv_results_\n","    best_index = gs_cls.best_index_\n","\n","    # obtener las métricas oof\n","\n","    accuracy_oof = np.round(gs_cls.best_score_, 2) #gs_reg.cv_results_['mean_test_r2'][0]\n","    #accuracy_std_oof = np.round(results['std_test_accuracy'][best_index], 2)\n","\n","    precision_oof = np.round(results['mean_test_precision'][best_index], 2)\n","    #precision_std_oof = np.round(results['std_test_precision'][best_index], 2)\n","\n","    recall_oof = np.round(results['mean_test_recall'][best_index], 2)\n","    #recall_std_oof = np.round(results['std_test_recall'][best_index], 2)\n","\n","    roc_auc_oof = np.round(results['mean_test_roc_auc'][best_index], 2)\n","    #roc_auc_std_oof = np.round(results['std_test_roc_auc'][best_index], 2)\n","\n","    # calcular las métricas para la predicción del test set\n","\n","    y_pred_test = gs_cls.predict(X_test)\n","    y_pred_proba_test = gs_cls.predict_proba(X_test)\n","\n","    accuracy_test = np.round(accuracy_score(y_test, y_pred_test), 2)\n","    precision_test = np.round(precision_score(y_test, y_pred_test, average='weighted', zero_division=0.), 2)\n","    recall_test = np.round(recall_score(y_test, y_pred_test, average='weighted', zero_division=0.), 2)\n","    roc_auc_test = np.round(roc_auc_score(y_test, y_pred_proba_test, average='weighted', multi_class='ovr'), 2)\n","    confusion_test = confusion_matrix(y_test, y_pred_test)\n","\n","    scores = [precision_oof, precision_test, recall_oof, recall_test, accuracy_oof, accuracy_test, roc_auc_oof, roc_auc_test, confusion_test, best_params]\n","    return {nombre_modelo: scores}"],"metadata":{"id":"q0RqGmVmNddX","executionInfo":{"status":"ok","timestamp":1757365477025,"user_tz":180,"elapsed":7,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":98,"outputs":[]},{"cell_type":"code","source":["# inicializar dataframe con los resultados de la clasificación\n","# lo hago diferente a como lo hice en el punto anterior porque voy a ajustar hiperparámetros por modelo\n","# y quiero ir viendo los resultados\n","\n","resultados_clasificacion_cv = pd.DataFrame(data=None)\n","\n","def actualizar_resultados_clasificacion_cv(df1, df2):\n","    '''\n","    Actualiza el dataframe con los resultados de la clasificación.\n","    Params:\n","    - df1: DataFrame con los resultados históricos de la clasificación\n","    - df2: DataFrame con los resultados de la nueva clasificación\n","\n","    Retorna el dataframe actualizado, que cumple con los siguientes requerimientos:\n","    - accuracy_test >= 0.6\n","    - accuracy_oof  >= 0.6\n","    '''\n","\n","    k = 0.6\n","    df2_ = df2.copy()\n","    df2_ = df2_[(df2_.accuracy_test>=k) & (df2_.accuracy_oof>=k)]\n","    print('Mostrando los mejores resultados:')\n","    display(df2_)\n","\n","    df = pd.concat([df1, df2]).sort_values(['accuracy_test', 'accuracy_oof'], ascending=False)\n","    return df[(df.accuracy_test>=k) & (df.accuracy_oof>=k)]"],"metadata":{"id":"c07SEkMPNc_h","executionInfo":{"status":"ok","timestamp":1757365477027,"user_tz":180,"elapsed":5,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":99,"outputs":[]},{"cell_type":"markdown","source":["####**K-Nearest Neighbors**"],"metadata":{"id":"k_DhCrdj_SFq"}},{"cell_type":"code","source":["%%time\n","\n","param_grid = {\n","    'modelo__n_neighbors': [3, 4, 5],   # default 5\n","    'modelo__weights': ['uniform', 'distance'], # default uniform\n","    'modelo__p': [1, 2, 3]  # default 2\n","}\n","\n","modelo = KNeighborsClassifier()\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='clasificacion', modelo=modelo, param_grid=param_grid, num_folds=2)\n","resultados_clasificacion_cv = actualizar_resultados_clasificacion_cv(resultados_clasificacion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":672},"id":"0EZbQws0_CZV","executionInfo":{"status":"ok","timestamp":1757365498568,"user_tz":180,"elapsed":21540,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"2b09479c-8c44-47d8-edb6-74569327e74b"},"execution_count":100,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de clasificacion: \"KNeighborsClassifier\" con validación cruzada (2 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                                              precision_oof  \\\n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                0.24   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2          0.24   \n","KNeighborsClassifier_O ['Temperatura_promedio']_cv_2                                                   0.46   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2           0.32   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                   0.56   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                   0.38   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.36   \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_2                                                         0.57   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                             0.2   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                 0.56   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                              0.4   \n","\n","                                                                                              precision_test  \\\n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                 0.89   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2           0.89   \n","KNeighborsClassifier_O ['Temperatura_promedio']_cv_2                                                    0.89   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2            0.89   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                     0.5   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                    0.83   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                   0.72   \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_2                                                           0.5   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                             0.72   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                  0.44   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                              0.72   \n","\n","                                                                                              recall_oof  \\\n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                             0.43   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2       0.43   \n","KNeighborsClassifier_O ['Temperatura_promedio']_cv_2                                                 0.5   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2        0.36   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.5   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.36   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.5   \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_2                                                       0.5   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                         0.36   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.43   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                          0.43   \n","\n","                                                                                              recall_test  \\\n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.83   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2        0.83   \n","KNeighborsClassifier_O ['Temperatura_promedio']_cv_2                                                 0.83   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2         0.83   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.67   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.67   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.67   \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_2                                                       0.67   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                          0.67   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.67   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                           0.67   \n","\n","                                                                                              accuracy_oof  \\\n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.76   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2         0.76   \n","KNeighborsClassifier_O ['Temperatura_promedio']_cv_2                                                  0.65   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2          0.62   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                   0.7   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.69   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.69   \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_2                                                        0.68   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                           0.66   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                0.65   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                            0.65   \n","\n","                                                                                              accuracy_test  \\\n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                0.83   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2          0.83   \n","KNeighborsClassifier_O ['Temperatura_promedio']_cv_2                                                   0.83   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2           0.83   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                   0.67   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                   0.67   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.67   \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_2                                                         0.67   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                            0.67   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                 0.67   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                             0.67   \n","\n","                                                                                              roc_auc_oof  \\\n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.76   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2        0.76   \n","KNeighborsClassifier_O ['Temperatura_promedio']_cv_2                                                 0.65   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2         0.62   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.7   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.69   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.69   \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_2                                                       0.68   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                          0.66   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.65   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                           0.65   \n","\n","                                                                                              roc_auc_test  \\\n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.88   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2          0.9   \n","KNeighborsClassifier_O ['Temperatura_promedio']_cv_2                                                   1.0   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2          0.96   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.92   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.79   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.83   \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_2                                                        0.85   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                           0.81   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                 1.0   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                            0.79   \n","\n","                                                                                                                  confusion_test  \\\n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                        [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","KNeighborsClassifier_O ['Temperatura_promedio']_cv_2                                           [[1, 1, 0], [0, 2, 0], [0, 0, 2]]   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2   [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                           [[2, 0, 0], [2, 0, 0], [0, 0, 2]]   \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                           [[1, 0, 1], [0, 1, 1], [0, 0, 2]]   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          [[2, 0, 0], [1, 1, 0], [0, 1, 1]]   \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_2                                                 [[2, 0, 0], [2, 0, 0], [0, 0, 2]]   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                    [[2, 0, 0], [1, 1, 0], [0, 1, 1]]   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                         [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                     [[1, 1, 0], [0, 2, 0], [1, 0, 1]]   \n","\n","                                                                                                                                                                  params  \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                         {'modelo__n_neighbors': 3, 'modelo__p': 2, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2   {'modelo__n_neighbors': 3, 'modelo__p': 3, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_O ['Temperatura_promedio']_cv_2                                           {'modelo__n_neighbors': 4, 'modelo__p': 1, 'modelo__weights': 'distance'}  \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2   {'modelo__n_neighbors': 3, 'modelo__p': 1, 'modelo__weights': 'distance'}  \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                           {'modelo__n_neighbors': 5, 'modelo__p': 1, 'modelo__weights': 'distance'}  \n","KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                           {'modelo__n_neighbors': 4, 'modelo__p': 3, 'modelo__weights': 'distance'}  \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                           {'modelo__n_neighbors': 4, 'modelo__p': 3, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_2                                                  {'modelo__n_neighbors': 3, 'modelo__p': 1, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                     {'modelo__n_neighbors': 5, 'modelo__p': 1, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                         {'modelo__n_neighbors': 4, 'modelo__p': 3, 'modelo__weights': 'distance'}  \n","KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2                     {'modelo__n_neighbors': 4, 'modelo__p': 2, 'modelo__weights': 'distance'}  "],"text/html":["\n","  <div id=\"df-d88deccd-2b2b-4ac8-82be-874f35e5d5d7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>precision_oof</th>\n","      <th>precision_test</th>\n","      <th>recall_oof</th>\n","      <th>recall_test</th>\n","      <th>accuracy_oof</th>\n","      <th>accuracy_test</th>\n","      <th>roc_auc_oof</th>\n","      <th>roc_auc_test</th>\n","      <th>confusion_test</th>\n","      <th>params</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2</th>\n","      <td>0.24</td>\n","      <td>0.89</td>\n","      <td>0.43</td>\n","      <td>0.83</td>\n","      <td>0.76</td>\n","      <td>0.83</td>\n","      <td>0.76</td>\n","      <td>0.88</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 3, 'modelo__p': 2, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.24</td>\n","      <td>0.89</td>\n","      <td>0.43</td>\n","      <td>0.83</td>\n","      <td>0.76</td>\n","      <td>0.83</td>\n","      <td>0.76</td>\n","      <td>0.9</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 3, 'modelo__p': 3, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Temperatura_promedio']_cv_2</th>\n","      <td>0.46</td>\n","      <td>0.89</td>\n","      <td>0.5</td>\n","      <td>0.83</td>\n","      <td>0.65</td>\n","      <td>0.83</td>\n","      <td>0.65</td>\n","      <td>1.0</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 4, 'modelo__p': 1, 'modelo__weights': 'distance'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.32</td>\n","      <td>0.89</td>\n","      <td>0.36</td>\n","      <td>0.83</td>\n","      <td>0.62</td>\n","      <td>0.83</td>\n","      <td>0.62</td>\n","      <td>0.96</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 3, 'modelo__p': 1, 'modelo__weights': 'distance'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.56</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.67</td>\n","      <td>0.7</td>\n","      <td>0.67</td>\n","      <td>0.7</td>\n","      <td>0.92</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 5, 'modelo__p': 1, 'modelo__weights': 'distance'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.38</td>\n","      <td>0.83</td>\n","      <td>0.36</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.79</td>\n","      <td>[[1, 0, 1], [0, 1, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 4, 'modelo__p': 3, 'modelo__weights': 'distance'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.36</td>\n","      <td>0.72</td>\n","      <td>0.5</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.83</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","      <td>{'modelo__n_neighbors': 4, 'modelo__p': 3, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Cambio_lluvias']_cv_2</th>\n","      <td>0.57</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.67</td>\n","      <td>0.68</td>\n","      <td>0.67</td>\n","      <td>0.68</td>\n","      <td>0.85</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 3, 'modelo__p': 1, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.2</td>\n","      <td>0.72</td>\n","      <td>0.36</td>\n","      <td>0.67</td>\n","      <td>0.66</td>\n","      <td>0.67</td>\n","      <td>0.66</td>\n","      <td>0.81</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","      <td>{'modelo__n_neighbors': 5, 'modelo__p': 1, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2</th>\n","      <td>0.56</td>\n","      <td>0.44</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.65</td>\n","      <td>0.67</td>\n","      <td>0.65</td>\n","      <td>1.0</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 4, 'modelo__p': 3, 'modelo__weights': 'distance'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_B ['Temperatura_promedio', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.4</td>\n","      <td>0.72</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.65</td>\n","      <td>0.67</td>\n","      <td>0.65</td>\n","      <td>0.79</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [1, 0, 1]]</td>\n","      <td>{'modelo__n_neighbors': 4, 'modelo__p': 2, 'modelo__weights': 'distance'}</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d88deccd-2b2b-4ac8-82be-874f35e5d5d7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d88deccd-2b2b-4ac8-82be-874f35e5d5d7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d88deccd-2b2b-4ac8-82be-874f35e5d5d7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4d8fadb5-f011-41bd-8fa6-5c0956906bb0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d8fadb5-f011-41bd-8fa6-5c0956906bb0')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4d8fadb5-f011-41bd-8fa6-5c0956906bb0 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 11,\n  \"fields\": [\n    {\n      \"column\": \"precision_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.2,\n        \"max\": 0.57,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.2,\n          0.46,\n          0.36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"precision_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.44,\n        \"max\": 0.89,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.5,\n          0.44,\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.36,\n        \"max\": 0.5,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.43,\n          0.5,\n          0.36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.83,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.67,\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.62,\n        \"max\": 0.76,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.76,\n          0.65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.83,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.67,\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.62,\n        \"max\": 0.76,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.76,\n          0.65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.79,\n        \"max\": 1.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.85,\n          0.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confusion_test\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 2 s, sys: 53 ms, total: 2.06 s\n","Wall time: 21.6 s\n"]}]},{"cell_type":"code","source":["%%time\n","\n","param_grid = {\n","    'modelo__n_neighbors': [3, 4, 5],   # default 5\n","    'modelo__weights': ['uniform', 'distance'], # default uniform\n","    'modelo__p': [1, 2, 3]  # default 2\n","}\n","\n","modelo = KNeighborsClassifier()\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='clasificacion', modelo=modelo, param_grid=param_grid, num_folds=3)\n","resultados_clasificacion_cv = actualizar_resultados_clasificacion_cv(resultados_clasificacion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":575},"id":"_7lCMpwuiy9k","executionInfo":{"status":"ok","timestamp":1757365532324,"user_tz":180,"elapsed":33750,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"90e7eb9c-47a0-47a3-9570-89458a03fb01"},"execution_count":101,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de clasificacion: \"KNeighborsClassifier\" con validación cruzada (3 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                                              precision_oof  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3                                                         0.55   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.39   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.39   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.55   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.29   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                 0.38   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3           0.38   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                            0.46   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                             0.44   \n","\n","                                                                                              precision_test  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3                                                          0.89   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3           0.89   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                 0.89   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                    0.89   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.72   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                  0.44   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3            0.44   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                             0.44   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                              0.44   \n","\n","                                                                                              recall_oof  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3                                                      0.72   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3       0.57   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                             0.57   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                0.72   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                               0.43   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                              0.43   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3        0.43   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                         0.58   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                          0.52   \n","\n","                                                                                              recall_test  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3                                                       0.83   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3        0.83   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                              0.83   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.83   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                0.67   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.67   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3         0.67   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                          0.67   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                           0.67   \n","\n","                                                                                              accuracy_oof  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3                                                         0.8   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3         0.76   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.75   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.7   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.74   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.73   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.65   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                           0.63   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                             0.6   \n","\n","                                                                                              accuracy_test  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3                                                         0.83   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.83   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.83   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.83   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.67   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                 0.67   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3           0.67   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                            0.67   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                             0.67   \n","\n","                                                                                              roc_auc_oof  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3                                                        0.8   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3        0.76   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                              0.75   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.7   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                0.74   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.73   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3         0.65   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                          0.63   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                            0.6   \n","\n","                                                                                              roc_auc_test  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3                                                        0.83   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.9   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.88   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.77   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.83   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.85   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.79   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                           0.77   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                            0.75   \n","\n","                                                                                                                  confusion_test  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3                                                 [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                           [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          [[2, 0, 0], [1, 1, 0], [0, 1, 1]]   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                         [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3   [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                    [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                     [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","\n","                                                                                                                                                                 params  \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3                                                 {'modelo__n_neighbors': 5, 'modelo__p': 1, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  {'modelo__n_neighbors': 3, 'modelo__p': 3, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        {'modelo__n_neighbors': 3, 'modelo__p': 2, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                           {'modelo__n_neighbors': 5, 'modelo__p': 1, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          {'modelo__n_neighbors': 4, 'modelo__p': 2, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                         {'modelo__n_neighbors': 5, 'modelo__p': 3, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3   {'modelo__n_neighbors': 5, 'modelo__p': 3, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                    {'modelo__n_neighbors': 4, 'modelo__p': 1, 'modelo__weights': 'uniform'}  \n","KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                     {'modelo__n_neighbors': 4, 'modelo__p': 1, 'modelo__weights': 'uniform'}  "],"text/html":["\n","  <div id=\"df-8b7a524c-e04c-4823-9d0b-f4b55d061297\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>precision_oof</th>\n","      <th>precision_test</th>\n","      <th>recall_oof</th>\n","      <th>recall_test</th>\n","      <th>accuracy_oof</th>\n","      <th>accuracy_test</th>\n","      <th>roc_auc_oof</th>\n","      <th>roc_auc_test</th>\n","      <th>confusion_test</th>\n","      <th>params</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Cambio_lluvias']_cv_3</th>\n","      <td>0.55</td>\n","      <td>0.89</td>\n","      <td>0.72</td>\n","      <td>0.83</td>\n","      <td>0.8</td>\n","      <td>0.83</td>\n","      <td>0.8</td>\n","      <td>0.83</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 5, 'modelo__p': 1, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.39</td>\n","      <td>0.89</td>\n","      <td>0.57</td>\n","      <td>0.83</td>\n","      <td>0.76</td>\n","      <td>0.83</td>\n","      <td>0.76</td>\n","      <td>0.9</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 3, 'modelo__p': 3, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3</th>\n","      <td>0.39</td>\n","      <td>0.89</td>\n","      <td>0.57</td>\n","      <td>0.83</td>\n","      <td>0.75</td>\n","      <td>0.83</td>\n","      <td>0.75</td>\n","      <td>0.88</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 3, 'modelo__p': 2, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.55</td>\n","      <td>0.89</td>\n","      <td>0.72</td>\n","      <td>0.83</td>\n","      <td>0.7</td>\n","      <td>0.83</td>\n","      <td>0.7</td>\n","      <td>0.77</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 5, 'modelo__p': 1, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.29</td>\n","      <td>0.72</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.74</td>\n","      <td>0.67</td>\n","      <td>0.74</td>\n","      <td>0.83</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","      <td>{'modelo__n_neighbors': 4, 'modelo__p': 2, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3</th>\n","      <td>0.38</td>\n","      <td>0.44</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.73</td>\n","      <td>0.67</td>\n","      <td>0.73</td>\n","      <td>0.85</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 5, 'modelo__p': 3, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.38</td>\n","      <td>0.44</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.65</td>\n","      <td>0.67</td>\n","      <td>0.65</td>\n","      <td>0.79</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 5, 'modelo__p': 3, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.46</td>\n","      <td>0.44</td>\n","      <td>0.58</td>\n","      <td>0.67</td>\n","      <td>0.63</td>\n","      <td>0.67</td>\n","      <td>0.63</td>\n","      <td>0.77</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 4, 'modelo__p': 1, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.44</td>\n","      <td>0.44</td>\n","      <td>0.52</td>\n","      <td>0.67</td>\n","      <td>0.6</td>\n","      <td>0.67</td>\n","      <td>0.6</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 4, 'modelo__p': 1, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b7a524c-e04c-4823-9d0b-f4b55d061297')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b7a524c-e04c-4823-9d0b-f4b55d061297 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b7a524c-e04c-4823-9d0b-f4b55d061297');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-c9b8b648-74af-48c0-86fb-ad15f5718f8a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c9b8b648-74af-48c0-86fb-ad15f5718f8a')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-c9b8b648-74af-48c0-86fb-ad15f5718f8a button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"precision_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.29,\n        \"max\": 0.55,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.55,\n          0.39,\n          0.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"precision_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.44,\n        \"max\": 0.89,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.89,\n          0.72,\n          0.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.43,\n        \"max\": 0.72,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.57,\n          0.52,\n          0.43\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.83,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.67,\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.6,\n        \"max\": 0.8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.63,\n          0.76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.83,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.67,\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.6,\n        \"max\": 0.8,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.63,\n          0.76\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.75,\n        \"max\": 0.9,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.83,\n          0.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confusion_test\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 2.69 s, sys: 70.8 ms, total: 2.76 s\n","Wall time: 33.8 s\n"]}]},{"cell_type":"markdown","source":["**Análisis Clasificación K-Nearest Neighbors**\n","___\n","\n","Considerando:\n","1. que los resultados mostrados solo son aquellos para los cuales los accuracies (oof y test) son mayores a 0.6.\n","2. que la idea en esta parte de clasificación (para todos los modelos, no solo este de vecinos más cercanos), será encontrar el modelo que tenga sobre 0.6 para las accuracies de los oof y test sets y la mejor combinacion de roc_auc para los oof y test sets.\n","\n","Tenemos que:\n","- Para 2 folds: la mejor predicción se tiene para accuracy_oof / accuracy_test = 0.76 / 0.83 y roc_auc oof / roc_auc test = 0.76 / 0.9, con los parámetros 'n_neighbors' = 3, 'p' = 3, y 'modelo__weights' = 'uniform' (resto de parámetros por defecto). Los predictores son: 'Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías', 'Temperatura_promedio * Cambio_lluvias', 'Temperatura_promedio * Frecuencia_sequías', y 'Cambio_lluvias *  'Frecuencia_sequías'.\n","    - recall_oof = 0.57, recall_test = 0.83\n","    - La matriz de confusión para el test set es [[2, 0, 0], [1, 1, 0], [0, 0, 2]], falló en predecir una instancia de impacto medio.\n","    - El modelo está un poco subajustado.\n","- Para 3 folds: la mejor predicción se tiene para accuracy_oof / accuracy_test = 0.8 / 0.83 y roc_auc oof / roc_auc test = 0.8 / 0.83, con los parámetros 'n_neighbors' = 5, 'p' = 1, y 'modelo__weights' = 'uniform' (resto de parámetros por defecto). El único predictor es \"Cambio_lluvias\".\n","    - recall_oof = 0.72, recall_test = 0.83\n","    - La matriz de confusión para el test set es [[2, 0, 0], [1, 1, 0], [0, 0, 2]], falló en predecir una instancia de impacto medio.\n","    - El modelo es muy simple (un único predictor) y está equilibrado (ni sub ni sobre ajustado).\n","\n","Como conclusión, el modelo predice bastante bien sobre todo considerando 3 folds, obteniendo mejores valores para recall, accuracy y roc-auc."],"metadata":{"id":"C7OT9lvY5tDe"}},{"cell_type":"markdown","source":["####**Decision Tree**"],"metadata":{"id":"tMPz3YFH_Ued"}},{"cell_type":"code","source":["%%time\n","\n","modelo = DecisionTreeClassifier(random_state=42)\n","param_grid = {\n","    'modelo__max_depth': [None, 1, 2, 3], # None por defecto\n","    #'modelo__min_samples_split': [2, 4, 5, 6], # 2 por defecto\n","    #'modelo__min_samples_leaf': [1, 2, 3, 4, 5], # 1 por defecto\n","    'modelo__class_weight': [None, 'balanced'], # None por defecto\n","    'modelo__max_features': [None, 'sqrt'] # None por defecto\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='clasificacion', modelo=modelo, param_grid=param_grid, num_folds=2)\n","resultados_clasificacion_cv = actualizar_resultados_clasificacion_cv(resultados_clasificacion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":665},"id":"5f3QF14y_XlM","executionInfo":{"status":"ok","timestamp":1757365545222,"user_tz":180,"elapsed":12889,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"b97a1168-7064-430e-8146-d4fe3c825bdc"},"execution_count":102,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de clasificacion: \"DecisionTreeClassifier\" con validación cruzada (2 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                                               precision_oof  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2                                                        0.36   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                0.36   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.36   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2          0.36   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.4   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.34   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                0.55   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2                                                  0.33   \n","\n","                                                                                               precision_test  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2                                                         0.44   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                  0.5   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                   0.44   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2           0.44   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.83   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                0.44   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                 0.72   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2                                                   0.44   \n","\n","                                                                                               recall_oof  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2                                                      0.5   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.5   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.5   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2        0.5   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                              0.43   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                            0.43   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                             0.43   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2                                               0.36   \n","\n","                                                                                               recall_test  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2                                                      0.67   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.67   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2        0.67   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                               0.67   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                             0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2                                                0.67   \n","\n","                                                                                               accuracy_oof  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2                                                       0.67   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.67   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2         0.67   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.66   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.64   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.63   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2                                                 0.61   \n","\n","                                                                                               accuracy_test  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2                                                        0.67   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                0.67   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2          0.67   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.67   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2                                                  0.67   \n","\n","                                                                                               roc_auc_oof  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2                                                      0.67   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.67   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2        0.67   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                               0.66   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                             0.64   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.63   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2                                                0.61   \n","\n","                                                                                               roc_auc_test  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2                                                       0.75   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.75   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.75   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2         0.75   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.81   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.75   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.81   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2                                                 0.75   \n","\n","                                                                                                                   confusion_test  \\\n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2                                                [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                        [[2, 0, 0], [2, 0, 0], [0, 0, 2]]   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                         [[1, 1, 0], [0, 2, 0], [0, 1, 1]]   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                       [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                        [[1, 1, 0], [0, 1, 1], [0, 0, 2]]   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2                                          [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","\n","                                                                                                                                                                                    params  \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2                                                      {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                        {'modelo__class_weight': 'balanced', 'modelo__max_depth': 1, 'modelo__max_features': None}  \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2        {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                               {'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': None}  \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                             {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              {'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': None}  \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2                                                {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  "],"text/html":["\n","  <div id=\"df-1ad2611e-d80b-424f-b109-34d94635d6b3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>precision_oof</th>\n","      <th>precision_test</th>\n","      <th>recall_oof</th>\n","      <th>recall_test</th>\n","      <th>accuracy_oof</th>\n","      <th>accuracy_test</th>\n","      <th>roc_auc_oof</th>\n","      <th>roc_auc_test</th>\n","      <th>confusion_test</th>\n","      <th>params</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Cambio_lluvias']_cv_2</th>\n","      <td>0.36</td>\n","      <td>0.44</td>\n","      <td>0.5</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_2</th>\n","      <td>0.36</td>\n","      <td>0.5</td>\n","      <td>0.5</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': 'balanced', 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.36</td>\n","      <td>0.44</td>\n","      <td>0.5</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.36</td>\n","      <td>0.44</td>\n","      <td>0.5</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.4</td>\n","      <td>0.83</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.66</td>\n","      <td>0.67</td>\n","      <td>0.66</td>\n","      <td>0.81</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_2</th>\n","      <td>0.34</td>\n","      <td>0.44</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.64</td>\n","      <td>0.67</td>\n","      <td>0.64</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2</th>\n","      <td>0.55</td>\n","      <td>0.72</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.63</td>\n","      <td>0.67</td>\n","      <td>0.63</td>\n","      <td>0.81</td>\n","      <td>[[1, 1, 0], [0, 1, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Temperatura_promedio']_cv_2</th>\n","      <td>0.33</td>\n","      <td>0.44</td>\n","      <td>0.36</td>\n","      <td>0.67</td>\n","      <td>0.61</td>\n","      <td>0.67</td>\n","      <td>0.61</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ad2611e-d80b-424f-b109-34d94635d6b3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1ad2611e-d80b-424f-b109-34d94635d6b3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1ad2611e-d80b-424f-b109-34d94635d6b3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e79e96a0-c514-48cf-be76-50b15c531a81\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e79e96a0-c514-48cf-be76-50b15c531a81')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e79e96a0-c514-48cf-be76-50b15c531a81 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"precision_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.33,\n        \"max\": 0.55,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.4,\n          0.33,\n          0.34\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"precision_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.44,\n        \"max\": 0.83,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.5,\n          0.72,\n          0.44\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.36,\n        \"max\": 0.5,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.5,\n          0.43,\n          0.36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.67,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.61,\n        \"max\": 0.67,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.67,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.61,\n        \"max\": 0.67,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.75,\n        \"max\": 0.81,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confusion_test\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 1.55 s, sys: 46.7 ms, total: 1.59 s\n","Wall time: 12.9 s\n"]}]},{"cell_type":"code","source":["%%time\n","\n","modelo = DecisionTreeClassifier(random_state=42)\n","param_grid = {\n","    'modelo__max_depth': [None, 1, 2, 3], # None por defecto\n","    #'modelo__min_samples_split': [2, 4, 5, 6], # 2 por defecto\n","    #'modelo__min_samples_leaf': [1, 2, 3, 4, 5], # 1 por defecto\n","    'modelo__class_weight': [None, 'balanced'], # None por defecto\n","    'modelo__max_features': [None, 'sqrt'] # None por defecto\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='clasificacion', modelo=modelo, param_grid=param_grid, num_folds=3)\n","resultados_clasificacion_cv = actualizar_resultados_clasificacion_cv(resultados_clasificacion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":929},"id":"SBcKyze0eM25","executionInfo":{"status":"ok","timestamp":1757365567396,"user_tz":180,"elapsed":22167,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"af4ab10c-5ae8-41d3-c7e6-570288b07971"},"execution_count":103,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de clasificacion: \"DecisionTreeClassifier\" con validación cruzada (3 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                                                precision_oof  \\\n","DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3                                                     0.64   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.56   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                            0.56   \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3                                                         0.55   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.55   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.44   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3           0.55   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.39   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3                                                    0.4   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                  0.4   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                 0.47   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.47   \n","\n","                                                                                                precision_test  \\\n","DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3                                                      0.72   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.72   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                             0.72   \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3                                                          0.44   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                    0.44   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                    0.72   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3            0.44   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3           0.83   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3                                                    0.44   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                  0.44   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                   0.5   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                 0.44   \n","\n","                                                                                                recall_oof  \\\n","DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3                                                  0.72   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                               0.63   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                         0.65   \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3                                                      0.72   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                0.72   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                0.57   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3        0.72   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3       0.57   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3                                                0.58   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                              0.58   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                              0.65   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                             0.65   \n","\n","                                                                                                recall_test  \\\n","DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3                                                   0.67   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                0.67   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                          0.67   \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3                                                       0.67   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.67   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3         0.67   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3        0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3                                                 0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.67   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.67   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                              0.67   \n","\n","                                                                                                accuracy_oof  \\\n","DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3                                                    0.75   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.73   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                            0.7   \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3                                                        0.69   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.69   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.69   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.69   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3         0.66   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3                                                  0.65   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.65   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.63   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.63   \n","\n","                                                                                                accuracy_test  \\\n","DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3                                                     0.67   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.67   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                            0.67   \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3                                                         0.67   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.67   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3           0.67   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3                                                   0.67   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                 0.67   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                 0.67   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.67   \n","\n","                                                                                                roc_auc_oof  \\\n","DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3                                                   0.75   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                0.73   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                           0.7   \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3                                                       0.69   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.69   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.69   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3         0.69   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3        0.66   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3                                                 0.65   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.65   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.63   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                              0.63   \n","\n","                                                                                                roc_auc_test  \\\n","DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3                                                    0.83   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.83   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                           0.83   \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3                                                        0.75   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.75   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.71   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.75   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3         0.81   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3                                                  0.75   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.75   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.75   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.75   \n","\n","                                                                                                                    confusion_test  \\\n","DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3                                             [[2, 0, 0], [1, 1, 0], [0, 1, 1]]   \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          [[2, 0, 0], [1, 1, 0], [0, 1, 1]]   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                    [[2, 0, 0], [1, 1, 0], [0, 1, 1]]   \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3                                                 [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                           [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                           [[2, 0, 0], [1, 1, 0], [0, 1, 1]]   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3   [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  [[1, 1, 0], [0, 2, 0], [0, 1, 1]]   \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3                                           [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                         [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                         [[2, 0, 0], [2, 0, 0], [0, 0, 2]]   \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","\n","                                                                                                                                                                                       params  \n","DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3                                                     {'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': None}  \n","DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                {'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': 'sqrt'}  \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3                          {'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': 'sqrt'}  \n","DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3                                                         {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  \n","DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  \n","DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                           {'modelo__class_weight': 'balanced', 'modelo__max_depth': 2, 'modelo__max_features': 'sqrt'}  \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3           {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          {'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': None}  \n","DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3                                                   {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  \n","DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': 'sqrt'}  \n","DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                 {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  \n","DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                {'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}  "],"text/html":["\n","  <div id=\"df-1681edb4-ee0e-493e-833b-107750bea0ba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>precision_oof</th>\n","      <th>precision_test</th>\n","      <th>recall_oof</th>\n","      <th>recall_test</th>\n","      <th>accuracy_oof</th>\n","      <th>accuracy_test</th>\n","      <th>roc_auc_oof</th>\n","      <th>roc_auc_test</th>\n","      <th>confusion_test</th>\n","      <th>params</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Frecuencia_sequías']_cv_3</th>\n","      <td>0.64</td>\n","      <td>0.72</td>\n","      <td>0.72</td>\n","      <td>0.67</td>\n","      <td>0.75</td>\n","      <td>0.67</td>\n","      <td>0.75</td>\n","      <td>0.83</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OB ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.56</td>\n","      <td>0.72</td>\n","      <td>0.63</td>\n","      <td>0.67</td>\n","      <td>0.73</td>\n","      <td>0.67</td>\n","      <td>0.73</td>\n","      <td>0.83</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': 'sqrt'}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OB ['Temperatura_promedio', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.56</td>\n","      <td>0.72</td>\n","      <td>0.65</td>\n","      <td>0.67</td>\n","      <td>0.7</td>\n","      <td>0.67</td>\n","      <td>0.7</td>\n","      <td>0.83</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': 'sqrt'}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Cambio_lluvias']_cv_3</th>\n","      <td>0.55</td>\n","      <td>0.44</td>\n","      <td>0.72</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.55</td>\n","      <td>0.44</td>\n","      <td>0.72</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_B ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.44</td>\n","      <td>0.72</td>\n","      <td>0.57</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.71</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","      <td>{'modelo__class_weight': 'balanced', 'modelo__max_depth': 2, 'modelo__max_features': 'sqrt'}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.55</td>\n","      <td>0.44</td>\n","      <td>0.72</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.67</td>\n","      <td>0.69</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.39</td>\n","      <td>0.83</td>\n","      <td>0.57</td>\n","      <td>0.67</td>\n","      <td>0.66</td>\n","      <td>0.67</td>\n","      <td>0.66</td>\n","      <td>0.81</td>\n","      <td>[[1, 1, 0], [0, 2, 0], [0, 1, 1]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 2, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Temperatura_promedio']_cv_3</th>\n","      <td>0.4</td>\n","      <td>0.44</td>\n","      <td>0.58</td>\n","      <td>0.67</td>\n","      <td>0.65</td>\n","      <td>0.67</td>\n","      <td>0.65</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3</th>\n","      <td>0.4</td>\n","      <td>0.44</td>\n","      <td>0.58</td>\n","      <td>0.67</td>\n","      <td>0.65</td>\n","      <td>0.67</td>\n","      <td>0.65</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': 'sqrt'}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_B ['Temperatura_promedio', 'Cambio_lluvias']_cv_3</th>\n","      <td>0.47</td>\n","      <td>0.5</td>\n","      <td>0.65</td>\n","      <td>0.67</td>\n","      <td>0.63</td>\n","      <td>0.67</td>\n","      <td>0.63</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","    <tr>\n","      <th>DecisionTreeClassifier_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3</th>\n","      <td>0.47</td>\n","      <td>0.44</td>\n","      <td>0.65</td>\n","      <td>0.67</td>\n","      <td>0.63</td>\n","      <td>0.67</td>\n","      <td>0.63</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__class_weight': None, 'modelo__max_depth': 1, 'modelo__max_features': None}</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1681edb4-ee0e-493e-833b-107750bea0ba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1681edb4-ee0e-493e-833b-107750bea0ba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1681edb4-ee0e-493e-833b-107750bea0ba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-65d7c7c0-d51a-41a9-bff1-e8e40d900967\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-65d7c7c0-d51a-41a9-bff1-e8e40d900967')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-65d7c7c0-d51a-41a9-bff1-e8e40d900967 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"precision_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.39,\n        \"max\": 0.64,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.64,\n          0.56,\n          0.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"precision_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.44,\n        \"max\": 0.83,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.44,\n          0.5,\n          0.72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.57,\n        \"max\": 0.72,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.63,\n          0.58,\n          0.65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.67,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.63,\n        \"max\": 0.75,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.67,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.63,\n        \"max\": 0.75,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.71,\n        \"max\": 0.83,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confusion_test\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 1.99 s, sys: 53.2 ms, total: 2.04 s\n","Wall time: 22.2 s\n"]}]},{"cell_type":"markdown","source":["**Análisis Clasificación Decision Tree**\n","___\n","\n","Tenemos que:\n","- Para 2 folds: hay varias combinaciones de parámetros y predictores que dan el mismo resultado accuracy_oof / accuracy_test = 0.67 / 0.67 y roc_auc oof / roc_auc test = 0.67 / 0.75, y todas fallan al predecir 2 instancias de impacto medio.\n","    - recall_oof = 0.5, recall_test = 0.67\n","    - matriz de confusión para el test set: [[2, 0, 0], [1, 0, 1], [0, 0, 2]]\n","    - El modelo está algo subajustado por la diferencia entre los roc-auc.\n","- Para 3 folds: la mejor predicción se tiene para accuracy_oof / accuracy_test = 0.75 / 0.67 y roc_auc oof / roc_auc test = 0.75 / 0.83, con el parámetro 'modelo__max_depth' = 2 (resto de parámetros por defecto). El único predictor es \"Frecuencia_sequías\".\n","    - recall_oof = 0.72, recall_test =\t0.67\n","    - La matriz de confusión para el test set es [[2, 0, 0], [1, 1, 0], [0, 1, 1]], falló en predecir 1 instancia de impacto medio y otra de alto.\n","    - El modelo está algo subajustado por la diferencia entre los roc-auc.\n","\n","En resumen, si bien estos modelos dan resultados razonables, no superan al mejor modelo obtenido con KNN."],"metadata":{"id":"tMh6EQtBKrwp"}},{"cell_type":"markdown","source":["####**Support Vector Machine**"],"metadata":{"id":"x3fBciJi_YA9"}},{"cell_type":"code","source":["%%time\n","\n","modelo = SVC(random_state=42, probability=True)\n","param_grid = {\n","    'modelo__C': [0.1, 1, 10, 100],   # 1 por defecto\n","    'modelo__kernel': ['linear', 'poly', 'rbf', 'sigmoid'],  # rbf por defecto\n","    'modelo__gamma': ['scale', 'auto']   # 'scale' por defecto\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='clasificacion', modelo=modelo, param_grid=param_grid, num_folds=2)\n","resultados_clasificacion_cv = actualizar_resultados_clasificacion_cv(resultados_clasificacion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"S0ZaRB57odzf","executionInfo":{"status":"ok","timestamp":1757365605617,"user_tz":180,"elapsed":38224,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"661ae696-ceb9-4c46-8331-b886af02488a"},"execution_count":104,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de clasificacion: \"SVC\" con validación cruzada (2 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                            precision_oof  \\\n","SVC_O ['Cambio_lluvias']_cv_2                                                        0.57   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.36   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                0.56   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2          0.56   \n","SVC_O ['Temperatura_promedio']_cv_2                                                  0.17   \n","\n","                                                                            precision_test  \\\n","SVC_O ['Cambio_lluvias']_cv_2                                                         0.89   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                   0.72   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                 0.67   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2           0.44   \n","SVC_O ['Temperatura_promedio']_cv_2                                                    0.5   \n","\n","                                                                            recall_oof  \\\n","SVC_O ['Cambio_lluvias']_cv_2                                                      0.5   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                               0.29   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                             0.43   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2       0.43   \n","SVC_O ['Temperatura_promedio']_cv_2                                               0.29   \n","\n","                                                                            recall_test  \\\n","SVC_O ['Cambio_lluvias']_cv_2                                                      0.83   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.67   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.67   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2        0.67   \n","SVC_O ['Temperatura_promedio']_cv_2                                                0.67   \n","\n","                                                                            accuracy_oof  \\\n","SVC_O ['Cambio_lluvias']_cv_2                                                        0.7   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.82   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.76   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2         0.76   \n","SVC_O ['Temperatura_promedio']_cv_2                                                 0.74   \n","\n","                                                                            accuracy_test  \\\n","SVC_O ['Cambio_lluvias']_cv_2                                                        0.83   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                  0.67   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                                0.67   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2          0.67   \n","SVC_O ['Temperatura_promedio']_cv_2                                                  0.67   \n","\n","                                                                            roc_auc_oof  \\\n","SVC_O ['Cambio_lluvias']_cv_2                                                       0.7   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                0.82   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                              0.76   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2        0.76   \n","SVC_O ['Temperatura_promedio']_cv_2                                                0.74   \n","\n","                                                                            roc_auc_test  \\\n","SVC_O ['Cambio_lluvias']_cv_2                                                       0.83   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                                 0.75   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                               0.83   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2         0.83   \n","SVC_O ['Temperatura_promedio']_cv_2                                                 0.25   \n","\n","                                                                                                confusion_test  \\\n","SVC_O ['Cambio_lluvias']_cv_2                                                [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                          [[2, 0, 0], [1, 1, 0], [0, 1, 1]]   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                        [[1, 1, 0], [1, 1, 0], [0, 0, 2]]   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2  [[2, 0, 0], [1, 0, 1], [0, 0, 2]]   \n","SVC_O ['Temperatura_promedio']_cv_2                                          [[2, 0, 0], [2, 0, 0], [0, 0, 2]]   \n","\n","                                                                                                                                              params  \n","SVC_O ['Cambio_lluvias']_cv_2                                                 {'modelo__C': 1, 'modelo__gamma': 'scale', 'modelo__kernel': 'linear'}  \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2                           {'modelo__C': 100, 'modelo__gamma': 'scale', 'modelo__kernel': 'poly'}  \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2                        {'modelo__C': 10, 'modelo__gamma': 'scale', 'modelo__kernel': 'linear'}  \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2   {'modelo__C': 1, 'modelo__gamma': 'auto', 'modelo__kernel': 'sigmoid'}  \n","SVC_O ['Temperatura_promedio']_cv_2                                            {'modelo__C': 10, 'modelo__gamma': 'scale', 'modelo__kernel': 'poly'}  "],"text/html":["\n","  <div id=\"df-8bfb0708-dc08-4cb4-b742-be1257bdd3e8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>precision_oof</th>\n","      <th>precision_test</th>\n","      <th>recall_oof</th>\n","      <th>recall_test</th>\n","      <th>accuracy_oof</th>\n","      <th>accuracy_test</th>\n","      <th>roc_auc_oof</th>\n","      <th>roc_auc_test</th>\n","      <th>confusion_test</th>\n","      <th>params</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>SVC_O ['Cambio_lluvias']_cv_2</th>\n","      <td>0.57</td>\n","      <td>0.89</td>\n","      <td>0.5</td>\n","      <td>0.83</td>\n","      <td>0.7</td>\n","      <td>0.83</td>\n","      <td>0.7</td>\n","      <td>0.83</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__C': 1, 'modelo__gamma': 'scale', 'modelo__kernel': 'linear'}</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.36</td>\n","      <td>0.72</td>\n","      <td>0.29</td>\n","      <td>0.67</td>\n","      <td>0.82</td>\n","      <td>0.67</td>\n","      <td>0.82</td>\n","      <td>0.75</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 1, 1]]</td>\n","      <td>{'modelo__C': 100, 'modelo__gamma': 'scale', 'modelo__kernel': 'poly'}</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_2</th>\n","      <td>0.56</td>\n","      <td>0.67</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.76</td>\n","      <td>0.67</td>\n","      <td>0.76</td>\n","      <td>0.83</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__C': 10, 'modelo__gamma': 'scale', 'modelo__kernel': 'linear'}</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_2</th>\n","      <td>0.56</td>\n","      <td>0.44</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.76</td>\n","      <td>0.67</td>\n","      <td>0.76</td>\n","      <td>0.83</td>\n","      <td>[[2, 0, 0], [1, 0, 1], [0, 0, 2]]</td>\n","      <td>{'modelo__C': 1, 'modelo__gamma': 'auto', 'modelo__kernel': 'sigmoid'}</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Temperatura_promedio']_cv_2</th>\n","      <td>0.17</td>\n","      <td>0.5</td>\n","      <td>0.29</td>\n","      <td>0.67</td>\n","      <td>0.74</td>\n","      <td>0.67</td>\n","      <td>0.74</td>\n","      <td>0.25</td>\n","      <td>[[2, 0, 0], [2, 0, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__C': 10, 'modelo__gamma': 'scale', 'modelo__kernel': 'poly'}</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8bfb0708-dc08-4cb4-b742-be1257bdd3e8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8bfb0708-dc08-4cb4-b742-be1257bdd3e8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8bfb0708-dc08-4cb4-b742-be1257bdd3e8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4c804ee7-4161-4c7a-a488-b3aeb4fd43e7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4c804ee7-4161-4c7a-a488-b3aeb4fd43e7')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4c804ee7-4161-4c7a-a488-b3aeb4fd43e7 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"precision_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.17,\n        \"max\": 0.57,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.36,\n          0.17,\n          0.57\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"precision_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.44,\n        \"max\": 0.89,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.72,\n          0.5,\n          0.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.29,\n        \"max\": 0.5,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.5,\n          0.29,\n          0.43\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.83,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.67,\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.7,\n        \"max\": 0.82,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.82,\n          0.74\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.83,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.67,\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.7,\n        \"max\": 0.82,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.82,\n          0.74\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.25,\n        \"max\": 0.83,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.83,\n          0.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confusion_test\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 3.11 s, sys: 74.4 ms, total: 3.18 s\n","Wall time: 38.2 s\n"]}]},{"cell_type":"code","source":["%%time\n","\n","modelo = SVC(random_state=42, probability=True)\n","param_grid = {\n","    'modelo__C': [0.1, 1, 10, 100],\n","    'modelo__kernel': ['linear', 'poly', 'rbf', 'sigmoid'],  # rbf por defecto\n","    'modelo__gamma': ['scale', 'auto']  # 'scale' por defecto\n","}\n","\n","m_ccv = compara_modelos_con_cv(df, tipo_modelo='clasificacion', modelo=modelo, param_grid=param_grid, num_folds=3)\n","resultados_clasificacion_cv = actualizar_resultados_clasificacion_cv(resultados_clasificacion_cv, m_ccv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":380},"id":"98T6AUTx_0py","executionInfo":{"status":"ok","timestamp":1757365664134,"user_tz":180,"elapsed":58509,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"5d691b2b-80ff-49df-bbfb-c61a9a520486"},"execution_count":105,"outputs":[{"output_type":"stream","name":"stdout","text":["Comparación de modelos de clasificacion: \"SVC\" con validación cruzada (3 folds) ... 15 modelos analizados por cada combinación de hiperparámetros\n","\n","Mostrando los mejores resultados:\n"]},{"output_type":"display_data","data":{"text/plain":["                                                                            precision_oof  \\\n","SVC_O ['Cambio_lluvias']_cv_3                                                        0.53   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.55   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.32   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.4   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.44   \n","\n","                                                                            precision_test  \\\n","SVC_O ['Cambio_lluvias']_cv_3                                                         0.89   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                 0.89   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3           0.89   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                   0.67   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                 0.5   \n","\n","                                                                            recall_oof  \\\n","SVC_O ['Cambio_lluvias']_cv_3                                                     0.57   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                             0.65   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3        0.5   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                               0.57   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                            0.43   \n","\n","                                                                            recall_test  \\\n","SVC_O ['Cambio_lluvias']_cv_3                                                      0.83   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                              0.83   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3        0.83   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                0.67   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                             0.67   \n","\n","                                                                            accuracy_oof  \\\n","SVC_O ['Cambio_lluvias']_cv_3                                                       0.88   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.8   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3         0.79   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.81   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                              0.67   \n","\n","                                                                            accuracy_test  \\\n","SVC_O ['Cambio_lluvias']_cv_3                                                        0.83   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                                0.83   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3          0.83   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                  0.67   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.67   \n","\n","                                                                            roc_auc_oof  \\\n","SVC_O ['Cambio_lluvias']_cv_3                                                      0.88   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.8   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3        0.79   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                0.81   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                             0.67   \n","\n","                                                                            roc_auc_test  \\\n","SVC_O ['Cambio_lluvias']_cv_3                                                       0.79   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                               0.79   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3         0.88   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                                 0.71   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                              0.79   \n","\n","                                                                                                confusion_test  \\\n","SVC_O ['Cambio_lluvias']_cv_3                                                [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3  [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                          [[1, 1, 0], [1, 1, 0], [0, 0, 2]]   \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                       [[0, 2, 0], [0, 2, 0], [0, 0, 2]]   \n","\n","                                                                                                                                                params  \n","SVC_O ['Cambio_lluvias']_cv_3                                                {'modelo__C': 100, 'modelo__gamma': 'scale', 'modelo__kernel': 'sigmoid'}  \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                         {'modelo__C': 10, 'modelo__gamma': 'scale', 'modelo__kernel': 'sigmoid'}  \n","SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3   {'modelo__C': 100, 'modelo__gamma': 'scale', 'modelo__kernel': 'linear'}  \n","SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3                               {'modelo__C': 10, 'modelo__gamma': 'scale', 'modelo__kernel': 'rbf'}  \n","SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3                        {'modelo__C': 100, 'modelo__gamma': 'scale', 'modelo__kernel': 'linear'}  "],"text/html":["\n","  <div id=\"df-e08b9292-f5e8-4866-bb51-3952ccb40db9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>precision_oof</th>\n","      <th>precision_test</th>\n","      <th>recall_oof</th>\n","      <th>recall_test</th>\n","      <th>accuracy_oof</th>\n","      <th>accuracy_test</th>\n","      <th>roc_auc_oof</th>\n","      <th>roc_auc_test</th>\n","      <th>confusion_test</th>\n","      <th>params</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>SVC_O ['Cambio_lluvias']_cv_3</th>\n","      <td>0.53</td>\n","      <td>0.89</td>\n","      <td>0.57</td>\n","      <td>0.83</td>\n","      <td>0.88</td>\n","      <td>0.83</td>\n","      <td>0.88</td>\n","      <td>0.79</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__C': 100, 'modelo__gamma': 'scale', 'modelo__kernel': 'sigmoid'}</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Temperatura_promedio', 'Cambio_lluvias']_cv_3</th>\n","      <td>0.55</td>\n","      <td>0.89</td>\n","      <td>0.65</td>\n","      <td>0.83</td>\n","      <td>0.8</td>\n","      <td>0.83</td>\n","      <td>0.8</td>\n","      <td>0.79</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__C': 10, 'modelo__gamma': 'scale', 'modelo__kernel': 'sigmoid'}</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Temperatura_promedio', 'Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.32</td>\n","      <td>0.89</td>\n","      <td>0.5</td>\n","      <td>0.83</td>\n","      <td>0.79</td>\n","      <td>0.83</td>\n","      <td>0.79</td>\n","      <td>0.88</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__C': 100, 'modelo__gamma': 'scale', 'modelo__kernel': 'linear'}</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_O ['Cambio_lluvias', 'Frecuencia_sequías']_cv_3</th>\n","      <td>0.4</td>\n","      <td>0.67</td>\n","      <td>0.57</td>\n","      <td>0.67</td>\n","      <td>0.81</td>\n","      <td>0.67</td>\n","      <td>0.81</td>\n","      <td>0.71</td>\n","      <td>[[1, 1, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__C': 10, 'modelo__gamma': 'scale', 'modelo__kernel': 'rbf'}</td>\n","    </tr>\n","    <tr>\n","      <th>SVC_OB ['Temperatura_promedio', 'Cambio_lluvias']_cv_3</th>\n","      <td>0.44</td>\n","      <td>0.5</td>\n","      <td>0.43</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.67</td>\n","      <td>0.79</td>\n","      <td>[[0, 2, 0], [0, 2, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__C': 100, 'modelo__gamma': 'scale', 'modelo__kernel': 'linear'}</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e08b9292-f5e8-4866-bb51-3952ccb40db9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e08b9292-f5e8-4866-bb51-3952ccb40db9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e08b9292-f5e8-4866-bb51-3952ccb40db9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-186cc281-ae3e-4435-956c-6017266aab17\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-186cc281-ae3e-4435-956c-6017266aab17')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-186cc281-ae3e-4435-956c-6017266aab17 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"get_ipython()\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"precision_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.32,\n        \"max\": 0.55,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.55,\n          0.44,\n          0.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"precision_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.5,\n        \"max\": 0.89,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.89,\n          0.67,\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.43,\n        \"max\": 0.65,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.65,\n          0.43,\n          0.57\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.83,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.67,\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.88,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.8,\n          0.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.83,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.67,\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.67,\n        \"max\": 0.88,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.8,\n          0.67\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.71,\n        \"max\": 0.88,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.79,\n          0.88\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confusion_test\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["CPU times: user 4.23 s, sys: 95 ms, total: 4.33 s\n","Wall time: 58.5 s\n"]}]},{"cell_type":"markdown","source":["**Análisis Support Vector Machine**\n","___\n","\n","Tenemos que:\n","- Para 2 folds: la mejor predicción se tiene para accuracy_oof / accuracy_test = 0.7 / 0.83 y roc_auc oof / roc_auc test = 0.7 / 0.83, para los parámetros 'C' = 1, 'gamma' = 'scale' y 'kernel' = 'linear' (resto de parámetros por defecto), y considera como único predictor a 'Cambio_lluvias'.\n","    - recall_oof = 0.5, recall_test = 0.83\n","    - El modelo está subajustado por la diferencia entre los roc-auc.\n","    - La matriz de confusión para el test set es [[2, 0, 0], [1, 1, 0], [0, 0, 2]], falló al predecir una instancia de impacto medio.\n","- Para 3 folds: la mejor predicción se tiene para accuracy_oof / accuracy_test = 0.88 / 0.83 y roc_auc oof / roc_auc test = 0.88 / 0.79, para los parámetros 'C' = 100, 'gamma' = 'scale' y 'kernel' = 'sigmoid' (resto de parámetros por defecto), y considera como único predictor a 'Cambio_lluvias'.\n","    - recall_oof = 0.57, recall_test = 0.83\n","    - El modelo está algo subajustado por la diferencia entre los roc-auc.\n","    - La matriz de confusión para el test set es [[2, 0, 0], [1, 1, 0], [0, 0, 2]], falló en predecir 1 instancia de impacto medio y otra de alto.\n","\n","Como conclusión, el modelo predicemejor cuando consideramos 3 folds, aunque algo subajustado y con recall_oof bajo.\n"],"metadata":{"id":"4V0ZpmZoa3rQ"}},{"cell_type":"markdown","source":["####**Resumen**"],"metadata":{"id":"ClnvBWHTz0jZ"}},{"cell_type":"code","source":["k = 0.8\n","criterio = (resultados_clasificacion_cv.roc_auc_oof>=k)\t& (resultados_clasificacion_cv.roc_auc_test>=k)\n","print(f'Mejores resultados para clasificación cuando el roc_auc de los sets oof y test son mayores o iguales a {k}:')\n","resultados_clasificacion_cv[criterio]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":116},"id":"woL2QsbuN33f","executionInfo":{"status":"ok","timestamp":1757366791489,"user_tz":180,"elapsed":61,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"586e4e51-b1f4-4859-eb44-33b4cd9890ca"},"execution_count":109,"outputs":[{"output_type":"stream","name":"stdout","text":["Mejores resultados para clasificación cuando el roc_auc de los sets oof y test son mayores o iguales a 0.8:\n"]},{"output_type":"execute_result","data":{"text/plain":["                                               precision_oof precision_test  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3          0.55           0.89   \n","\n","                                               recall_oof recall_test  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3       0.72        0.83   \n","\n","                                               accuracy_oof accuracy_test  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3          0.8          0.83   \n","\n","                                               roc_auc_oof roc_auc_test  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3         0.8         0.83   \n","\n","                                                                   confusion_test  \\\n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3  [[2, 0, 0], [1, 1, 0], [0, 0, 2]]   \n","\n","                                                                                                                  params  \n","KNeighborsClassifier_O ['Cambio_lluvias']_cv_3  {'modelo__n_neighbors': 5, 'modelo__p': 1, 'modelo__weights': 'uniform'}  "],"text/html":["\n","  <div id=\"df-65b85124-edf4-4e8a-b915-16d67a5647da\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>precision_oof</th>\n","      <th>precision_test</th>\n","      <th>recall_oof</th>\n","      <th>recall_test</th>\n","      <th>accuracy_oof</th>\n","      <th>accuracy_test</th>\n","      <th>roc_auc_oof</th>\n","      <th>roc_auc_test</th>\n","      <th>confusion_test</th>\n","      <th>params</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>KNeighborsClassifier_O ['Cambio_lluvias']_cv_3</th>\n","      <td>0.55</td>\n","      <td>0.89</td>\n","      <td>0.72</td>\n","      <td>0.83</td>\n","      <td>0.8</td>\n","      <td>0.83</td>\n","      <td>0.8</td>\n","      <td>0.83</td>\n","      <td>[[2, 0, 0], [1, 1, 0], [0, 0, 2]]</td>\n","      <td>{'modelo__n_neighbors': 5, 'modelo__p': 1, 'modelo__weights': 'uniform'}</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-65b85124-edf4-4e8a-b915-16d67a5647da')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-65b85124-edf4-4e8a-b915-16d67a5647da button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-65b85124-edf4-4e8a-b915-16d67a5647da');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"resultados_clasificacion_cv[criterio]\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"precision_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.55,\n        \"max\": 0.55,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"precision_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.89,\n        \"max\": 0.89,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.89\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.72,\n        \"max\": 0.72,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"recall_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.83,\n        \"max\": 0.83,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.8,\n        \"max\": 0.8,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"accuracy_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.83,\n        \"max\": 0.83,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_oof\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.8,\n        \"max\": 0.8,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"roc_auc_test\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": 0.83,\n        \"max\": 0.83,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confusion_test\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"params\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":109}]},{"cell_type":"markdown","source":["Como conclusión, para la tarea de predicción del impacto climático con este dataset, el modelo KNN, optimizado mediante validación cruzada para 3 folds y ajuste de hiperparámetros 'n_neighbors' = 5, 'p' = 1 y 'weights' = 'uniform', ofrece un rendimiento superior en comparación al resto de los modelos analizados, aunque el tamaño del dataset sigue siendo una limitación general para generalizar el resultado. Este modelo contempla como único predictor a 'Cambio_lluvias', lo qie lo convierte en un modelo extremadamente simple, que logra scores de recall_oof / recall_test = 0.72 / 0.83, accuracy_oof / accuracy_test = 0.8 / 0.83 y roc_auc oof / roc_auc test = 0.8 / 0.83 (ni sub ni sobre ajustado), con una matriz de confusión para el test set igual a  [[2, 0, 0], [1, 1, 0], [0, 0, 2]] (falla en predecir una instancia de impacto medio)."],"metadata":{"id":"YzzEhLzbdg_k"}},{"cell_type":"markdown","source":["##**5. Análisis de resultados y conclusiones (1 punto)**\n","- Compara los modelos utilizados y justifica cuál ofrece mejores resultados para la predicción y clasificación.\n","- Relaciona los hallazgos con posibles implicaciones en la seguridad alimentaria\n","global."],"metadata":{"id":"2AOKzhWKHz47"}},{"cell_type":"markdown","metadata":{"id":"6a77eacb"},"source":["___\n","**Compararación de los modelos de regresión utilizados para predecir la producción de alimentos:**\n","___\n","\n","- **Linear Regression:** En validación cruzada (2 y 3 folds), no se encontraron resultados aceptables según los criterios definidos (R² > 60% en oof y test, y delta_r2 <= 10%). Esto sugiere que un modelo lineal simple no logra capturar adecuadamente la relación en este dataset pequeño.\n","- **Ridge:** Con validación cruzada de 3 folds, se obtuvo un resultado aceptable con un ligero sobreajuste (R² oof / R² test = 69.59 / 63.41) utilizando los regresores originales y un parámetro alpha de 0.15.\n","- **Lasso:** Con validación cruzada de 3 folds, se obtuvieron los mejores resultados generales con un delta_r2 pequeño (R² oof / R² test = 65.14 / 66.63) y un parámetro alpha de 0.001. Los mejores regresores fueron 'Temperatura_promedio' y 'Cambio_lluvias', evitando la multicolinealidad asociada con 'Frecuencia_sequías'.\n","- **Decision Tree Regressor:** En validación cruzada (2 y 3 folds), se obtuvieron resultados aceptables con un leve sobreajuste (R² oof / R² test alrededor de 70 / 63). Aunque ofrecen buen rendimiento, el sobreajuste es un factor a considerar con datasets pequeños.\n","- **Random Forest Regressor:** A pesar de su buen desempeño en el análisis inicial sin validación cruzada, con la optimización y validación cruzada (2 y 3 folds), no se encontraron resultados aceptables que cumplieran los criterios definidos. Esto resalta la importancia de la validación cruzada para obtener una evaluación más realista.\n","\n","**Conclusión sobre la predicción:**\n","\n","Basándonos en los resultados de la validación cruzada y buscando un equilibrio entre un buen r2 en los conjuntos oof y test, y un delta_r2 bajo (para evitar sobre o subajuste), la **Regresión Lasso** optimizada con validación cruzada para 3 folds y un alpha de 0.001, utilizando 'Temperatura_promedio' y 'Cambio_lluvias' como predictores, ofrece el rendimiento más prometedor para la predicción de la producción de alimentos en este dataset. Aunque el tamaño del dataset sigue siendo una limitación para generalizar completamente estos hallazgos, este modelo Lasso parece ser el más equilibrado y con mejor capacidad de generalización entre los analizados con CV."]},{"cell_type":"markdown","metadata":{"id":"625d915d"},"source":["___\n","**Comparación de los modelos de clasificación utilizados para categorizar los países según el impacto climático, basados en los resultados de la validación cruzada:**\n","___\n","\n","- **K-Nearest Neighbors:** Con validación cruzada de 3 folds, el modelo con 'Cambio_lluvias' como único predictor y parámetros 'n_neighbors' = 5, 'p' = 1, y 'weights' = 'uniform' mostró un rendimiento prometedor (recall_oof / recall_test = 0.72 / 0.83, accuracy oof / accuracy test = 0.8 / 0.83, roc_auc oof / roc_auc test = 0.8 / 0.83). La matriz de confusión en el test set fue [[2, 0, 0], [1, 1, 0], [0, 0, 2]], indicando una falla en la predicción de una instancia de impacto medio. Este modelo es simple y parece equilibrado.\n","- **Decision Tree Classifier:** Con validación cruzada de 3 folds, los mejores resultados (recall_oof / recall_test = 0.72 / 0.67, accuracy oof / accuracy test alrededor de 0.75 / 0.67, roc_auc oof / roc_auc test alrededor de 0.75 / 0.83) se obtuvieron con diferentes combinaciones de parámetros y predictores (como 'Frecuencia_sequías' con max_depth=2). Aunque los resultados son razonables, las matrices de confusión mostraron dificultades para clasificar correctamente algunas instancias, especialmente de impacto medio y alto. Estos modelos tienden a estar algo subajustados.\n","- **Support Vector Machine:** Con validación cruzada de 3 folds, el modelo con 'Cambio_lluvias' como único predictor y parámetros 'C' = 1, 'gamma' = 'scale' y 'kernel' = 'sigmoid' mostró un buen rendimiento (recall_oof / recall_test = 0.57 / 0.83, accuracy oof / accuracy test = 0.88 / 0.83, roc_auc oof / roc_auc test = 0.88 / 0.79). Similar a KNN, falló en predecir una instancia de impacto medio. Aunque la accuracy es alta, la diferencia entre el roc_auc oof y la tasa de recall test podría sugerir un leve subajuste.\n","\n","**Conclusión sobre la clasificación:**\n","\n","Considerando los resultados de la validación cruzada, el modelo **K-Nearest Neighbors** con 'Cambio_lluvias' como único predictor y los hiperparámetros ajustados ('n_neighbors' = 5, 'p' = 1, 'weights' = 'uniform') parece ser el más adecuado para la tarea de clasificación en este dataset, logrando un buen equilibrio entre las métricas de rendimiento (recall, accuracy y roc_auc) en los conjuntos oof y test. Es importante reiterar que el tamaño pequeño del dataset limita la capacidad de generalización de estas conclusiones."]},{"cell_type":"markdown","source":["___\n","**Implicaciones en la seguridad alimentaria global**\n","___\n","\n","Los hallazgos sugieren que la Temperatura Promedio y el Cambio en las Lluvias son predictores clave de la producción agrícola y del impacto climático en este dataset.\n","\n","El océano, como gran regulador del clima global, influye directamente en estas variables:\n","\n","- Temperatura Promedio: El océano absorbe y distribuye calor, afectando las temperaturas del aire a nivel mundial. Cambios en la temperatura oceánica pueden alterar patrones de circulación atmosférica, impactando las temperaturas terrestres y, por ende, la producción agrícola.\n","- Cambio Lluvias: La evaporación oceánica es una fuente principal de humedad atmosférica. La temperatura del océano influye en la cantidad de evaporación y en la formación de nubes, afectando los patrones de precipitación global. Cambios en estos patrones pueden llevar a sequías o inundaciones que impactan directamente la agricultura.\n","\n","Por lo tanto, las alteraciones en el océano debido al cambio climático (como el aumento de la temperatura y cambios en las corrientes) tienen un impacto directo en la Temperatura Promedio y el Cambio en las Lluvias, que a su vez afectan la producción agrícola y la seguridad alimentaria global. Los modelos desarrollados resaltan la importancia de monitorear estas variables para predecir y mitigar los riesgos en la producción de alimentos."],"metadata":{"id":"or9GEM8ZlQDE"}},{"cell_type":"markdown","source":["##**Predicciones**"],"metadata":{"id":"6ozwerILs9jQ"}},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":531},"id":"40a397d5","executionInfo":{"status":"ok","timestamp":1757365664312,"user_tz":180,"elapsed":126,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"e91bab38-33eb-4903-c1c7-b7b34698a079"},"source":["# Mejor modelo de regresión (Regresión Lasso con 3 folds, alpha=0.001, predictores: Temperatura_promedio y Cambio_lluvias)\n","\n","best_regression_vars = ['Temperatura_promedio', 'Cambio_lluvias']\n","best_regression_model = Lasso(random_state=42, alpha=0.001)\n","\n","# Re-entrenar el preprocesador y el modelo con el conjunto de entrenamiento completo (X_train, y_train)\n","# Nota: X_train y y_train ya están definidos en celdas anteriores\n","\n","X_reg_train, X_reg_test, y_reg_train, y_reg_test = train_test_split(df[var_num], df[target], test_size=0.3, random_state=42)\n","\n","vars_std_reg = [var for var in best_regression_vars if var in var_cont]\n","vars_mms_reg = [var for var in best_regression_vars if var in var_disc]\n","\n","preprocessor_reg = ColumnTransformer(\n","    transformers=[\n","        ('num_std', StandardScaler(), vars_std_reg),\n","        ('num_mms', MinMaxScaler(), vars_mms_reg)\n","    ],\n","    verbose_feature_names_out=False\n",").set_output(transform='pandas')\n","\n","pipe_best_reg = Pipeline(steps=[\n","    ('preprocessor_sc', preprocessor_reg),\n","    ('poli', PolynomialFeatures(degree=2, include_bias=False, interaction_only=False)),\n","    ('selector', SeleccionarAtributos(best_regression_vars, orig=True, cuad=False, comb=False)),\n","    ('modelo', TransformedTargetRegressor(regressor=best_regression_model, func=lambda x:x/10E6, inverse_func=lambda x:x*10E6)),\n","]).set_output(transform=\"pandas\")\n","\n","pipe_best_reg.fit(X_reg_train[best_regression_vars], y_reg_train)\n","\n","# Predicciones para el test set (X_test)\n","y_pred_test_reg = pipe_best_reg.predict(X_reg_test[best_regression_vars])\n","print(\"Predicciones de Producción_alimentos para el test set (mejor modelo de Regresión):\")\n","display(pd.DataFrame(y_pred_test_reg, index=X_reg_test.index, columns=['Producción_alimentos_Pred']))\n","\n","r2_y_pred_test_reg = r2_score(y_reg_test, y_pred_test_reg)\n","mse_y_pred_test_reg = mean_squared_error(y_reg_test, y_pred_test_reg)\n","rmse_y_pred_test_reg = np.sqrt(mse_y_pred_test_reg)\n","mae_y_pred_test_reg = mean_absolute_error(y_reg_test, y_pred_test_reg)\n","\n","print(f'r2 para el test set: {r2_y_pred_test_reg:.2f}')\n","print(f'rmse para el test set: {rmse_y_pred_test_reg:.2f}')\n","print(f'mae para el test set: {mae_y_pred_test_reg:.2f}')\n","# \t23108488333.540001\t12858287303.84\t150900.95\t113394.388\t118241.65\t94462.611\t65.14\t66.63\t{'modelo__regressor__alpha': 0.001}\t1.49\n","\n","# Predicciones para el dataset de países eliminados (df_eliminados)\n","y_pred_eliminados_reg = pipe_best_reg.predict(df_eliminados[best_regression_vars])\n","print(\"\\nPredicciones de Producción_alimentos para países eliminados (mejor modelo de Regresión):\")\n","df_elim = pd.DataFrame(y_pred_eliminados_reg, index=df_eliminados.index, columns=['Producción_alimentos_Pred'])\n","df_elim['Producción_alimentos_Real'] = df_eliminados[target]\n","df_elim['Diferencia_real_pred'] = df_elim['Producción_alimentos_Real'] - df_elim['Producción_alimentos_Pred']\n","display(df_elim)"],"execution_count":107,"outputs":[{"output_type":"stream","name":"stdout","text":["Predicciones de Producción_alimentos para el test set (mejor modelo de Regresión):\n"]},{"output_type":"display_data","data":{"text/plain":["           Producción_alimentos_Pred\n","País                                \n","Alemania               826759.212025\n","Tailandia              475656.883184\n","India                  594512.521946\n","Argentina              596237.932445\n","Francia                773919.967984\n","Chile                  426137.818818"],"text/html":["\n","  <div id=\"df-fa8b630e-8c57-471f-ac0f-cdf9e964e2a2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Producción_alimentos_Pred</th>\n","    </tr>\n","    <tr>\n","      <th>País</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Alemania</th>\n","      <td>826759.212025</td>\n","    </tr>\n","    <tr>\n","      <th>Tailandia</th>\n","      <td>475656.883184</td>\n","    </tr>\n","    <tr>\n","      <th>India</th>\n","      <td>594512.521946</td>\n","    </tr>\n","    <tr>\n","      <th>Argentina</th>\n","      <td>596237.932445</td>\n","    </tr>\n","    <tr>\n","      <th>Francia</th>\n","      <td>773919.967984</td>\n","    </tr>\n","    <tr>\n","      <th>Chile</th>\n","      <td>426137.818818</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa8b630e-8c57-471f-ac0f-cdf9e964e2a2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fa8b630e-8c57-471f-ac0f-cdf9e964e2a2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fa8b630e-8c57-471f-ac0f-cdf9e964e2a2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-f22cd3b8-fabf-4a82-b641-f13ba7f3f425\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f22cd3b8-fabf-4a82-b641-f13ba7f3f425')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-f22cd3b8-fabf-4a82-b641-f13ba7f3f425 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df_elim)\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"Pa\\u00eds\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Alemania\",\n          \"Tailandia\",\n          \"Chile\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Producci\\u00f3n_alimentos_Pred\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 158715.44789246647,\n        \"min\": 426137.81881760346,\n        \"max\": 826759.2120253765,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          826759.2120253765,\n          475656.8831836124,\n          426137.81881760346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["r2 para el test set: 0.67\n","rmse para el test set: 113394.39\n","mae para el test set: 94462.61\n","\n","Predicciones de Producción_alimentos para países eliminados (mejor modelo de Regresión):\n"]},{"output_type":"display_data","data":{"text/plain":["         Producción_alimentos_Pred  Producción_alimentos_Real  \\\n","País                                                            \n","Japón                 1.043711e+06                     720000   \n","Noruega               8.753367e+05                     600000   \n","Egipto                8.146543e+05                     370000   \n","\n","         Diferencia_real_pred  \n","País                           \n","Japón          -323711.416958  \n","Noruega        -275336.713830  \n","Egipto         -444654.265230  "],"text/html":["\n","  <div id=\"df-997d6aed-35ce-437d-b8ca-f1d26f9d5462\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Producción_alimentos_Pred</th>\n","      <th>Producción_alimentos_Real</th>\n","      <th>Diferencia_real_pred</th>\n","    </tr>\n","    <tr>\n","      <th>País</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Japón</th>\n","      <td>1.043711e+06</td>\n","      <td>720000</td>\n","      <td>-323711.416958</td>\n","    </tr>\n","    <tr>\n","      <th>Noruega</th>\n","      <td>8.753367e+05</td>\n","      <td>600000</td>\n","      <td>-275336.713830</td>\n","    </tr>\n","    <tr>\n","      <th>Egipto</th>\n","      <td>8.146543e+05</td>\n","      <td>370000</td>\n","      <td>-444654.265230</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-997d6aed-35ce-437d-b8ca-f1d26f9d5462')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-997d6aed-35ce-437d-b8ca-f1d26f9d5462 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-997d6aed-35ce-437d-b8ca-f1d26f9d5462');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-3c040c87-f008-462a-b116-5c95e4cb7cdf\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3c040c87-f008-462a-b116-5c95e4cb7cdf')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-3c040c87-f008-462a-b116-5c95e4cb7cdf button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_34e35fe5-6cb0-4018-bc76-dfd94724b94f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_elim')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_34e35fe5-6cb0-4018-bc76-dfd94724b94f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_elim');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_elim","summary":"{\n  \"name\": \"df_elim\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Pa\\u00eds\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Jap\\u00f3n\",\n          \"Noruega\",\n          \"Egipto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Producci\\u00f3n_alimentos_Pred\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 118672.92514786817,\n        \"min\": 814654.2652304118,\n        \"max\": 1043711.416957741,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1043711.416957741,\n          875336.7138296481,\n          814654.2652304118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Producci\\u00f3n_alimentos_Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 177857,\n        \"min\": 370000,\n        \"max\": 720000,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          720000,\n          600000,\n          370000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Diferencia_real_pred\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 87212.11466245925,\n        \"min\": -444654.2652304118,\n        \"max\": -275336.7138296481,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          -323711.416957741,\n          -275336.7138296481,\n          -444654.2652304118\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["El modelo predice una mayor producción (menor impacto) climático para los países eliminados.\n","\n","Interesante observar que el valor absoluto de la diferencia en producción entre el valor predicho y el real, para los países eliminados, sigue el mismo orden (de mayor a menor) que en el gráfico de la distancia de Cook:\n","- Egipto,\n","- Japón, y\n","- Noruega."],"metadata":{"id":"83T06kwfsX6o"}},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":531},"id":"7dfc5739","executionInfo":{"status":"ok","timestamp":1757365664413,"user_tz":180,"elapsed":90,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}},"outputId":"87d7569f-4377-4840-ff03-35e27be69e71"},"source":["# Mejor modelo de clasificación (K-Nearest Neighbors con 3 folds, n_neighbors=5, p=1, weights='uniform', predictor: Cambio_lluvias)\n","\n","best_classification_vars = ['Cambio_lluvias']\n","best_classification_model = KNeighborsClassifier(n_neighbors=5, p=1, weights='uniform')\n","\n","# Re-entrenar el preprocesador y el modelo con el conjunto de entrenamiento completo (X_train, y_train)\n","# Nota: X_train y y_train para clasificación usan la columna 'impacto'\n","\n","X_train_cls, X_test_cls, y_train_cls, y_test_cls = train_test_split(df[var_num], df['impacto'], test_size=0.3, random_state=42, stratify=df['impacto'])\n","df_eliminados_cls = df_eliminados.copy()\n","\n","\n","vars_std_cls = [var for var in best_classification_vars if var in var_cont]\n","vars_mms_cls = [var for var in best_classification_vars if var in var_disc]\n","\n","\n","preprocessor_cls = ColumnTransformer(\n","    transformers=[\n","        ('num_std', StandardScaler(), vars_std_cls),\n","        ('num_mms', MinMaxScaler(), vars_mms_cls)\n","    ],\n","    verbose_feature_names_out=False\n",").set_output(transform='pandas')\n","\n","pipe_best_cls = Pipeline(steps=[\n","    ('preprocessor_sc', preprocessor_cls),\n","    ('poli', PolynomialFeatures(degree=2, include_bias=False, interaction_only=False)),\n","    ('selector', SeleccionarAtributos(best_classification_vars, orig=True, cuad=False, comb=False)),\n","    ('modelo', best_classification_model)\n","]).set_output(transform=\"pandas\")\n","\n","pipe_best_cls.fit(X_train_cls[best_classification_vars], y_train_cls)\n","\n","# Predicciones para el test set (X_test)\n","y_pred_test_cls = pipe_best_cls.predict(X_test_cls[best_classification_vars])\n","print(\"Predicciones de Impacto Climático para el test set (mejor modelo de Clasificación):\")\n","df_preds = pd.DataFrame(y_pred_test_cls, index=X_test_cls.index, columns=['Impacto_Pred'])\n","df_preds['Impacto_Real'] = y_test\n","display(df_preds)\n","\n","# Mapeo: '3_Alto' -> 2, '2_Medio' -> 1, '1_Bajo' -> 0 (siguiendo el orden inverso de producción)\n","label_mapping = {'3_Alto': 2, '2_Medio': 1, '1_Bajo': 0}\n","y_test_cls_numeric = y_test_cls.map(label_mapping)\n","y_pred_proba_test_cls = pipe_best_cls.predict_proba(X_test_cls[best_classification_vars])\n","\n","roc_auc_y_pred_test_cls = roc_auc_score(y_test_cls_numeric, y_pred_proba_test_cls, average='weighted', multi_class='ovr')\n","accuracy_y_pred_test_cls = accuracy_score(y_test_cls, y_pred_test_cls)\n","recall_score_y_pred_test_cls = recall_score(y_test_cls, y_pred_test_cls, average='weighted', zero_division=0)\n","\n","print(f'roc_auc para el test set: {roc_auc_y_pred_test_cls:.2f}')\n","print(f'accuracy para el test set: {accuracy_y_pred_test_cls:.2f}')\n","print(f'recall para el test set: {recall_score_y_pred_test_cls:.2f}')\n","# 0.72\t0.83\t0.8\t0.83\t0.8\t0.83\t[[2, 0, 0], [1, 1, 0], [0, 0, 2]]\n","\n","# Predicciones para el dataset de países eliminados (df_eliminados_cls)\n","y_pred_eliminados_cls = pipe_best_cls.predict(df_eliminados_cls[best_classification_vars])\n","print(\"\\nPredicciones de Impacto Climático para países eliminados (mejor modelo de Clasificación):\")\n","df_elim = pd.DataFrame(y_pred_eliminados_cls, index=df_eliminados_cls.index, columns=['Impacto_Pred'])\n","df_elim['Impacto_Real'] = pd.cut(df_eliminados[target], bins=bins, labels=['3_Alto', '2_Medio', '1_Bajo'])\n","display(df_elim)"],"execution_count":108,"outputs":[{"output_type":"stream","name":"stdout","text":["Predicciones de Impacto Climático para el test set (mejor modelo de Clasificación):\n"]},{"output_type":"display_data","data":{"text/plain":["          Impacto_Pred Impacto_Real\n","País                               \n","Rusia           1_Bajo       1_Bajo\n","Canadá          1_Bajo      2_Medio\n","Francia         1_Bajo       1_Bajo\n","Sudáfrica       3_Alto       3_Alto\n","Perú            3_Alto       3_Alto\n","España         2_Medio      2_Medio"],"text/html":["\n","  <div id=\"df-b5e179c7-1e20-4b1a-b4a9-26cef378af09\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Impacto_Pred</th>\n","      <th>Impacto_Real</th>\n","    </tr>\n","    <tr>\n","      <th>País</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Rusia</th>\n","      <td>1_Bajo</td>\n","      <td>1_Bajo</td>\n","    </tr>\n","    <tr>\n","      <th>Canadá</th>\n","      <td>1_Bajo</td>\n","      <td>2_Medio</td>\n","    </tr>\n","    <tr>\n","      <th>Francia</th>\n","      <td>1_Bajo</td>\n","      <td>1_Bajo</td>\n","    </tr>\n","    <tr>\n","      <th>Sudáfrica</th>\n","      <td>3_Alto</td>\n","      <td>3_Alto</td>\n","    </tr>\n","    <tr>\n","      <th>Perú</th>\n","      <td>3_Alto</td>\n","      <td>3_Alto</td>\n","    </tr>\n","    <tr>\n","      <th>España</th>\n","      <td>2_Medio</td>\n","      <td>2_Medio</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b5e179c7-1e20-4b1a-b4a9-26cef378af09')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b5e179c7-1e20-4b1a-b4a9-26cef378af09 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b5e179c7-1e20-4b1a-b4a9-26cef378af09');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-5c88552c-9d5d-4353-b311-840ee832f6e7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c88552c-9d5d-4353-b311-840ee832f6e7')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-5c88552c-9d5d-4353-b311-840ee832f6e7 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_b2b65313-49e3-4ccd-b0c4-0baf6364b3a7\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_preds')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b2b65313-49e3-4ccd-b0c4-0baf6364b3a7 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_preds');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_preds","summary":"{\n  \"name\": \"df_preds\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"Pa\\u00eds\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Rusia\",\n          \"Canad\\u00e1\",\n          \"Espa\\u00f1a\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impacto_Pred\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"1_Bajo\",\n          \"3_Alto\",\n          \"2_Medio\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impacto_Real\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"1_Bajo\",\n          \"2_Medio\",\n          \"3_Alto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["roc_auc para el test set: 0.83\n","accuracy para el test set: 0.83\n","recall para el test set: 0.83\n","\n","Predicciones de Impacto Climático para países eliminados (mejor modelo de Clasificación):\n"]},{"output_type":"display_data","data":{"text/plain":["        Impacto_Pred Impacto_Real\n","País                             \n","Japón         1_Bajo      2_Medio\n","Noruega       1_Bajo      2_Medio\n","Egipto        1_Bajo       3_Alto"],"text/html":["\n","  <div id=\"df-b93a5779-f8a4-4edf-89ef-8536b70b631c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Impacto_Pred</th>\n","      <th>Impacto_Real</th>\n","    </tr>\n","    <tr>\n","      <th>País</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Japón</th>\n","      <td>1_Bajo</td>\n","      <td>2_Medio</td>\n","    </tr>\n","    <tr>\n","      <th>Noruega</th>\n","      <td>1_Bajo</td>\n","      <td>2_Medio</td>\n","    </tr>\n","    <tr>\n","      <th>Egipto</th>\n","      <td>1_Bajo</td>\n","      <td>3_Alto</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b93a5779-f8a4-4edf-89ef-8536b70b631c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b93a5779-f8a4-4edf-89ef-8536b70b631c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b93a5779-f8a4-4edf-89ef-8536b70b631c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-0f3cd775-3a69-4599-9362-4297628ba347\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f3cd775-3a69-4599-9362-4297628ba347')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-0f3cd775-3a69-4599-9362-4297628ba347 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_cfbb2bd9-3fba-420c-8d17-a350cb985458\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_elim')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cfbb2bd9-3fba-420c-8d17-a350cb985458 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_elim');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_elim","summary":"{\n  \"name\": \"df_elim\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Pa\\u00eds\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Jap\\u00f3n\",\n          \"Noruega\",\n          \"Egipto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impacto_Pred\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"1_Bajo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impacto_Real\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"3_Alto\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["El modelo predice un menor impacto climático para los países eliminados."],"metadata":{"id":"NWnnksc_1WNx"}},{"cell_type":"code","source":[],"metadata":{"id":"Kkj8hpu2yl0K","executionInfo":{"status":"ok","timestamp":1757365664422,"user_tz":180,"elapsed":3,"user":{"displayName":"Marcela Manzo","userId":"12210128998480314632"}}},"execution_count":108,"outputs":[]}]}